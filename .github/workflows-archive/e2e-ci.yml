name: Run SAF-CLI E2E Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
       platform: [ ubuntu, macos, windows ]
    runs-on: ${{ matrix.platform }}-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@7088e561eb65bb68695d245aa206f005ef30921d # v4.1.0
        with:
          version: 10.18.0

      - name: Setup Node.js on ${{ matrix.platform }}
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          check-latest: true
          cache: 'pnpm'

      - name: Install cinc-auditor on windows
        if: ${{ matrix.platform == 'windows' }}
        shell: pwsh
        run: |
          Start-Process powershell -Verb RunAs
          . { iwr -useb https://omnitruck.cinc.sh/install.ps1 } | iex; install -project cinc-auditor
          $env:Path = $env:Path + ';C:\cinc-project\cinc-auditor\bin' + ';C:\cinc-project\cinc-auditor\embedded\bin'
          cinc-auditor -v

      - name: Install cinc-auditor on ubuntu or macos
        if: ${{ matrix.platform == 'ubuntu' || matrix.platform == 'macos' }}
        run: |
          curl -L https://omnitruck.cinc.sh/install.sh | sudo bash -s -- -P cinc-auditor

      - name: Install dependencies, compile, and run tests on ${{ matrix.platform }}
        run: |
          pnpm install --frozen-lockfile
          pnpm run prepack
          pnpm run test

      - name: Sanity check that the SAF CLI works with no dev dependencies on windows
        if: ${{ matrix.platform == 'windows' }}
        shell: pwsh
        run: |
          pnpm install --frozen-lockfile --prod
          pnpm run prepack
          $stderrFile = New-TemporaryFile
          ./bin/run -v 2> $stderrFile.FullName 1> $null
          $exitCode = $LASTEXITCODE
          $stderr = Get-Content $stderrFile.FullName -Raw
          Remove-Item $stderrFile
          if ($exitCode -eq 0) {
            if (($null -ne $stderr) -and ($stderr.Trim())) {
              Write-Host "Failed: received the following stderr:`n$stderr"
              exit 1
            }
          } else {
            Write-Host "Failed: received a non-zero exit code when doing 'saf -v'"
            exit 1
          }

      - name: Sanity check that the SAF CLI works with no dev dependencies on ubuntu or macos
        if: ${{ matrix.platform == 'ubuntu' || matrix.platform == 'macos' }}
        run: |
          pnpm install --frozen-lockfile --prod
          pnpm run prepack
          if stderr=$(./bin/run -v 2>&1 1>/dev/null); then
            [ -z "$stderr" ] || (printf "Failed: received the following stderr:\n%s\n" "$stderr"; exit 1)
          else
            echo "Failed: received a non-zero exit code when doing `saf -v`"
            exit 1
          fi
