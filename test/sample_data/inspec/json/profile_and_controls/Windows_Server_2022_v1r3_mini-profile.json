{"name":"microsoft-windows-server-2019-stig-baseline","title":"microsoft-windows-server-2019-stig-baseline","maintainer":"The Authors","copyright":"The Authors","copyright_email":"you@example.com","license":"Apache-2.0","summary":"Inspec Validation Profile for Microsoft Windows Member Server 2019 STIG","version":"1.3.24","inspec_version":">= 4.0","inputs":[],"supports":[],"controls":[{"title":"Windows Server 2019 administrative accounts must not be used with\napplications that access the Internet, such as web browsers, or with potential\nInternet sources, such as email.","desc":"Using applications that access the Internet or have potential Internet\nsources using administrative privileges exposes a system to compromise. If a\nflaw in an application is exploited while running as a privileged user, the\nentire system could be compromised. Web browsers and email are common attack\nvectors for introducing malicious code and must not be run with an\nadministrative account.\n\n    Since administrative accounts may generally change or work around technical\nrestrictions for running a web browser or other applications, it is essential\nthat policy require administrative accounts to not access the Internet or use\napplications such as email.\n\n    The policy should define specific exceptions for local service\nadministration. These exceptions may include HTTP(S)-based tools that are used\nfor the administration of the local system, services, or attached devices.\n\n    Whitelisting can be used to enforce the policy to ensure compliance.","descriptions":{"default":"Using applications that access the Internet or have potential Internet\nsources using administrative privileges exposes a system to compromise. If a\nflaw in an application is exploited while running as a privileged user, the\nentire system could be compromised. Web browsers and email are common attack\nvectors for introducing malicious code and must not be run with an\nadministrative account.\n\n    Since administrative accounts may generally change or work around technical\nrestrictions for running a web browser or other applications, it is essential\nthat policy require administrative accounts to not access the Internet or use\napplications such as email.\n\n    The policy should define specific exceptions for local service\nadministration. These exceptions may include HTTP(S)-based tools that are used\nfor the administration of the local system, services, or attached devices.\n\n    Whitelisting can be used to enforce the policy to ensure compliance.","rationale":"","check":"Determine whether organization policy, at a minimum, prohibits\nadministrative accounts from using applications that access the Internet, such\nas web browsers, or with potential Internet sources, such as email, except as\nnecessary for local service administration.\n\n    If it does not, this is a finding.\n\n    The organization may use technical means such as whitelisting to prevent\nthe use of browsers and mail applications to enforce this requirement.","fix":"Establish a policy, at minimum, to prohibit administrative accounts from\nusing applications that access the Internet, such as web browsers, or with\npotential Internet sources, such as email. Ensure the policy is enforced.\n\n    The organization may use technical means such as whitelisting to prevent\nthe use of browsers and mail applications to enforce this requirement."},"impact":0.7,"refs":[],"tags":{"severity":null,"gtitle":"SRG-OS-000480-GPOS-00227","gid":"V-93205","rid":"SV-103293r1_rule","stig_id":"WN19-00-000030","fix_id":"F-99451r1_fix","cci":["CCI-000366"],"nist":["CM-6 b","Rev_4"]},"code":"control \"V-93205\" do\n  title \"Windows Server 2019 administrative accounts must not be used with\napplications that access the Internet, such as web browsers, or with potential\nInternet sources, such as email.\"\n  desc  \"Using applications that access the Internet or have potential Internet\nsources using administrative privileges exposes a system to compromise. If a\nflaw in an application is exploited while running as a privileged user, the\nentire system could be compromised. Web browsers and email are common attack\nvectors for introducing malicious code and must not be run with an\nadministrative account.\n\n    Since administrative accounts may generally change or work around technical\nrestrictions for running a web browser or other applications, it is essential\nthat policy require administrative accounts to not access the Internet or use\napplications such as email.\n\n    The policy should define specific exceptions for local service\nadministration. These exceptions may include HTTP(S)-based tools that are used\nfor the administration of the local system, services, or attached devices.\n\n    Whitelisting can be used to enforce the policy to ensure compliance.\"\n  desc  \"rationale\", \"\"\n  desc  'check', \"Determine whether organization policy, at a minimum, prohibits\nadministrative accounts from using applications that access the Internet, such\nas web browsers, or with potential Internet sources, such as email, except as\nnecessary for local service administration.\n\n    If it does not, this is a finding.\n\n    The organization may use technical means such as whitelisting to prevent\nthe use of browsers and mail applications to enforce this requirement.\"\n  desc  'fix', \"Establish a policy, at minimum, to prohibit administrative accounts from\nusing applications that access the Internet, such as web browsers, or with\npotential Internet sources, such as email. Ensure the policy is enforced.\n\n    The organization may use technical means such as whitelisting to prevent\nthe use of browsers and mail applications to enforce this requirement.\"\n  impact 0.7\n  tag 'severity': nil\n  tag 'gtitle': 'SRG-OS-000480-GPOS-00227'\n  tag 'gid': 'V-93205'\n  tag 'rid': 'SV-103293r1_rule'\n  tag 'stig_id': 'WN19-00-000030'\n  tag 'fix_id': 'F-99451r1_fix'\n  tag 'cci': [\"CCI-000366\"]\n  tag 'nist': [\"CM-6 b\", \"Rev_4\"]\n\n  describe \"A manual review is required to verify that administrative accounts are not being used with applications that access the Internet, such as web browsers, or with potential Internet sources, such as email\" do\n    skip \"A manual review is required to verify that administrative accounts are not being used with applications that access the Internet, such as web browsers, or with potential Internet sources, such as email\"\n  end\nend\n","source_location":{"ref":"microsoft-windows-server-2019-stig-baseline/controls/V-93205.rb","line":3},"id":"V-93205"},{"title":"Windows Server 2019 members of the Backup Operators group must have\nseparate accounts for backup duties and normal operational tasks.","desc":"Backup Operators are able to read and write to any file in the system,\nregardless of the rights assigned to it. Backup and restore rights permit users\nto circumvent the file access restrictions present on NTFS disk drives for\nbackup and restore purposes. Members of the Backup Operators group must have\nseparate logon accounts for performing backup duties.","descriptions":{"default":"Backup Operators are able to read and write to any file in the system,\nregardless of the rights assigned to it. Backup and restore rights permit users\nto circumvent the file access restrictions present on NTFS disk drives for\nbackup and restore purposes. Members of the Backup Operators group must have\nseparate logon accounts for performing backup duties.","rationale":"","check":"If no accounts are members of the Backup Operators group, this is NA.\n\n    Verify users with accounts in the Backup Operators group have a separate\nuser account for backup functions and for performing normal user tasks.\n\n    If users with accounts in the Backup Operators group do not have separate\naccounts for backup functions and standard user functions, this is a finding.","fix":"Ensure each member of the Backup Operators group has separate\naccounts for backup functions and standard user functions."},"impact":0.0,"refs":[],"tags":{"severity":null,"gtitle":"SRG-OS-000480-GPOS-00227","gid":"V-93207","rid":"SV-103295r1_rule","stig_id":"WN19-00-000040","fix_id":"F-99453r1_fix","cci":["CCI-000366"],"nist":["CM-6 b","Rev_4"]},"code":"control \"V-93207\" do\n  title \"Windows Server 2019 members of the Backup Operators group must have\nseparate accounts for backup duties and normal operational tasks.\"\n  desc  \"Backup Operators are able to read and write to any file in the system,\nregardless of the rights assigned to it. Backup and restore rights permit users\nto circumvent the file access restrictions present on NTFS disk drives for\nbackup and restore purposes. Members of the Backup Operators group must have\nseparate logon accounts for performing backup duties.\"\n  desc  \"rationale\", \"\"\n  desc  'check', \"If no accounts are members of the Backup Operators group, this is NA.\n\n    Verify users with accounts in the Backup Operators group have a separate\nuser account for backup functions and for performing normal user tasks.\n\n    If users with accounts in the Backup Operators group do not have separate\naccounts for backup functions and standard user functions, this is a finding.\"\n  desc  'fix', \"Ensure each member of the Backup Operators group has separate\naccounts for backup functions and standard user functions.\"\n  impact 0.5\n  tag 'severity': nil\n  tag 'gtitle': 'SRG-OS-000480-GPOS-00227'\n  tag 'gid': 'V-93207'\n  tag 'rid': 'SV-103295r1_rule'\n  tag 'stig_id': 'WN19-00-000040'\n  tag 'fix_id': 'F-99453r1_fix'\n  tag 'cci': [\"CCI-000366\"]\n  tag 'nist': [\"CM-6 b\", \"Rev_4\"]\n\n  backup_operators_group = command(\"net localgroup 'Backup Operators' | Format-List | Findstr /V 'Alias Name Comment Members - command'\").stdout.strip.split(\"\\r\\n\")\n  backup_operators = input('backup_operators')\n  if backup_operators_group.empty?\n    impact 0.0\n    describe 'Backup Operators Group Empty' do\n      skip 'The control is N/A as there are no users in the Backup Operators group'\n    end\n  else\n    backup_operators_group.each do |user|\n      describe user do\n        it { should be_in backup_operators }\n      end\n    end\n  end\nend\n","source_location":{"ref":"microsoft-windows-server-2019-stig-baseline/controls/V-93207.rb","line":3},"id":"V-93207"},{"title":"Windows Server 2019 users with Administrative privileges must have separate accounts for administrative duties and normal operational tasks.","desc":"Using a privileged account to perform routine functions makes the computer vulnerable to malicious software inadvertently introduced during a session that has been granted full privileges.","descriptions":{"default":"Using a privileged account to perform routine functions makes the computer vulnerable to malicious software inadvertently introduced during a session that has been granted full privileges.","rationale":"","check":"Verify each user with administrative privileges has been assigned a unique administrative account separate from their standard user account.\n    If users with administrative privileges do not have separate accounts for administrative functions and standard user functions, this is a finding.","fix":"Ensure each user with administrative privileges has a separate account for user duties and one for privileged duties."},"impact":0.0,"refs":[],"tags":{"severity":null,"gtitle":"SRG-OS-000480-GPOS-00227","gid":"V-93369","rid":"SV-103457r1_rule","stig_id":"WN19-00-000010","fix_id":"F-99615r1_fix","cci":["CCI-000366"],"nist":["CM-6 b","Rev_4"]},"code":"control \"V-93369\" do\n  title \"Windows Server 2019 users with Administrative privileges must have separate accounts for administrative duties and normal operational tasks.\"\n  desc  \"Using a privileged account to perform routine functions makes the computer vulnerable to malicious software inadvertently introduced during a session that has been granted full privileges.\"\n  desc  \"rationale\", \"\"\n  desc  \"check\", \"Verify each user with administrative privileges has been assigned a unique administrative account separate from their standard user account.\n    If users with administrative privileges do not have separate accounts for administrative functions and standard user functions, this is a finding.\"\n  desc  \"fix\", \"Ensure each user with administrative privileges has a separate account for user duties and one for privileged duties.\"\n  impact 0.7\n  tag severity: nil\n  tag gtitle: \"SRG-OS-000480-GPOS-00227\"\n  tag gid: \"V-93369\"\n  tag rid: \"SV-103457r1_rule\"\n  tag stig_id: \"WN19-00-000010\"\n  tag fix_id: \"F-99615r1_fix\"\n  tag cci: [\"CCI-000366\"]\n  tag nist: [\"CM-6 b\", \"Rev_4\"]\n\n  administrators = input('administrators')\n  administrator_group = command(\"net localgroup Administrators | Format-List | Findstr /V 'Alias Name Comment Members - command'\").stdout.strip.split(\"\\r\\n\")\n  administrator_group.each do |user|\n    describe user.to_s do\n      it { should be_in administrators }\n    end\n  end\n  if administrator_group.empty?\n    impact 0.0\n    describe 'There are no users with administrative privileges' do\n      skip 'There are no users with administrative privileges so this control is NA'\n    end\n  end\nend","source_location":{"ref":"microsoft-windows-server-2019-stig-baseline/controls/V-93369.rb","line":3},"id":"V-93369"},{"title":"Windows Server 2019 manually managed application account passwords must be at least 15 characters in length.","desc":"Application/service account passwords must be of sufficient length to prevent being easily cracked. Application/service accounts that are manually managed must have passwords at least 15 characters in length.","descriptions":{"default":"Application/service account passwords must be of sufficient length to prevent being easily cracked. Application/service accounts that are manually managed must have passwords at least 15 characters in length.","rationale":"","check":"Determine if manually managed application/service accounts exist. If none exist, this is NA.\n\n    Verify the organization has a policy to ensure passwords for manually managed application/service accounts are at least 15 characters in length.\n\n    If such a policy does not exist or has not been implemented, this is a finding.","fix":"Establish a policy that requires application/service account passwords that are manually managed to be at least 15 characters in length. Ensure the policy is enforced."},"impact":0.5,"refs":[],"tags":{"severity":null,"gtitle":"SRG-OS-000078-GPOS-00046","gid":"V-93461","rid":"SV-103547r1_rule","stig_id":"WN19-00-000050","fix_id":"F-99705r1_fix","cci":["CCI-000205"],"nist":["IA-5 (1) (a)","Rev_4"]},"code":"control \"V-93461\" do\n  title \"Windows Server 2019 manually managed application account passwords must be at least #{input('minimum_password_length_manual')} characters in length.\"\n  desc  \"Application/service account passwords must be of sufficient length to prevent being easily cracked. Application/service accounts that are manually managed must have passwords at least #{input('minimum_password_length_manual')} characters in length.\"\n  desc  \"rationale\", \"\"\n  desc  \"check\", \"Determine if manually managed application/service accounts exist. If none exist, this is NA.\n\n    Verify the organization has a policy to ensure passwords for manually managed application/service accounts are at least #{input('minimum_password_length_manual')} characters in length.\n\n    If such a policy does not exist or has not been implemented, this is a finding.\"\n  desc  \"fix\", \"Establish a policy that requires application/service account passwords that are manually managed to be at least #{input('minimum_password_length_manual')} characters in length. Ensure the policy is enforced.\"\n  impact 0.5\n  tag severity: nil\n  tag gtitle: \"SRG-OS-000078-GPOS-00046\"\n  tag gid: \"V-93461\"\n  tag rid: \"SV-103547r1_rule\"\n  tag stig_id: \"WN19-00-000050\"\n  tag fix_id: \"F-99705r1_fix\"\n  tag cci: [\"CCI-000205\"]\n  tag nist: [\"IA-5 (1) (a)\", \"Rev_4\"]\n\n  mplm = input('minimum_password_length_manual')\n\n  describe 'Please Check all Accounts that are used for Services or Applications to validate they meet the Password Length Policy, Control is a Manual Check' do\n    skip \"Determine if manually managed application/service accounts exist. If none exist, this is NA. Verify the organization has a policy to ensure passwords for manually managed application/service accounts are at least #{mplm} characters in length.\"\n  end\nend\n","source_location":{"ref":"microsoft-windows-server-2019-stig-baseline/controls/V-93461.rb","line":3},"id":"V-93461"},{"title":"Windows Server 2019 passwords for the built-in Administrator account must be changed at least every 60 days.","desc":"The longer a password is in use, the greater the opportunity for someone to gain unauthorized knowledge of the password. The built-in Administrator account is not generally used and its password not may be changed as frequently as necessary. Changing the password for the built-in Administrator account on a regular basis will limit its exposure.\n    Organizations that use an automated tool, such Microsoft's Local Administrator Password Solution (LAPS), on domain-joined systems can configure this to occur more frequently. LAPS will change the password every \"30\" days by default.","descriptions":{"default":"The longer a password is in use, the greater the opportunity for someone to gain unauthorized knowledge of the password. The built-in Administrator account is not generally used and its password not may be changed as frequently as necessary. Changing the password for the built-in Administrator account on a regular basis will limit its exposure.\n    Organizations that use an automated tool, such Microsoft's Local Administrator Password Solution (LAPS), on domain-joined systems can configure this to occur more frequently. LAPS will change the password every \"30\" days by default.","rationale":"","check":"Review the password last set date for the built-in Administrator account.\n\n    Domain controllers:\n    Open \"PowerShell\".\n    Enter \"Get-ADUser -Filter * -Properties SID, PasswordLastSet | Where SID -Like \"*-500\" | Ft Name, SID, PasswordLastSet\".\n    If the \"PasswordLastSet\" date is greater than \"60\" days old, this is a finding.\n\n    Member servers and standalone systems:\n    Open \"Command Prompt\".\n    Enter 'Net User [account name] | Find /i \"Password Last Set\"', where [account name] is the name of the built-in administrator account.\n    (The name of the built-in Administrator account must be changed to something other than \"Administrator\" per STIG requirements.)\n    If the \"PasswordLastSet\" date is greater than \"60\" days old, this is a finding.","fix":"Change the built-in Administrator account password at least every \"60\" days.\n    Automated tools, such as Microsoft's LAPS, may be used on domain-joined member servers to accomplish this."},"impact":0.5,"refs":[],"tags":{"severity":null,"gtitle":"SRG-OS-000076-GPOS-00044","gid":"V-93473","rid":"SV-103559r1_rule","stig_id":"WN19-00-000020","fix_id":"F-99717r1_fix","cci":["CCI-000199"],"nist":["IA-5 (1) (d)","Rev_4"]},"code":"control \"V-93473\" do\n  title \"Windows Server 2019 passwords for the built-in Administrator account must be changed at least every 60 days.\"\n  desc  \"The longer a password is in use, the greater the opportunity for someone to gain unauthorized knowledge of the password. The built-in Administrator account is not generally used and its password not may be changed as frequently as necessary. Changing the password for the built-in Administrator account on a regular basis will limit its exposure.\n    Organizations that use an automated tool, such Microsoft's Local Administrator Password Solution (LAPS), on domain-joined systems can configure this to occur more frequently. LAPS will change the password every \\\"30\\\" days by default.\"\n  desc  \"rationale\", \"\"\n  desc  \"check\", \"Review the password last set date for the built-in Administrator account.\n\n    Domain controllers:\n    Open \\\"PowerShell\\\".\n    Enter \\\"Get-ADUser -Filter * -Properties SID, PasswordLastSet | Where SID -Like \\\"*-500\\\" | Ft Name, SID, PasswordLastSet\\\".\n    If the \\\"PasswordLastSet\\\" date is greater than \\\"60\\\" days old, this is a finding.\n\n    Member servers and standalone systems:\n    Open \\\"Command Prompt\\\".\n    Enter 'Net User [account name] | Find /i \\\"Password Last Set\\\"', where [account name] is the name of the built-in administrator account.\n    (The name of the built-in Administrator account must be changed to something other than \\\"Administrator\\\" per STIG requirements.)\n    If the \\\"PasswordLastSet\\\" date is greater than \\\"60\\\" days old, this is a finding.\"\n  desc  \"fix\", \"Change the built-in Administrator account password at least every \\\"60\\\" days.\n    Automated tools, such as Microsoft's LAPS, may be used on domain-joined member servers to accomplish this.\"\n  impact 0.5\n  tag severity: nil\n  tag gtitle: \"SRG-OS-000076-GPOS-00044\"\n  tag gid: \"V-93473\"\n  tag rid: \"SV-103559r1_rule\"\n  tag stig_id: \"WN19-00-000020\"\n  tag fix_id: \"F-99717r1_fix\"\n  tag cci: [\"CCI-000199\"]\n  tag nist: [\"IA-5 (1) (d)\", \"Rev_4\"]\n\n  administrator = input('local_administrator')\n  domain_role = command('wmic computersystem get domainrole | Findstr /v DomainRole').stdout.strip\n\n  if domain_role == '4' || domain_role == '5'\n    password_set_date = json({ command: \"Get-ADUser -Filter * -Properties SID, PasswordLastSet | Where-Object {$_.SID -like '*-500' -and $_.PasswordLastSet -lt ((Get-Date).AddDays(-60))} | Select-Object -ExpandProperty PasswordLastSet | ConvertTo-Json\" })\n    date = password_set_date[\"DateTime\"]\n    describe \"Password Last Set Date\" do\n      it \"The built-in Administrator account must be changed at least every 60 days.\" do\n        expect(date).to be_nil\n      end\n    end\n  else\n    if administrator == \"Administrator\"\n      describe 'The name of the built-in Administrator account:' do\n        it 'It must be changed to something other than \"Administrator\" per STIG requirements' do\n          failure_message = \"Change the built-in Administrator account name to something other than: #{administrator}\"\n          expect(administrator).not_to eq(\"Administrator\"), failure_message\n        end\n      end\n    end\n    local_password_set_date = json({ command: \"Get-LocalUser -name #{administrator} | Where-Object {$_.PasswordLastSet -le (Get-Date).AddDays(-60)} | Select-Object -ExpandProperty PasswordLastSet | ConvertTo-Json\"})\n    local_date =  local_password_set_date[\"DateTime\"]\n    describe \"Password Last Set Date\" do\n      it \"The built-in Administrator account must be changed at least every 60 days.\" do\n        expect(local_date).to be_nil\n      end\n    end\n  end\nend","source_location":{"ref":"microsoft-windows-server-2019-stig-baseline/controls/V-93473.rb","line":3},"id":"V-93473"}],"groups":[{"title":null,"controls":["V-93205"],"id":"controls/V-93205.rb"},{"title":null,"controls":["V-93207"],"id":"controls/V-93207.rb"},{"title":null,"controls":["V-93369"],"id":"controls/V-93369.rb"},{"title":null,"controls":["V-93461"],"id":"controls/V-93461.rb"},{"title":null,"controls":["V-93473"],"id":"controls/V-93473.rb"}],"sha256":"92e03573d4f043a9e095983afd0a2dbafb832ce15a7dd379c4cb39f3322f4e42","status_message":"","status":"loaded","generator":{"name":"inspec","version":"4.56.20"}}
