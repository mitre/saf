<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type='text/xsl' href='STIG_unclass.xsl'?><Benchmark xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cpe="http://cpe.mitre.org/language/2.0" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:dc="http://purl.org/dc/elements/1.1/" id="IBM_DB2_V10-5_LUW_STIG" xml:lang="en" xsi:schemaLocation="http://checklists.nist.gov/xccdf/1.1 http://nvd.nist.gov/schema/xccdf-1.1.4.xsd http://cpe.mitre.org/dictionary/2.0 http://cpe.mitre.org/files/cpe-dictionary_2.1.xsd" xmlns="http://checklists.nist.gov/xccdf/1.1"><status date="2019-09-27">accepted</status><title>IBM DB2 V10.5 LUW Security Technical Implementation Guide</title><description>This Security Technical Implementation Guide is published as a tool to improve the security of Department of Defense (DoD) information systems. The requirements are derived from the National Institute of Standards and Technology (NIST) 800-53 and related documents. Comments or proposed revisions to this document should be sent via email to the following address: disa.stig_spt@mail.mil.</description><notice id="terms-of-use" xml:lang="en"></notice><reference href="http://cyber.mil"><dc:publisher>DISA</dc:publisher><dc:source>STIG.DOD.MIL</dc:source></reference><plain-text id="release-info">Release: 4 Benchmark Date: 25 Oct 2019</plain-text><version>1</version><Profile id="MAC-1_Classified"><title>I - Mission Critical Classified</title><description>&lt;ProfileDescription&gt;&lt;/ProfileDescription&gt;</description><select idref="V-74429" selected="true" /><select idref="V-74431" selected="true" /><select idref="V-74433" selected="true" /><select idref="V-74435" selected="true" /><select idref="V-74437" selected="true" /><select idref="V-74439" selected="true" /><select idref="V-74441" selected="true" /><select idref="V-74443" selected="true" /><select idref="V-74445" selected="true" /><select idref="V-74447" selected="true" /><select idref="V-74449" selected="true" /><select idref="V-74451" selected="true" /><select idref="V-74453" selected="true" /><select idref="V-74455" selected="true" /><select idref="V-74457" selected="true" /><select idref="V-74459" selected="true" /><select idref="V-74461" selected="true" /><select idref="V-74463" selected="true" /><select idref="V-74465" selected="true" /><select idref="V-74467" selected="true" /><select idref="V-74469" selected="true" /><select idref="V-74471" selected="true" /><select idref="V-74473" selected="true" /><select idref="V-74475" selected="true" /><select idref="V-74477" selected="true" /><select idref="V-74479" selected="true" /><select idref="V-74481" selected="true" /><select idref="V-74483" selected="true" /><select idref="V-74485" selected="true" /><select idref="V-74487" selected="true" /><select idref="V-74489" selected="true" /><select idref="V-74491" selected="true" /><select idref="V-74493" selected="true" /><select idref="V-74495" selected="true" /><select idref="V-74497" selected="true" /><select idref="V-74499" selected="true" /><select idref="V-74501" selected="true" /><select idref="V-74503" selected="true" /><select idref="V-74505" selected="true" /><select idref="V-74507" selected="true" /><select idref="V-74509" selected="true" /><select idref="V-74511" selected="true" /><select idref="V-74513" selected="true" /><select idref="V-74515" selected="true" /><select idref="V-74517" selected="true" /><select idref="V-74519" selected="true" /><select idref="V-74561" selected="true" /><select idref="V-74563" selected="true" /><select idref="V-74565" selected="true" /><select idref="V-74567" selected="true" /><select idref="V-74569" selected="true" /><select idref="V-74571" selected="true" /><select idref="V-74573" selected="true" /><select idref="V-74575" selected="true" /><select idref="V-74577" selected="true" /><select idref="V-74579" selected="true" /><select idref="V-74581" selected="true" /><select idref="V-74583" selected="true" /><select idref="V-74585" selected="true" /><select idref="V-74587" selected="true" /><select idref="V-74589" selected="true" /><select idref="V-74591" selected="true" /><select idref="V-74593" selected="true" /><select idref="V-74595" selected="true" /><select idref="V-74597" selected="true" /><select idref="V-74599" selected="true" /><select idref="V-74601" selected="true" /><select idref="V-74603" selected="true" /><select idref="V-74605" selected="true" /><select idref="V-74607" selected="true" /><select idref="V-74609" selected="true" /><select idref="V-74611" selected="true" /><select idref="V-74613" selected="true" /><select idref="V-74615" selected="true" /><select idref="V-74617" selected="true" /><select idref="V-74619" selected="true" /><select idref="V-74621" selected="true" /><select idref="V-74623" selected="true" /><select idref="V-74625" selected="true" /><select idref="V-74627" selected="true" /><select idref="V-74629" selected="true" /><select idref="V-74631" selected="true" /><select idref="V-74633" selected="true" /><select idref="V-74635" selected="true" /><select idref="V-74637" selected="true" /><select idref="V-74639" selected="true" /><select idref="V-74641" selected="true" /><select idref="V-74643" selected="true" /><select idref="V-74645" selected="true" /><select idref="V-74647" selected="true" /><select idref="V-74649" selected="true" /><select idref="V-74651" selected="true" /><select idref="V-74653" selected="true" /></Profile><Profile id="MAC-1_Public"><title>I - Mission Critical Public</title><description>&lt;ProfileDescription&gt;&lt;/ProfileDescription&gt;</description><select idref="V-74429" selected="true" /><select idref="V-74431" selected="true" /><select idref="V-74433" selected="true" /><select idref="V-74435" selected="true" /><select idref="V-74437" selected="true" /><select idref="V-74439" selected="true" /><select idref="V-74441" selected="true" /><select idref="V-74443" selected="true" /><select idref="V-74445" selected="true" /><select idref="V-74447" selected="true" /><select idref="V-74449" selected="true" /><select idref="V-74451" selected="true" /><select idref="V-74453" selected="true" /><select idref="V-74455" selected="true" /><select idref="V-74457" selected="true" /><select idref="V-74459" selected="true" /><select idref="V-74461" selected="true" /><select idref="V-74463" selected="true" /><select idref="V-74465" selected="true" /><select idref="V-74467" selected="true" /><select idref="V-74469" selected="true" /><select idref="V-74471" selected="true" /><select idref="V-74473" selected="true" /><select idref="V-74475" selected="true" /><select idref="V-74477" selected="true" /><select idref="V-74479" selected="true" /><select idref="V-74481" selected="true" /><select idref="V-74483" selected="true" /><select idref="V-74485" selected="true" /><select idref="V-74487" selected="true" /><select idref="V-74489" selected="true" /><select idref="V-74491" selected="true" /><select idref="V-74493" selected="true" /><select idref="V-74495" selected="true" /><select idref="V-74497" selected="true" /><select idref="V-74499" selected="true" /><select idref="V-74501" selected="true" /><select idref="V-74503" selected="true" /><select idref="V-74505" selected="true" /><select idref="V-74507" selected="true" /><select idref="V-74509" selected="true" /><select idref="V-74511" selected="true" /><select idref="V-74513" selected="true" /><select idref="V-74515" selected="true" /><select idref="V-74517" selected="true" /><select idref="V-74519" selected="true" /><select idref="V-74561" selected="true" /><select idref="V-74563" selected="true" /><select idref="V-74565" selected="true" /><select idref="V-74567" selected="true" /><select idref="V-74569" selected="true" /><select idref="V-74571" selected="true" /><select idref="V-74573" selected="true" /><select idref="V-74575" selected="true" /><select idref="V-74577" selected="true" /><select idref="V-74579" selected="true" /><select idref="V-74581" selected="true" /><select idref="V-74583" selected="true" /><select idref="V-74585" selected="true" /><select idref="V-74587" selected="true" /><select idref="V-74589" selected="true" /><select idref="V-74591" selected="true" /><select idref="V-74593" selected="true" /><select idref="V-74595" selected="true" /><select idref="V-74597" selected="true" /><select idref="V-74599" selected="true" /><select idref="V-74601" selected="true" /><select idref="V-74603" selected="true" /><select idref="V-74605" selected="true" /><select idref="V-74607" selected="true" /><select idref="V-74609" selected="true" /><select idref="V-74611" selected="true" /><select idref="V-74613" selected="true" /><select idref="V-74615" selected="true" /><select idref="V-74617" selected="true" /><select idref="V-74619" selected="true" /><select idref="V-74621" selected="true" /><select idref="V-74623" selected="true" /><select idref="V-74625" selected="true" /><select idref="V-74627" selected="true" /><select idref="V-74629" selected="true" /><select idref="V-74631" selected="true" /><select idref="V-74633" selected="true" /><select idref="V-74635" selected="true" /><select idref="V-74637" selected="true" /><select idref="V-74639" selected="true" /><select idref="V-74641" selected="true" /><select idref="V-74643" selected="true" /><select idref="V-74645" selected="true" /><select idref="V-74647" selected="true" /><select idref="V-74649" selected="true" /><select idref="V-74651" selected="true" /><select idref="V-74653" selected="true" /></Profile><Profile id="MAC-1_Sensitive"><title>I - Mission Critical Sensitive</title><description>&lt;ProfileDescription&gt;&lt;/ProfileDescription&gt;</description><select idref="V-74429" selected="true" /><select idref="V-74431" selected="true" /><select idref="V-74433" selected="true" /><select idref="V-74435" selected="true" /><select idref="V-74437" selected="true" /><select idref="V-74439" selected="true" /><select idref="V-74441" selected="true" /><select idref="V-74443" selected="true" /><select idref="V-74445" selected="true" /><select idref="V-74447" selected="true" /><select idref="V-74449" selected="true" /><select idref="V-74451" selected="true" /><select idref="V-74453" selected="true" /><select idref="V-74455" selected="true" /><select idref="V-74457" selected="true" /><select idref="V-74459" selected="true" /><select idref="V-74461" selected="true" /><select idref="V-74463" selected="true" /><select idref="V-74465" selected="true" /><select idref="V-74467" selected="true" /><select idref="V-74469" selected="true" /><select idref="V-74471" selected="true" /><select idref="V-74473" selected="true" /><select idref="V-74475" selected="true" /><select idref="V-74477" selected="true" /><select idref="V-74479" selected="true" /><select idref="V-74481" selected="true" /><select idref="V-74483" selected="true" /><select idref="V-74485" selected="true" /><select idref="V-74487" selected="true" /><select idref="V-74489" selected="true" /><select idref="V-74491" selected="true" /><select idref="V-74493" selected="true" /><select idref="V-74495" selected="true" /><select idref="V-74497" selected="true" /><select idref="V-74499" selected="true" /><select idref="V-74501" selected="true" /><select idref="V-74503" selected="true" /><select idref="V-74505" selected="true" /><select idref="V-74507" selected="true" /><select idref="V-74509" selected="true" /><select idref="V-74511" selected="true" /><select idref="V-74513" selected="true" /><select idref="V-74515" selected="true" /><select idref="V-74517" selected="true" /><select idref="V-74519" selected="true" /><select idref="V-74561" selected="true" /><select idref="V-74563" selected="true" /><select idref="V-74565" selected="true" /><select idref="V-74567" selected="true" /><select idref="V-74569" selected="true" /><select idref="V-74571" selected="true" /><select idref="V-74573" selected="true" /><select idref="V-74575" selected="true" /><select idref="V-74577" selected="true" /><select idref="V-74579" selected="true" /><select idref="V-74581" selected="true" /><select idref="V-74583" selected="true" /><select idref="V-74585" selected="true" /><select idref="V-74587" selected="true" /><select idref="V-74589" selected="true" /><select idref="V-74591" selected="true" /><select idref="V-74593" selected="true" /><select idref="V-74595" selected="true" /><select idref="V-74597" selected="true" /><select idref="V-74599" selected="true" /><select idref="V-74601" selected="true" /><select idref="V-74603" selected="true" /><select idref="V-74605" selected="true" /><select idref="V-74607" selected="true" /><select idref="V-74609" selected="true" /><select idref="V-74611" selected="true" /><select idref="V-74613" selected="true" /><select idref="V-74615" selected="true" /><select idref="V-74617" selected="true" /><select idref="V-74619" selected="true" /><select idref="V-74621" selected="true" /><select idref="V-74623" selected="true" /><select idref="V-74625" selected="true" /><select idref="V-74627" selected="true" /><select idref="V-74629" selected="true" /><select idref="V-74631" selected="true" /><select idref="V-74633" selected="true" /><select idref="V-74635" selected="true" /><select idref="V-74637" selected="true" /><select idref="V-74639" selected="true" /><select idref="V-74641" selected="true" /><select idref="V-74643" selected="true" /><select idref="V-74645" selected="true" /><select idref="V-74647" selected="true" /><select idref="V-74649" selected="true" /><select idref="V-74651" selected="true" /><select idref="V-74653" selected="true" /></Profile><Profile id="MAC-2_Classified"><title>II - Mission Support Classified</title><description>&lt;ProfileDescription&gt;&lt;/ProfileDescription&gt;</description><select idref="V-74429" selected="true" /><select idref="V-74431" selected="true" /><select idref="V-74433" selected="true" /><select idref="V-74435" selected="true" /><select idref="V-74437" selected="true" /><select idref="V-74439" selected="true" /><select idref="V-74441" selected="true" /><select idref="V-74443" selected="true" /><select idref="V-74445" selected="true" /><select idref="V-74447" selected="true" /><select idref="V-74449" selected="true" /><select idref="V-74451" selected="true" /><select idref="V-74453" selected="true" /><select idref="V-74455" selected="true" /><select idref="V-74457" selected="true" /><select idref="V-74459" selected="true" /><select idref="V-74461" selected="true" /><select idref="V-74463" selected="true" /><select idref="V-74465" selected="true" /><select idref="V-74467" selected="true" /><select idref="V-74469" selected="true" /><select idref="V-74471" selected="true" /><select idref="V-74473" selected="true" /><select idref="V-74475" selected="true" /><select idref="V-74477" selected="true" /><select idref="V-74479" selected="true" /><select idref="V-74481" selected="true" /><select idref="V-74483" selected="true" /><select idref="V-74485" selected="true" /><select idref="V-74487" selected="true" /><select idref="V-74489" selected="true" /><select idref="V-74491" selected="true" /><select idref="V-74493" selected="true" /><select idref="V-74495" selected="true" /><select idref="V-74497" selected="true" /><select idref="V-74499" selected="true" /><select idref="V-74501" selected="true" /><select idref="V-74503" selected="true" /><select idref="V-74505" selected="true" /><select idref="V-74507" selected="true" /><select idref="V-74509" selected="true" /><select idref="V-74511" selected="true" /><select idref="V-74513" selected="true" /><select idref="V-74515" selected="true" /><select idref="V-74517" selected="true" /><select idref="V-74519" selected="true" /><select idref="V-74561" selected="true" /><select idref="V-74563" selected="true" /><select idref="V-74565" selected="true" /><select idref="V-74567" selected="true" /><select idref="V-74569" selected="true" /><select idref="V-74571" selected="true" /><select idref="V-74573" selected="true" /><select idref="V-74575" selected="true" /><select idref="V-74577" selected="true" /><select idref="V-74579" selected="true" /><select idref="V-74581" selected="true" /><select idref="V-74583" selected="true" /><select idref="V-74585" selected="true" /><select idref="V-74587" selected="true" /><select idref="V-74589" selected="true" /><select idref="V-74591" selected="true" /><select idref="V-74593" selected="true" /><select idref="V-74595" selected="true" /><select idref="V-74597" selected="true" /><select idref="V-74599" selected="true" /><select idref="V-74601" selected="true" /><select idref="V-74603" selected="true" /><select idref="V-74605" selected="true" /><select idref="V-74607" selected="true" /><select idref="V-74609" selected="true" /><select idref="V-74611" selected="true" /><select idref="V-74613" selected="true" /><select idref="V-74615" selected="true" /><select idref="V-74617" selected="true" /><select idref="V-74619" selected="true" /><select idref="V-74621" selected="true" /><select idref="V-74623" selected="true" /><select idref="V-74625" selected="true" /><select idref="V-74627" selected="true" /><select idref="V-74629" selected="true" /><select idref="V-74631" selected="true" /><select idref="V-74633" selected="true" /><select idref="V-74635" selected="true" /><select idref="V-74637" selected="true" /><select idref="V-74639" selected="true" /><select idref="V-74641" selected="true" /><select idref="V-74643" selected="true" /><select idref="V-74645" selected="true" /><select idref="V-74647" selected="true" /><select idref="V-74649" selected="true" /><select idref="V-74651" selected="true" /><select idref="V-74653" selected="true" /></Profile><Profile id="MAC-2_Public"><title>II - Mission Support Public</title><description>&lt;ProfileDescription&gt;&lt;/ProfileDescription&gt;</description><select idref="V-74429" selected="true" /><select idref="V-74431" selected="true" /><select idref="V-74433" selected="true" /><select idref="V-74435" selected="true" /><select idref="V-74437" selected="true" /><select idref="V-74439" selected="true" /><select idref="V-74441" selected="true" /><select idref="V-74443" selected="true" /><select idref="V-74445" selected="true" /><select idref="V-74447" selected="true" /><select idref="V-74449" selected="true" /><select idref="V-74451" selected="true" /><select idref="V-74453" selected="true" /><select idref="V-74455" selected="true" /><select idref="V-74457" selected="true" /><select idref="V-74459" selected="true" /><select idref="V-74461" selected="true" /><select idref="V-74463" selected="true" /><select idref="V-74465" selected="true" /><select idref="V-74467" selected="true" /><select idref="V-74469" selected="true" /><select idref="V-74471" selected="true" /><select idref="V-74473" selected="true" /><select idref="V-74475" selected="true" /><select idref="V-74477" selected="true" /><select idref="V-74479" selected="true" /><select idref="V-74481" selected="true" /><select idref="V-74483" selected="true" /><select idref="V-74485" selected="true" /><select idref="V-74487" selected="true" /><select idref="V-74489" selected="true" /><select idref="V-74491" selected="true" /><select idref="V-74493" selected="true" /><select idref="V-74495" selected="true" /><select idref="V-74497" selected="true" /><select idref="V-74499" selected="true" /><select idref="V-74501" selected="true" /><select idref="V-74503" selected="true" /><select idref="V-74505" selected="true" /><select idref="V-74507" selected="true" /><select idref="V-74509" selected="true" /><select idref="V-74511" selected="true" /><select idref="V-74513" selected="true" /><select idref="V-74515" selected="true" /><select idref="V-74517" selected="true" /><select idref="V-74519" selected="true" /><select idref="V-74561" selected="true" /><select idref="V-74563" selected="true" /><select idref="V-74565" selected="true" /><select idref="V-74567" selected="true" /><select idref="V-74569" selected="true" /><select idref="V-74571" selected="true" /><select idref="V-74573" selected="true" /><select idref="V-74575" selected="true" /><select idref="V-74577" selected="true" /><select idref="V-74579" selected="true" /><select idref="V-74581" selected="true" /><select idref="V-74583" selected="true" /><select idref="V-74585" selected="true" /><select idref="V-74587" selected="true" /><select idref="V-74589" selected="true" /><select idref="V-74591" selected="true" /><select idref="V-74593" selected="true" /><select idref="V-74595" selected="true" /><select idref="V-74597" selected="true" /><select idref="V-74599" selected="true" /><select idref="V-74601" selected="true" /><select idref="V-74603" selected="true" /><select idref="V-74605" selected="true" /><select idref="V-74607" selected="true" /><select idref="V-74609" selected="true" /><select idref="V-74611" selected="true" /><select idref="V-74613" selected="true" /><select idref="V-74615" selected="true" /><select idref="V-74617" selected="true" /><select idref="V-74619" selected="true" /><select idref="V-74621" selected="true" /><select idref="V-74623" selected="true" /><select idref="V-74625" selected="true" /><select idref="V-74627" selected="true" /><select idref="V-74629" selected="true" /><select idref="V-74631" selected="true" /><select idref="V-74633" selected="true" /><select idref="V-74635" selected="true" /><select idref="V-74637" selected="true" /><select idref="V-74639" selected="true" /><select idref="V-74641" selected="true" /><select idref="V-74643" selected="true" /><select idref="V-74645" selected="true" /><select idref="V-74647" selected="true" /><select idref="V-74649" selected="true" /><select idref="V-74651" selected="true" /><select idref="V-74653" selected="true" /></Profile><Profile id="MAC-2_Sensitive"><title>II - Mission Support Sensitive</title><description>&lt;ProfileDescription&gt;&lt;/ProfileDescription&gt;</description><select idref="V-74429" selected="true" /><select idref="V-74431" selected="true" /><select idref="V-74433" selected="true" /><select idref="V-74435" selected="true" /><select idref="V-74437" selected="true" /><select idref="V-74439" selected="true" /><select idref="V-74441" selected="true" /><select idref="V-74443" selected="true" /><select idref="V-74445" selected="true" /><select idref="V-74447" selected="true" /><select idref="V-74449" selected="true" /><select idref="V-74451" selected="true" /><select idref="V-74453" selected="true" /><select idref="V-74455" selected="true" /><select idref="V-74457" selected="true" /><select idref="V-74459" selected="true" /><select idref="V-74461" selected="true" /><select idref="V-74463" selected="true" /><select idref="V-74465" selected="true" /><select idref="V-74467" selected="true" /><select idref="V-74469" selected="true" /><select idref="V-74471" selected="true" /><select idref="V-74473" selected="true" /><select idref="V-74475" selected="true" /><select idref="V-74477" selected="true" /><select idref="V-74479" selected="true" /><select idref="V-74481" selected="true" /><select idref="V-74483" selected="true" /><select idref="V-74485" selected="true" /><select idref="V-74487" selected="true" /><select idref="V-74489" selected="true" /><select idref="V-74491" selected="true" /><select idref="V-74493" selected="true" /><select idref="V-74495" selected="true" /><select idref="V-74497" selected="true" /><select idref="V-74499" selected="true" /><select idref="V-74501" selected="true" /><select idref="V-74503" selected="true" /><select idref="V-74505" selected="true" /><select idref="V-74507" selected="true" /><select idref="V-74509" selected="true" /><select idref="V-74511" selected="true" /><select idref="V-74513" selected="true" /><select idref="V-74515" selected="true" /><select idref="V-74517" selected="true" /><select idref="V-74519" selected="true" /><select idref="V-74561" selected="true" /><select idref="V-74563" selected="true" /><select idref="V-74565" selected="true" /><select idref="V-74567" selected="true" /><select idref="V-74569" selected="true" /><select idref="V-74571" selected="true" /><select idref="V-74573" selected="true" /><select idref="V-74575" selected="true" /><select idref="V-74577" selected="true" /><select idref="V-74579" selected="true" /><select idref="V-74581" selected="true" /><select idref="V-74583" selected="true" /><select idref="V-74585" selected="true" /><select idref="V-74587" selected="true" /><select idref="V-74589" selected="true" /><select idref="V-74591" selected="true" /><select idref="V-74593" selected="true" /><select idref="V-74595" selected="true" /><select idref="V-74597" selected="true" /><select idref="V-74599" selected="true" /><select idref="V-74601" selected="true" /><select idref="V-74603" selected="true" /><select idref="V-74605" selected="true" /><select idref="V-74607" selected="true" /><select idref="V-74609" selected="true" /><select idref="V-74611" selected="true" /><select idref="V-74613" selected="true" /><select idref="V-74615" selected="true" /><select idref="V-74617" selected="true" /><select idref="V-74619" selected="true" /><select idref="V-74621" selected="true" /><select idref="V-74623" selected="true" /><select idref="V-74625" selected="true" /><select idref="V-74627" selected="true" /><select idref="V-74629" selected="true" /><select idref="V-74631" selected="true" /><select idref="V-74633" selected="true" /><select idref="V-74635" selected="true" /><select idref="V-74637" selected="true" /><select idref="V-74639" selected="true" /><select idref="V-74641" selected="true" /><select idref="V-74643" selected="true" /><select idref="V-74645" selected="true" /><select idref="V-74647" selected="true" /><select idref="V-74649" selected="true" /><select idref="V-74651" selected="true" /><select idref="V-74653" selected="true" /></Profile><Profile id="MAC-3_Classified"><title>III - Administrative Classified</title><description>&lt;ProfileDescription&gt;&lt;/ProfileDescription&gt;</description><select idref="V-74429" selected="true" /><select idref="V-74431" selected="true" /><select idref="V-74433" selected="true" /><select idref="V-74435" selected="true" /><select idref="V-74437" selected="true" /><select idref="V-74439" selected="true" /><select idref="V-74441" selected="true" /><select idref="V-74443" selected="true" /><select idref="V-74445" selected="true" /><select idref="V-74447" selected="true" /><select idref="V-74449" selected="true" /><select idref="V-74451" selected="true" /><select idref="V-74453" selected="true" /><select idref="V-74455" selected="true" /><select idref="V-74457" selected="true" /><select idref="V-74459" selected="true" /><select idref="V-74461" selected="true" /><select idref="V-74463" selected="true" /><select idref="V-74465" selected="true" /><select idref="V-74467" selected="true" /><select idref="V-74469" selected="true" /><select idref="V-74471" selected="true" /><select idref="V-74473" selected="true" /><select idref="V-74475" selected="true" /><select idref="V-74477" selected="true" /><select idref="V-74479" selected="true" /><select idref="V-74481" selected="true" /><select idref="V-74483" selected="true" /><select idref="V-74485" selected="true" /><select idref="V-74487" selected="true" /><select idref="V-74489" selected="true" /><select idref="V-74491" selected="true" /><select idref="V-74493" selected="true" /><select idref="V-74495" selected="true" /><select idref="V-74497" selected="true" /><select idref="V-74499" selected="true" /><select idref="V-74501" selected="true" /><select idref="V-74503" selected="true" /><select idref="V-74505" selected="true" /><select idref="V-74507" selected="true" /><select idref="V-74509" selected="true" /><select idref="V-74511" selected="true" /><select idref="V-74513" selected="true" /><select idref="V-74515" selected="true" /><select idref="V-74517" selected="true" /><select idref="V-74519" selected="true" /><select idref="V-74561" selected="true" /><select idref="V-74563" selected="true" /><select idref="V-74565" selected="true" /><select idref="V-74567" selected="true" /><select idref="V-74569" selected="true" /><select idref="V-74571" selected="true" /><select idref="V-74573" selected="true" /><select idref="V-74575" selected="true" /><select idref="V-74577" selected="true" /><select idref="V-74579" selected="true" /><select idref="V-74581" selected="true" /><select idref="V-74583" selected="true" /><select idref="V-74585" selected="true" /><select idref="V-74587" selected="true" /><select idref="V-74589" selected="true" /><select idref="V-74591" selected="true" /><select idref="V-74593" selected="true" /><select idref="V-74595" selected="true" /><select idref="V-74597" selected="true" /><select idref="V-74599" selected="true" /><select idref="V-74601" selected="true" /><select idref="V-74603" selected="true" /><select idref="V-74605" selected="true" /><select idref="V-74607" selected="true" /><select idref="V-74609" selected="true" /><select idref="V-74611" selected="true" /><select idref="V-74613" selected="true" /><select idref="V-74615" selected="true" /><select idref="V-74617" selected="true" /><select idref="V-74619" selected="true" /><select idref="V-74621" selected="true" /><select idref="V-74623" selected="true" /><select idref="V-74625" selected="true" /><select idref="V-74627" selected="true" /><select idref="V-74629" selected="true" /><select idref="V-74631" selected="true" /><select idref="V-74633" selected="true" /><select idref="V-74635" selected="true" /><select idref="V-74637" selected="true" /><select idref="V-74639" selected="true" /><select idref="V-74641" selected="true" /><select idref="V-74643" selected="true" /><select idref="V-74645" selected="true" /><select idref="V-74647" selected="true" /><select idref="V-74649" selected="true" /><select idref="V-74651" selected="true" /><select idref="V-74653" selected="true" /></Profile><Profile id="MAC-3_Public"><title>III - Administrative Public</title><description>&lt;ProfileDescription&gt;&lt;/ProfileDescription&gt;</description><select idref="V-74429" selected="true" /><select idref="V-74431" selected="true" /><select idref="V-74433" selected="true" /><select idref="V-74435" selected="true" /><select idref="V-74437" selected="true" /><select idref="V-74439" selected="true" /><select idref="V-74441" selected="true" /><select idref="V-74443" selected="true" /><select idref="V-74445" selected="true" /><select idref="V-74447" selected="true" /><select idref="V-74449" selected="true" /><select idref="V-74451" selected="true" /><select idref="V-74453" selected="true" /><select idref="V-74455" selected="true" /><select idref="V-74457" selected="true" /><select idref="V-74459" selected="true" /><select idref="V-74461" selected="true" /><select idref="V-74463" selected="true" /><select idref="V-74465" selected="true" /><select idref="V-74467" selected="true" /><select idref="V-74469" selected="true" /><select idref="V-74471" selected="true" /><select idref="V-74473" selected="true" /><select idref="V-74475" selected="true" /><select idref="V-74477" selected="true" /><select idref="V-74479" selected="true" /><select idref="V-74481" selected="true" /><select idref="V-74483" selected="true" /><select idref="V-74485" selected="true" /><select idref="V-74487" selected="true" /><select idref="V-74489" selected="true" /><select idref="V-74491" selected="true" /><select idref="V-74493" selected="true" /><select idref="V-74495" selected="true" /><select idref="V-74497" selected="true" /><select idref="V-74499" selected="true" /><select idref="V-74501" selected="true" /><select idref="V-74503" selected="true" /><select idref="V-74505" selected="true" /><select idref="V-74507" selected="true" /><select idref="V-74509" selected="true" /><select idref="V-74511" selected="true" /><select idref="V-74513" selected="true" /><select idref="V-74515" selected="true" /><select idref="V-74517" selected="true" /><select idref="V-74519" selected="true" /><select idref="V-74561" selected="true" /><select idref="V-74563" selected="true" /><select idref="V-74565" selected="true" /><select idref="V-74567" selected="true" /><select idref="V-74569" selected="true" /><select idref="V-74571" selected="true" /><select idref="V-74573" selected="true" /><select idref="V-74575" selected="true" /><select idref="V-74577" selected="true" /><select idref="V-74579" selected="true" /><select idref="V-74581" selected="true" /><select idref="V-74583" selected="true" /><select idref="V-74585" selected="true" /><select idref="V-74587" selected="true" /><select idref="V-74589" selected="true" /><select idref="V-74591" selected="true" /><select idref="V-74593" selected="true" /><select idref="V-74595" selected="true" /><select idref="V-74597" selected="true" /><select idref="V-74599" selected="true" /><select idref="V-74601" selected="true" /><select idref="V-74603" selected="true" /><select idref="V-74605" selected="true" /><select idref="V-74607" selected="true" /><select idref="V-74609" selected="true" /><select idref="V-74611" selected="true" /><select idref="V-74613" selected="true" /><select idref="V-74615" selected="true" /><select idref="V-74617" selected="true" /><select idref="V-74619" selected="true" /><select idref="V-74621" selected="true" /><select idref="V-74623" selected="true" /><select idref="V-74625" selected="true" /><select idref="V-74627" selected="true" /><select idref="V-74629" selected="true" /><select idref="V-74631" selected="true" /><select idref="V-74633" selected="true" /><select idref="V-74635" selected="true" /><select idref="V-74637" selected="true" /><select idref="V-74639" selected="true" /><select idref="V-74641" selected="true" /><select idref="V-74643" selected="true" /><select idref="V-74645" selected="true" /><select idref="V-74647" selected="true" /><select idref="V-74649" selected="true" /><select idref="V-74651" selected="true" /><select idref="V-74653" selected="true" /></Profile><Profile id="MAC-3_Sensitive"><title>III - Administrative Sensitive</title><description>&lt;ProfileDescription&gt;&lt;/ProfileDescription&gt;</description><select idref="V-74429" selected="true" /><select idref="V-74431" selected="true" /><select idref="V-74433" selected="true" /><select idref="V-74435" selected="true" /><select idref="V-74437" selected="true" /><select idref="V-74439" selected="true" /><select idref="V-74441" selected="true" /><select idref="V-74443" selected="true" /><select idref="V-74445" selected="true" /><select idref="V-74447" selected="true" /><select idref="V-74449" selected="true" /><select idref="V-74451" selected="true" /><select idref="V-74453" selected="true" /><select idref="V-74455" selected="true" /><select idref="V-74457" selected="true" /><select idref="V-74459" selected="true" /><select idref="V-74461" selected="true" /><select idref="V-74463" selected="true" /><select idref="V-74465" selected="true" /><select idref="V-74467" selected="true" /><select idref="V-74469" selected="true" /><select idref="V-74471" selected="true" /><select idref="V-74473" selected="true" /><select idref="V-74475" selected="true" /><select idref="V-74477" selected="true" /><select idref="V-74479" selected="true" /><select idref="V-74481" selected="true" /><select idref="V-74483" selected="true" /><select idref="V-74485" selected="true" /><select idref="V-74487" selected="true" /><select idref="V-74489" selected="true" /><select idref="V-74491" selected="true" /><select idref="V-74493" selected="true" /><select idref="V-74495" selected="true" /><select idref="V-74497" selected="true" /><select idref="V-74499" selected="true" /><select idref="V-74501" selected="true" /><select idref="V-74503" selected="true" /><select idref="V-74505" selected="true" /><select idref="V-74507" selected="true" /><select idref="V-74509" selected="true" /><select idref="V-74511" selected="true" /><select idref="V-74513" selected="true" /><select idref="V-74515" selected="true" /><select idref="V-74517" selected="true" /><select idref="V-74519" selected="true" /><select idref="V-74561" selected="true" /><select idref="V-74563" selected="true" /><select idref="V-74565" selected="true" /><select idref="V-74567" selected="true" /><select idref="V-74569" selected="true" /><select idref="V-74571" selected="true" /><select idref="V-74573" selected="true" /><select idref="V-74575" selected="true" /><select idref="V-74577" selected="true" /><select idref="V-74579" selected="true" /><select idref="V-74581" selected="true" /><select idref="V-74583" selected="true" /><select idref="V-74585" selected="true" /><select idref="V-74587" selected="true" /><select idref="V-74589" selected="true" /><select idref="V-74591" selected="true" /><select idref="V-74593" selected="true" /><select idref="V-74595" selected="true" /><select idref="V-74597" selected="true" /><select idref="V-74599" selected="true" /><select idref="V-74601" selected="true" /><select idref="V-74603" selected="true" /><select idref="V-74605" selected="true" /><select idref="V-74607" selected="true" /><select idref="V-74609" selected="true" /><select idref="V-74611" selected="true" /><select idref="V-74613" selected="true" /><select idref="V-74615" selected="true" /><select idref="V-74617" selected="true" /><select idref="V-74619" selected="true" /><select idref="V-74621" selected="true" /><select idref="V-74623" selected="true" /><select idref="V-74625" selected="true" /><select idref="V-74627" selected="true" /><select idref="V-74629" selected="true" /><select idref="V-74631" selected="true" /><select idref="V-74633" selected="true" /><select idref="V-74635" selected="true" /><select idref="V-74637" selected="true" /><select idref="V-74639" selected="true" /><select idref="V-74641" selected="true" /><select idref="V-74643" selected="true" /><select idref="V-74645" selected="true" /><select idref="V-74647" selected="true" /><select idref="V-74649" selected="true" /><select idref="V-74651" selected="true" /><select idref="V-74653" selected="true" /></Profile><Group id="V-74429"><title>SRG-APP-000001-DB-000031</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89103r1_rule" severity="medium" weight="10.0"><version>DB2X-00-000200</version><title>DB2 must limit the number of concurrent sessions to an organization-defined number per user for all accounts and/or account types.</title><description>&lt;VulnDiscussion&gt;Database management includes the ability to control the number of users and user sessions utilizing a DBMS. Unlimited concurrent connections to the DBMS could allow a successful Denial of Service (DoS) attack by exhausting connection resources; and a system can also fail or be degraded by an overload of legitimate users. Limiting the number of concurrent sessions per user is helpful in reducing these risks.

This requirement addresses concurrent session control for a single account. It does not address concurrent sessions by a single user via multiple system accounts; and it does not deal with the total number of sessions across all accounts.

The capability to limit the number of concurrent sessions per user must be configured in or added to the DBMS (for example, by use of a logon trigger), when this is technically feasible. Note that it is not sufficient to limit sessions via a web server or application server alone, because legitimate users and adversaries can potentially connect to the DBMS by other means.

The organization will need to define the maximum number of concurrent sessions by account type, by account, or a combination thereof. In deciding on the appropriate number, it is important to consider the work requirements of the various types of users. For example, 2 might be an acceptable limit for general users accessing the database via an application; but 10 might be too few for a database administrator using a database management GUI tool, where each query tab and navigation pane may count as a separate session.

(Sessions may also be referred to as connections or logons, which for the purposes of this requirement are synonyms.)&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000054</ident><fixtext fixref="F-81029r1_fix">Create the stored procedure per organization guidelines to restrict the number of concurrent sessions using the CREATE or REPLACE procedure:
DB2&gt; CREATE or REPLACE   PROCEDURE &lt;DBINST1.MY_CONNECT&gt; (Example below.)

Update the database CONNECT_PROC parameter to set to the procedure created in previous step:

     $db2 update db cfg using CONNECT_PROC db2inst1.my_connect

Grant execute to the public to connect the procedure.
DB2&gt; GRANT EXECUTE ON procedure &lt;schema&gt;.MY_CONNECT_MAIN TO PUBLIC

Note:  This is an example. Modify and test to comply with organization policy.

CREATE OR REPLACE PROCEDURE db2inst1.my_connect_main()
BEGIN
   DECLARE vcount integer;
   DECLARE vcount_admin integer;
 SELECT COUNT(*) INTO vcount FROM table(mon_get_connection(NULL, NULL, 0)) WHERE session_auth_id = session_user and application_handle != mon_get_application_handle();
 SELECT COUNT(*) INTO vcount_admin FROM table (sysproc.auth_list_authorities_for_authid(session_user,'U')) as t WHERE authority in ('SYSMON','SYSADM','DBADM','SECADM','SYSCTRL','SYSMAINT')and (d_user='Y' OR d_group='Y' OR d_public='Y' OR role_user='Y' or role_group='Y' or role_public='Y' or d_role='Y');
IF (vcount_admin &gt; 0 AND vcount &gt; 5)
THEN
      SIGNAL SQLSTATE '42502' SET MESSAGE_TEXT='Connection refused. More than 5 connections not allowed for admin!';
ELSEIF (vcount &gt; 3 AND vcount_admin = 0)
THEN
      SIGNAL SQLSTATE '42502' SET MESSAGE_TEXT='Connection refused. More than 3 connections not allowed!';
END IF;
END
@ 

Note: @ sign in above statement is statement terminator, using db2 –t option, statement terminator can be changed 

DB2&gt; GRANT EXECUTE ON PROCEDURE  db2inst1.my_connect_main TO PUBLIC

     $db2 UPDATE DB CFG USING CONNECT_PROC db2inst1. my_connect_main</fixtext><fix id="F-81029r1_fix" /><check system="C-74355r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Determine whether the system documentation specifies limits on the number of concurrent DBMS sessions per account by type of user. If it does not, assume a limit of 10 for database administrators and 2 for all other users.

The DB2 CONNECT_PROC configuration parameter allows the input of a two-part connect procedure name that will implicitly be executed every time an application connects to the database.
 
Find the value of CONNECT_PROC by running the following command:

     $db2 get db cfg

If the value of CONNECT_PROC is null (i.e., not set), this is a finding. 

If the value of CONNECT_PROC is set, run the following command to review the DDL for the connect procedure: 
DB2&gt; SELECT text FROM SYSCAT.ROUTINES WHERE ROUTINENAME=&lt;MY_CONNECT&gt;

If the connect procedure does not restrict the user sessions as per organization guidelines, this is a finding.</check-content></check></Rule></Group><Group id="V-74431"><title>SRG-APP-000023-DB-000001</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89105r1_rule" severity="medium" weight="10.0"><version>DB2X-00-000300</version><title>DB2 must integrate with an organization-level authentication/access mechanism providing account management and automation for all users, groups, roles, and any other principals.</title><description>&lt;VulnDiscussion&gt;Enterprise environments make account management for applications and databases challenging and complex. A manual process for account management functions adds the risk of a potential oversight or other error. Managing accounts for the same person in multiple places is inefficient and prone to problems with consistency and synchronization.

A comprehensive application account management process that includes automation helps to ensure that accounts designated as requiring attention are consistently and promptly addressed. 

Examples include, but are not limited to, using automation to take action on multiple accounts designated as inactive, suspended, or terminated, or by disabling accounts located in non-centralized account stores, such as multiple servers. Account management functions can also include: assignment of group or role membership; identifying account type; specifying user access authorizations (i.e., privileges); account removal, update, or termination; and administrative alerts. The use of automated mechanisms can include, for example: using email or text messaging to notify account managers when users are terminated or transferred; using the information system to monitor account usage; and using automated telephone notification to report atypical system account usage.

The DBMS must be configured to automatically utilize organization-level account management functions, and these functions must immediately enforce the organization's current account policy. 

Automation may be comprised of differing technologies that when placed together contain an overall mechanism supporting an organization's automated account management requirements.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000015</ident><fixtext fixref="F-81031r4_fix">Create an IBMLDAPSecurity.ini file at the default name and location for the IBM LDAP security plug-in configuration file:

    On UNIX/LINUX:  $INSTHOME/sqllib/cfg/IBMLDAPSecurity.ini
    On Windows:  %DB2PATH%\cfg\IBMLDAPSecurity.ini

To create the file in a non-default location, set the environment variable DB2LDAPSecurityConfig to the directory name where configuration file IBMLDAPSecurity.ini is located. 

Set the value of SRVCON_PW_PLUGIN to IBMLDAPauthserver for instance by running the following command:

     $db2 update dbm cfg using SRVCON_PW_PLUGIN IBMLDAPauthserver immediate

Refer to details below to determine appropriate values in LDAP configuration file.

-- SERVER-RELATED values:
1) LDAP_HOST - The name of the LDAP server(s) - This is a space separated list of LDAP server host names or IP addresses, with an optional port number for each one. 

For example: host1[:port1] [host2:[port2] ... The default port number is 389, or 636 if SSL is enabled.

2) ENABLE_SSL - To enable SSL support, set ENABLE_SSL to TRUE (you must have the GSKit installed). This is an optional parameter; it defaults to FALSE (no SSL support).

3) SSL_KEYFILE - The path for the SSL keyring. A keyfile is only required if your LDAP server is using a certificate that is not automatically trusted by your GSKit installation. 

For example: SSL_KEYFILE = /home/db2inst1/IBMLDAPSecurity.kdb

4) SSL_PW - The SSL keyring password. For example: SSL_PW = keyfile-password

5) SECURITY_PROTOCOL - To enable TLS 1.2 support, set SECURITY_PROTOCOL to TLSV12. To enable TLS 1.0, 1.1, and 1.2 support, set SECURITY_PROTOCOL to ALL. 

By default, SECURITY_PROTOCOL is not set. This setting means TLS 1.2 is not supported.

-- USER_RELATED values:
1) USER_OBJECTCLASS - The LDAP object class used for users. 

Generally, set USER_OBJECTCLASS to inetOrgPerson (the user for Microsoft Active Directory) 

For example: USER_OBJECTCLASS = inetOrgPerson

2) USER_BASEDN -  The LDAP base DN to use when searching for users. If not specified, user searches start at the root of the LDAP directory. Some LDAP servers require that you specify a value for this parameter. 

For example: USER_BASEDN = o=ibm

3) USERID_ATTRIBUTE - The LDAP user attribute that represents the user ID. The USERID_ATTRIBUTE attribute is combined with the USER_OBJECTCLASS and USER_BASEDN (if specified) to construct an LDAP search filter when a user issues a DB2 CONNECT statement with an unqualified user ID. 

For example, if USERID_ATTRIBUTE = uid, then issuing this statement: db2 connect to MYDB user bob using bobpass results in the following search filter:
&amp;(objectClass=inetOrgPerson)(uid=bob)

4) AUTHID_ATTRIBUTE - The LDAP user attribute that represents the DB2 authorization ID. Usually this is the same as the USERID_ATTRIBUTE.
For example: AUTHID_ATTRIBUTE = uid

-- GROUP-RELATED values: 
1) GROUP_OBJECTCLASS - The LDAP object class used for groups. Generally this is groupOfNames or groupOfUniqueNames
(for Microsoft Active Directory, it is group)

For example: GROUP_OBJECTCLASS = groupOfNames

2) GROUP_BASEDN - The LDAP base DN to use when searching for groups If not specified, group searches start at the root of the LDAP directory. Some LDAP servers require that you specify a value for this parameter.

For example: GROUP_BASEDN = o=ibm

3) GROUPNAME_ATTRIBUTE - The LDAP group attribute that represents the name of the group.

For example: GROUPNAME_ATTRIBUTE = cn

4) GROUP_LOOKUP_ METHOD - Determines the method used to find the group memberships for a user. 
Possible values are:
SEARCH_BY_DN Indicates to search for groups that list the user as a member. Membership is indicated by the group attribute defined as GROUP_LOOKUP_ATTRIBUTE (typically, member or uniqueMember). 

USER_ATTRIBUTE In this case, a user's groups are listed as attributes of the user object itself. This setting indicates to search for the user attribute defined as GROUP_LOOKUP_ATTRIBUTE to get the user's groups (typically memberOf for Microsoft Active Directory or ibm-allGroups for IBM Tivoli Directory Server).

For example: GROUP_LOOKUP_METHOD = SEARCH_BY_DN
GROUP_LOOKUP_METHOD = USER_ATTRIBUTE

5) GROUP_LOOKUP_ATTRIBUTE - Name of the attribute used to determine group membership, as described for GROUP_LOOKUP_METHOD.

For example:
GROUP_LOOKUP_ATTRIBUTE = member
GROUP_LOOKUP_ATTRIBUTE = ibm-allGroups
NESTED_GROUPS If NESTED_GROUPS is TRUE, the DB2 database manager recursively searches for group membership by attempting to look up the group memberships for every group that is found.

Cycles (such as A belongs to B, and B belongs to A) are handled correctly.
This parameter is optional, and defaults to FALSE.

-- MISCELLANEOUS  values:
1) SEARCH_DN, SEARCH_PW If your LDAP server does not support anonymous access, or if anonymous access is not sufficient when searching for users or groups, then you can optionally define a DN and password that will be used to perform searches.

For example:
SEARCH_DN = cn=root
SEARCH_PW = rootpassword

2) DEBUG  Set DEBUG to TRUE to write extra information to the db2diag log files to aid in debugging LDAP related issues.

Most of the additional information is logged at
DIAGLEVEL 4 (INFO).
DEBUG defaults to false.</fixtext><fix id="F-81031r4_fix" /><check system="C-74357r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>The default name and location for the IBM LDAP security plug-in configuration file is:

On UNIX/LINUX: INSTHOME/sqllib/cfg/IBMLDAPSecurity.ini

On Windows: %DB2PATH%\cfg\IBMLDAPSecurity.ini

If the IBMLDAPSecurity.ini  file does not exist in the default location and environment variable DB2LDAPSecurityConfig  is not set, this is a finding. 

If the environment variable DB2LDAPSecurityConfig is set and file does not exist in DB2LDAPSecurityConfig location, this is a finding. 

Find the value of SRVCON_PW_PLUGIN by running 

     $db2 get dbm cfg

If SRVCON_PW_PLUGIN is not set to IBMLDAPauthserver, this is a finding. 

Note:
In Windows, find the location of base installation directory of DB2 using one of following methods
1. Find the value of DB2PATH variable using  db2set –all on DB2 CLP 
2. Run db2level command
3. Go to Registry Editor in Windows
     Computer &gt;&gt; HKEY_LOCAL_MACHINE &gt;&gt; SOFTWARE &gt;&gt; IBM &gt;&gt; DB2 &gt;&gt; installedCopies &gt;&gt; DB2COPY1
Then find the value of the DB2 Path Name</check-content></check></Rule></Group><Group id="V-74433"><title>SRG-APP-000033-DB-000084</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89107r2_rule" severity="medium" weight="10.0"><version>DB2X-00-000400</version><title>DB2 must enforce approved authorizations for logical access to information and system resources in accordance with applicable access control policies.</title><description>&lt;VulnDiscussion&gt;Authentication with a DoD-approved PKI certificate does not necessarily imply authorization to access the DBMS.  To mitigate the risk of unauthorized access to sensitive information by entities that have been issued certificates by DoD-approved PKIs, all DoD systems, including databases, must be properly configured to implement access control policies. 

Successful authentication must not automatically give an entity access to an asset or security boundary. Authorization procedures and controls must be implemented to ensure each authenticated entity also has a validated and current authorization. Authorization is the process of determining whether an entity, once authenticated, is permitted to access a specific asset. Information systems use access control policies and enforcement mechanisms to implement this requirement. 

Access control policies include identity-based policies, role-based policies, and attribute-based policies. Access enforcement mechanisms include access control lists, access control matrices, and cryptography. These policies and mechanisms must be employed by the application to control access between users (or processes acting on behalf of users) and objects (e.g., devices, files, records, processes, programs, and domains) in the information system. 

This requirement is applicable to access control enforcement applications, a category that includes database management systems.  If the DBMS does not follow applicable policy when approving access, it may be in conflict with networks or other applications in the information system. This may result in users either gaining or being denied access inappropriately and in conflict with applicable policy.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000213</ident><fixtext fixref="F-81033r4_fix">If a privilege is granted directly to PUBLIC, revoke it using the appropriate variation of the REVOKE statement specific to the object on which the privilege is granted. For example, if PUBLIC has EXECUTE privileges are on a package X.Y, revoke them using the REVOKE (package privileges).

DB2&gt; REVOKE EXECUTE ON PACKAGE X.Y FROM PUBLIC

If a privilege has been granted indirectly to PUBLIC through membership in a database role, revoke membership in that database role from PUBLIC using the REVOKE (role) statement. 

DB2&gt; REVOKE ROLE &lt;role name&gt; FROM PUBLIC

If an authority is granted directly to PUBLIC, revoke it using the appropriate variation of the REVOKE (database authorities) statement. For example, if the CONNECT row shows a ‘Y’ value in the D_PUBLIC column, revoke CONNECT authority using this statement: 

DB2&gt; REVOKE CONNECT ON DATABASE FROM PUBLIC

If an authority is granted indirectly to PUBLIC through a database role, revoke membership in that database role from PUBLIC using the REVOKE (role) statement. 

DB2&gt; REVOKE ROLE &lt;role name&gt; FROM PUBLIC

To determine what database roles PUBLIC belongs, issue this query:

DB2&gt; SELECT ROLENAME  FROM TABLE (SYSPROC.AUTH_LIST_ROLES_FOR_AUTHID ('PUBLIC', 'G') )

Notes: To prevent the default assignment of authorities and privileges to PUBLIC when a database is created, one should use the restrictive option on the create database statement as demonstrated below:

DB2&gt; CREATE DATABASE &lt;dbname&gt; RESTRICTIVE

One can determine if a database was created with restrictive by looking at the value of restrict_access database configuration parameter using the following command at the command prompt: 

$db2 get db cfg

http://www.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.sql.ref.doc/doc/r0000981.html?cp=SSEPGG_10.5.0%2F2-12-7-181&amp;lang=en

As authorities and privileges can be granted to PUBLIC after the database is created, it is recommended to run the above checks on a regular basis.</fixtext><fix id="F-81033r4_fix" /><check system="C-74359r3_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Use the following query to determine if PUBLIC has been directly granted any privileges on objects in the database:

DB2&gt; SELECT PRIVILEGE, OBJECTNAME, OBJECTSCHEMA, OBJECTTYPE FROM SYSIBMADM.PRIVILEGES WHERE AUTHID = 'PUBLIC'

If any rows are returned, this is a finding.

Use the following query to determine if PUBLIC has been granted membership in any database roles:

DB2&gt; SELECT ROLENAME  FROM TABLE (SYSPROC.AUTH_LIST_ROLES_FOR_AUTHID ('PUBLIC', 'G') )

For each role returned by this query, determine if any privileges have been granted to it with the following query:

DB2&gt; SELECT PRIVILEGE, OBJECTNAME, OBJECTSCHEMA, OBJECTTYPE FROM SYSIBMADM.PRIVILEGES WHERE AUTHID = '&lt;rolename&gt;' AND AUTHIDTYPE = 'R'

If any rows are returned, this is a finding.

Use the following query to determine if PUBLIC has been granted any database authorities directly or indirectly through a database role:

DB2&gt; SELECT AUTHORITY, D_PUBLIC, ROLE_PUBLIC FROM TABLE(SYSPROC.AUTH_LIST_AUTHORITIES_FOR_AUTHID ('PUBLIC', 'G') )

If any of the rows have a ‘Y’ value in the D_PUBLIC column, this is a finding. If any of the rows have a ‘Y’ value in the ROLE_PUBLIC column, this is a finding.
</check-content></check></Rule></Group><Group id="V-74435"><title>SRG-APP-000080-DB-000063</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89109r1_rule" severity="medium" weight="10.0"><version>DB2X-00-000500</version><title>DB2 must protect against a user falsely repudiating having performed organization-defined actions.</title><description>&lt;VulnDiscussion&gt;Non-repudiation of actions taken is required in order to maintain data integrity. Examples of particular actions taken by individuals include creating information, sending a message, approving information (e.g., indicating concurrence or signing a contract), and receiving a message. 

Non-repudiation protects against later claims by a user of not having created, modified, or deleted a particular data item or collection of data in the database.

In designing a database, the organization must define the types of data and the user actions that must be protected from repudiation. The implementation must then include building audit features into the application data tables, and configuring the DBMS' audit tools to capture the necessary audit trail. Design and implementation also must ensure that applications pass individual user identification to the DBMS, even where the application connects to the DBMS with a standard, group account.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000166</ident><fixtext fixref="F-81035r1_fix">Define the audit policy using the following Create Audit Policy SQL statement:
DB2&gt; CREATE AUDIT POLICY &lt;audit policy name&gt; 
                CATEGORIES CONTEXT STATUS BOTH, EXECUTE STATUS BOTH
                ERROR TYPE AUDIT

Apply such a policy to either the database as a whole or to the specific application tables using one of these two statements: 
DB2&gt; AUDIT DATABASE USING POLICY &lt;audit policy name&gt; 
 Or 
DB2&gt; AUDIT TABLE &lt;table name&gt; USING POLICY &lt;audit policy name&gt; 

Note : While DB2 does provide basic audit capabilities, IBM highly recommends investing in and using a dedicated enterprise audit tool such as the IBM Security Guardium Data Activity Monitor in order to provide a comprehensive audit solution.</fixtext><fix id="F-81035r1_fix" /><check system="C-74361r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Run the following SQL statement to ensure that an audit policy is defined upon all the required application tables and/or the database:
DB2&gt; SELECT AUDITPOLICYNAME, OBJECTSCHEMA, OBJECTNAME, OBJECTTYPE 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE IN ('T',' ')

If no rows are returned, this is a finding. 

If a row with OBJECTTYPE of ' ' (Database; value is a blank) exists in the output, it is a database level policy. 

If a row with OBJECTTYPE of 'T' exists in the output, it is a table level policy. 

For each audit policy returned in the statement above, run the following SQL statement to confirm that the CONTEXT and EXECUTE categories are part of that policy: 
DB2&gt; SELECT AUDITPOLICYNAME, CONTEXTSTATUS, EXECUTESTATUS, ERRORTYPE AS ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES

If the database audit policy has the values for the CONTEXTSTATUS and EXECUTESTATUS columns set to 'S' (Success) or 'B' (Both) as well as the value in the ERRORTYPE column set to 'A' (Audit), this is not a finding. 

If the database policy does not exist or does not cover CONTEXTSTATUS or EXECUTESTATUS then check if the appropriate policies are defined for all the required application tables. 

If all the required application table audit policies do not have the values for the CONTEXTSTATUS and EXECUTESTATUS columns set to 'S' (Success) or 'B' (Both) as well as the value in the ERRORTYPE column set to 'A' (Audit), this is a finding.</check-content></check></Rule></Group><Group id="V-74437"><title>SRG-APP-000089-DB-000064</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89111r1_rule" severity="medium" weight="10.0"><version>DB2X-00-000600</version><title>DB2 must provide audit record generation capability for DoD-defined auditable events within all DBMS/database components.</title><description>&lt;VulnDiscussion&gt;Without the capability to generate audit records, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. 

Audit records can be generated from various components within the DBMS (e.g., process, module). Certain specific application functionalities may be audited as well. The list of audited events is the set of events for which audits are to be generated. This set of events is typically a subset of the list of all events for which the system is capable of generating audit records.

DoD has defined the list of events for which the DBMS will provide an audit record generation capability as the following: 

(i) Successful and unsuccessful attempts to access, modify, or delete privileges, security objects, security levels, or categories of information (e.g., classification levels);
(ii) Access actions, such as successful and unsuccessful logon attempts, privileged activities, or other system-level access, starting and ending time for user access to the system, concurrent logons from different workstations, successful and unsuccessful accesses to objects, all program initiations, and all direct access to the information system; and
(iii) All account creation, modification, disabling, and termination actions.

Organizations may define additional events requiring continuous or ad hoc auditing.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000169</ident><fixtext fixref="F-81037r1_fix">Define an audit policy using the CREATE AUDIT POLICY SQL statement:
DB2&gt; CREATE AUDIT POLICY &lt;DB audit policy name&gt; CATEGORIES AUDIT STATUS BOTH, SYSADMIN STATUS BOTH, SECMAINT STATUS BOTH, VALIDATE STATUS BOTH, CHECKING STATUS BOTH, CONTEXT STATUS BOTH ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement. Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, apply the policy created above to the database:
DB2&gt; AUDIT DATABASE USING POLICY &lt;DB audit policy name&gt;</fixtext><fix id="F-81037r1_fix" /><check system="C-74363r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>To meet these requirements, at the minimum AUDIT, CHECKING, CONTEXT, SECMAINT, SYSADMIN, and VALIDATE category auditing need to be implemented at the database level. 

Run the following SQL statement to ensure that an audit policy is defined upon the database: 
DB2&gt; SELECT AUDITPOLICYNAME, AUDITPOLICYID 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE IN (' ') 

If no rows are returned, this is a finding. 

Using the AUDITPOLICYID from the query above find the details of the audit policy. 
DB2&gt; SELECT AUDITPOLICYNAME, AUDITSTATUS, CHECKINGSTATUS, CONTEXTSTATUS, SECMAINTSTATUS, SYSADMINSTATUS, VALIDATESTATUS, ERRORTYPE AS ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES 
           WHERE AUDITPOLICYID = &lt;audit policy ID&gt;

If the values for AUDITSTATUS, CHECKINGSTATUS, CONTEXTSTATUS, SECMAINTSTATUS, SYSMADMINSTATUS and VALIDATESTATUS  are not 'B' (Both) or ERRORTYPE is not 'A' (Audit), this is a finding.</check-content></check></Rule></Group><Group id="V-74439"><title>SRG-APP-000090-DB-000065</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89113r1_rule" severity="medium" weight="10.0"><version>DB2X-00-000700</version><title>DB2 must allow only the ISSM (or individuals or roles appointed by the ISSM) to select which auditable events are to be audited.</title><description>&lt;VulnDiscussion&gt;Without the capability to restrict which roles and individuals can select which events are audited, unauthorized personnel may be able to prevent or interfere with the auditing of critical events.

Suppression of auditing could permit an adversary to evade detection.

Misconfigured audits can degrade the system's performance by overwhelming the audit log. Misconfigured audits may also make it more difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000171</ident><fixtext fixref="F-81039r1_fix">Update the value SYSADM_GROUP to a group which has only members approved by the ISSM using the following command: 

     $db2 update dbm cfg using SYSADM_GROUP &lt;SYSADMIN GROUP&gt;

Remove users not approved by ISSM from SYSADM_GROUP group using operating system tools/commands.

Revoke SECADM authority from non-ISSM users using the SQL statement: 
DB2&gt; REVOKE SECADM ON DATABASE FROM USER &lt;user name&gt; 

Remove non-ISSM members using the following the following SQL statement: 
DB2&gt; REVOKE SECADM ON DATABASE FROM GROUP &lt;group name&gt; 

Revoke SECADM from the group or role using the following SQL statement: 
DB2&gt; REVOKE SECADM ON DATABASE FROM ROLE &lt;role name&gt; 

Revoke execute from unapproved users if they have execute on SYSPROC.AUDIT_ARCHIVE, SYSPROC.AUDIT_LIST_LOGS, SYSPROC.AUDIT_DELIM_EXTRACT using appropriate variation of Revoke (routine privileges) statement.

Note: The audit facility provides the ability to audit at both the instance and the individual database level, independently recording all instance and database level activities with separate logs for each instance level audit.

The system administrator (who holds SYSADM authority) can use the db2audit tool to configure audit at the instance level as well as to control when such audit information is collected. The system administrator can use the db2audit tool to archive both instance and database audit logs as well as to extract audit data from archived logs of either type.

SYSADM authority is assigned to the group specified by the SYSADM_GROUP configuration parameter. Membership in that group is controlled outside the database manager through the security facility used on your platform.</fixtext><fix id="F-81039r1_fix" /><check system="C-74365r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Run the following command to find the value of the SYSADM_GROUP parameter: 

     $db2 get dbm cfg 

Only users approved by the ISSM should be part of the SYSADM_GROUP. If non-ISSM authorized users are part of SYSADM_GROUP group, this is a finding.

On Windows systems, if the SYSADM_GROUP database manager configuration parameter is not specified, this is a finding.

Database level audit

The security administrator (who holds SECADM authority within a database) can define audit policies and control the audit requirements for an individual database. The security administrator can use the following audit routines to operate upon the database audit logs:

- The SYSPROC.AUDIT_ARCHIVE stored procedure archives audit logs.
- The SYSPROC.AUDIT_LIST_LOGS table function allows you to locate logs of interest.
- The SYSPROC.AUDIT_DELIM_EXTRACT stored procedure extracts data into delimited files for analysis.

The security administrator can also grant EXECUTE privilege on these routines to another user.

Run the following query to find out which users have SECADM authority in database: 
DB2&gt; SELECT CHAR(GRANTOR,35) AS GRANTOR, CHAR(GRANTEE,35) AS GRANTEE, GRANTEETYPE 
           FROM SYSCAT.DBAUTH
           WHERE SECURITYADMAUTH='Y'

If GRANTEETYPE is 'U' and the authorization ID is not an ISSM authorized user, this is a finding. 

If the GRANTEETYPE is 'G', then all members of the external group identified by GRANTEE must be ISSM authorized users, otherwise this is a finding.

If the GRANTEETYPE is 'R', then all members of the database role identified by GRANTEE must be ISSM authorized users, otherwise this is a finding.

The members of a role can be found using this statement: 
DB2&gt; SELECT CHAR(GRANTOR,35) AS GRANTOR, CHAR(GRANTEE,35) AS GRANTEE, GRANTEETYPE
           FROM SYSCAT.ROLEAUTH
           WHERE ROLENAME= &lt;search role name&gt;

Run the following query to find out which users have execute privilege on SYSPROC.AUDIT_ARCHIVE, SYSPROC.AUDIT_LIST_LOGS, SYSPROC.AUDIT_DELIM_EXTRACT: 
DB2&gt; SELECT * 
           FROM SYSCAT.ROUTINEAUTH
           WHERE SPECIFICNAME LIKE 'AUDIT%' AND SCHEMA='SYSPROC'

If non-ISSM authorized users have execute privilege on any of above three routines, this is a finding.</check-content></check></Rule></Group><Group id="V-74441"><title>SRG-APP-000091-DB-000066</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89115r2_rule" severity="medium" weight="10.0"><version>DB2X-00-000800</version><title>DB2 must generate audit records when privileges/permissions are retrieved.</title><description>&lt;VulnDiscussion&gt;Under some circumstances, it may be useful to monitor who/what is reading privilege/permission/role information. Therefore, it must be possible to configure auditing to do this. DBMSs typically make such information available through views or functions.

This requirement addresses explicit requests for privilege/permission/role membership information. It does not refer to the implicit retrieval of privileges/permissions/role memberships that the DBMS continually performs to determine if any and every action on the database is permitted.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81041r1_fix">Define the audit policy using the CREATE AUDIT POLICY SQL statement:
DB2&gt; CREATE AUDIT POLICY CATALOGAUDIT CATEGORIES CONTEXT STATUS BOTH, EXECUTE STATUS BOTH ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement. Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, apply the correct audit policy to either the database as a whole or to the specific catalog tables using one of these two statements:
DB2&gt; AUDIT DATABASE USING POLICY CATALOGAUDIT 
  Or 
DB2&gt; AUDIT TABLE &lt;table name&gt; USING POLICY CATALOGAUDIT

Note: The Database level policy in the Check category, covered in SRG-DB2X-00-000600, generates audit events of successful/unsuccessful read attempts on views based on these catalog tables.</fixtext><fix id="F-81041r1_fix" /><check system="C-74367r3_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>To monitor who/what is reading the privilege/permission/role information from catalog tables a minimum audit set of CONTEXT and EXECUTE (with data) categories on the following catalog tables are required:

SYSIBM.SYSINDEXAUTH
SYSIBM.SYSPLANAUTH
SYSIBM.SYSPASSTHRUAUTH
SYSIBM.SYSROUTINEAUTH
SYSIBM.SYSSCHEMAAUTH
SYSIBM.SYSSECURITYLABELACCESS
SYSIBM.SYSSECURITYPOLICYEXEMPTIONS
SYSIBM.SYSSEQUENCEAUTH
SYSIBM.SYSSURROGATEAUTHIDS
SYSIBM.SYSTABAUTH 
SYSIBM.SYSTBSPACEAUTH 
SYSIBM.SYSXSROBJECTAUTH
SYSIBM.SYSCOLAUTH
SYSIBM.SYSLIBRARYAUTH
SYSIBM.SYSMODULEAUTH
SYSIBM.SYSROLEAUTH
SYSIBM.SYSVARIABLEAUTH
SYSIBM.SYSWORKLOADAUTH
SYSIBM.SYSDBAUTH
SYSIBM.SYSUSERAUTH

Run the following SQL statement to ensure that an audit policy is defined upon the above catalog tables and/or the database:

DB2&gt; SELECT AUDITPOLICYNAME, OBJECTSCHEMA, OBJECTNAME, OBJECTTYPE 
FROM SYSCAT.AUDITUSE 
WHERE OBJECTTYPE IN ('T',' ')

If no rows are returned, this is a finding. 

If a row with the OBJECTTYPE of ' ' (Database; value is a blank) exists in the output, it is a database level policy. 

If a row with OBJECTTYPE of 'T' exists in the output, it is a table level policy.

For each audit policy returned in the statement above, run the following SQL statement to confirm that the CONTEXT and EXECUTE categories are part of that policy:

DB2&gt; SELECT AUDITPOLICYNAME, CONTEXTSTATUS, EXECUTESTATUS, ERRORTYPE AS ERRORTYPE 
FROM SYSCAT.AUDITPOLICIES

If the values for CONTEXTSTATUS and EXECUTESTATUS are not 'B' (Both) or ERRORTYPE is not 'A' (Audit), this is a finding.

If a database policy does not exist or does not cover CONTEXTSTATUS or EXECUTESTATUS then check if the appropriate policies are defined for all the required tables listed above.

If audit policies for the required tables do not have the values for the CONTEXTSTATUS and EXECUTESTATUS columns set to 'S' (Success) or 'B' (Both) or ERRORTYPE is not 'A' (Audit), this is a finding.</check-content></check></Rule></Group><Group id="V-74443"><title>SRG-APP-000091-DB-000325</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89117r2_rule" severity="medium" weight="10.0"><version>DB2X-00-000900</version><title>DB2 must generate audit records when unsuccessful attempts to retrieve privileges/permissions occur.</title><description>&lt;VulnDiscussion&gt;Under some circumstances, it may be useful to monitor who/what is reading privilege/permission/role information. Therefore, it must be possible to configure auditing to do this. DBMSs typically make such information available through views or functions.

This requirement addresses explicit requests for privilege/permission/role membership information. It does not refer to the implicit retrieval of privileges/permissions/role memberships that the DBMS continually performs to determine if any and every action on the database is permitted.

To aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81043r2_fix">Define an audit policy using the CREATE AUDIT POLICY SQL statement:

DB2&gt; CREATE AUDIT POLICY &lt;audit policy name&gt;  CATEGORIES CONTEXT STATUS BOTH, EXECUTE STATUS BOTH ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement. Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, apply the correct audit policy to either the database as a whole or to the specific catalog tables using one of these two statements:

DB2&gt; AUDIT DATABASE USING POLICY &lt;audit policy name&gt; 
  Or 
DB2&gt; AUDIT TABLE &lt;table name&gt; USING POLICY &lt;audit policy name&gt;

Note:  the Database level policy in the Check covered in SRG-APP-DB2X-00-000600, generates audit events of successful/unsuccessful read attempts on views based on these catalog tables.</fixtext><fix id="F-81043r2_fix" /><check system="C-74369r3_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>To monitor who/what is reading the privilege/permission/role information from catalog tables a minimum audit set of CONTEXT and EXECUTE (with data) categories on the following catalog tables are required:

SYSIBM.SYSINDEXAUTH
SYSIBM.SYSPLANAUTH
SYSIBM.SYSPASSTHRUAUTH
SYSIBM.SYSROUTINEAUTH
SYSIBM.SYSSCHEMAAUTH
SYSIBM.SYSSECURITYLABELACCESS
SYSIBM.SYSSECURITYPOLICYEXEMPTIONS
SYSIBM.SYSSEQUENCEAUTH
SYSIBM.SYSSURROGATEAUTHIDS
SYSIBM.SYSTABAUTH 
SYSIBM.SYSTBSPACEAUTH 
SYSIBM.SYSXSROBJECTAUTH
SYSIBM.SYSCOLAUTH
SYSIBM.SYSLIBRARYAUTH
SYSIBM.SYSMODULEAUTH
SYSIBM.SYSROLEAUTH
SYSIBM.SYSVARIABLEAUTH
SYSIBM.SYSWORKLOADAUTH
SYSIBM.SYSDBAUTH
SYSIBM.SYSUSERAUTH

Run the following SQL statement to ensure that an audit policy is defined upon the above catalog tables and/or the database:

DB2&gt; SELECT AUDITPOLICYNAME, OBJECTSCHEMA, OBJECTNAME, OBJECTTYPE 
FROM SYSCAT.AUDITUSE WHERE OBJECTTYPE IN ('T',' ')

If no rows are returned, this is a finding. 

If a row with the OBJECTTYPE of ' ' (Database; value is a blank) exists in the output, it is a database level policy. 

If a row with OBJECTTYPE of 'T' exists in the output, it is a table level policy.

For each audit policy returned in the statement above, run the following SQL statement to confirm that the CONTEXT and EXECUTE categories are part of that policy:

DB2&gt; SELECT AUDITPOLICYNAME, CONTEXTSTATUS, EXECUTESTATUS, ERRORTYPE AS ERRORTYPE 
FROM SYSCAT.AUDITPOLICIES

If the values for CONTEXTSTATUS and EXECUTESTATUS in the database audit policy are not 'F' (Failure) or 'B' (Both) or ERRORTYPE is not 'A' (Audit), this is a finding.

If a database policy does not exist or does not cover CONTEXTSTATUS or EXECUTESTATUS then check if the appropriate policies are defined for all the required tables listed above.

If audit policies for the required tables do not have the values for the CONTEXTSTATUS and EXECUTESTATUS columns set to 'F' (Failure) or 'B' (Both) or ERRORTYPE is not 'A' (Audit), this is a finding.</check-content></check></Rule></Group><Group id="V-74445"><title>SRG-APP-000092-DB-000208</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89119r1_rule" severity="medium" weight="10.0"><version>DB2X-00-001000</version><title>DB2 must initiate session auditing upon startup.</title><description>&lt;VulnDiscussion&gt;Session auditing is for use when a user's activities are under investigation. To be sure of capturing all activity during those periods when session auditing is in use, it needs to be in operation for the whole time the DBMS is running.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001464</ident><fixtext fixref="F-81045r1_fix">Define an audit policy using the CREATE AUDIT POLICY SQL statement: 
DB2&gt; CREATE AUDIT POLICY &lt;user audit policy name&gt;
CATEGORIES AUDIT STATUS BOTH, CHECKING STATUS BOTH, CONTEXT STATUS BOTH, EXECUTE WITH DATA STATUS BOTH, OBJMAINT STATUS BOTH, SECMAINT STATUS BOTH, SYSADMIN STATUS BOTH, VALIDATE STATUS BOTH ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement. Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, apply the correct audit policy to either the database as a whole or to the specific user using one of these two statements:
DB2&gt; AUDIT DATABASE USING POLICY &lt;user audit policy name&gt;
  Or 
DB2&gt; AUDIT USER &lt;user name&gt; USING POLICY &lt;user audit policy name&gt;

Note: This requirement is to audit suspicious user activity. For a targeted session activity use the AUDIT USER command after the policy has been created. For a general database level use the AUDIT DATABASE command.</fixtext><fix id="F-81045r1_fix" /><check system="C-74371r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Determine whether there are any individuals for whom the organization requires session auditing.  If there are none, this is not a finding.

Type in the following command to check whether or not the user under investigation  is being audited:
DB2&gt; SELECT AUDITPOLICYNAME, OBJECTNAME, OBJECTTYPE 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE IN ('i',' ')

If no rows are returned, this is a finding. 

If a row with the OBJECTTYPE of ' ' (Database; value is a blank) exists in the output, it is a database level policy. 

If a row with the OBJECTTYPE of 'i' exists in the output, it is a user level policy. 

For each audit policy returned in the statement above, run the following SQL statement to confirm that all categories are part of that policy:
DB2&gt; SELECT * FROM SYSCAT.AUDITPOLICIES

If there is an audit policy defined at the database level with the values for the all the audit category columns set to 'B' (Both) and the value in the ERRORTYPE column set to 'A' (Audit), EXECUTEWITHDATA to 'Y' this is not a finding.

If the database policy does not exist or does not cover all the categories with ERRORTYPE column set to 'A' (Audit), EXECUTEWITHDATA to 'Y' then check if the appropriate policies are defined for all the required users. 

If the audit policy is defined on the users under investigation and does not have the values for all the audit category columns set to 'B' (Both) and the value in the ERRORTYPE column set to 'A' (Audit), EXECUTEWITHDATA to 'Y', this is a finding.</check-content></check></Rule></Group><Group id="V-74447"><title>SRG-APP-000099-DB-000043</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89121r1_rule" severity="medium" weight="10.0"><version>DB2X-00-001600</version><title>DB2 must produce audit records containing sufficient information to establish the outcome (success or failure) of the events.</title><description>&lt;VulnDiscussion&gt;Information system auditing capability is critical for accurate forensic analysis. Without information about the outcome of events, security personnel cannot make an accurate assessment as to whether an attack was successful or if changes were made to the security state of the system.

Event outcomes can include indicators of event success or failure and event-specific results (e.g., the security state of the information system after the event occurred). As such, they also provide a means to measure the impact of an event and help authorized personnel to determine the appropriate response.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000134</ident><fixtext fixref="F-81047r1_fix">Drop and recreate the policy with STATUS set to ""Both"" or use ALTER POLICY to set the STATUS='B'.

To drop and recreate a policy use following statements:
DB2&gt; DROP AUDIT POLICY &lt;audit1&gt;
DB2&gt; CREATE AUDIT POLICY &lt;audit1&gt; 
          CATEGORIES &lt; audit categories &gt;  STATUS BOTH ERROR TYPE AUDIT

To alter the audit policy:
DB2&gt; ALTER AUDIT POLICY &lt;audit1&gt; 
          CATEGORIES &lt; audit categories &gt;  STATUS BOTH ERROR TYPE AUDIT

Notes: Each audit record has an Event Status represented by a SQLCODE where Successful event &gt; = 0 Failed event &lt; 0. To generate a record for both success and failed events, all the audit policies should be created with STATUS 'BOTH'.

CREATE AUDIT POLICY information:
http://www-01.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.sql.ref.doc/doc/r0050607.html?lang=en

ALTER AUDIT POLICY information:
http://www-01.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.sql.ref.doc/doc/r0050608.html?cp=SSEPGG_10.5.0%2F2-12-7-7&amp;lang=en"</fixtext><fix id="F-81047r1_fix" /><check system="C-74373r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Run the following SQL statement to confirm that all audit policies are created with STATUS='B':
DB2&gt; SELECT * FROM SYSCAT.AUDITPOLICIES

If any audit policy does not have the values for all the audit category columns set to 'B' (Both) and the value in the ERRORTYPE column set to 'A' (Audit), EXECUTEWITHDATA to 'Y' for Execute category audit policies, this is a finding.</check-content></check></Rule></Group><Group id="V-74449"><title>SRG-APP-000101-DB-000044</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89123r1_rule" severity="medium" weight="10.0"><version>DB2X-00-001800</version><title>DB2 must include additional, more detailed, organization-defined information in the audit records for audit events identified by type, location, or subject.</title><description>&lt;VulnDiscussion&gt;Information system auditing capability is critical for accurate forensic analysis. Reconstruction of harmful events or forensic analysis is not possible if audit records do not contain enough information. To support analysis, some types of events will need information to be logged that exceeds the basic requirements of event type, time stamps, location, source, outcome, and user identity. If additional information is not available, it could negatively impact forensic investigations into user actions or other malicious events.

The organization must determine what additional information is required for complete analysis of the audited events. The additional information required is dependent on the type of information (e.g., sensitivity of the data and the environment within which it resides). At a minimum, the organization must employ either full-text recording of privileged commands or the individual identities of group users, or both. The organization must maintain audit trails in sufficient detail to reconstruct events to determine the cause and impact of compromise. 

Examples of detailed information the organization may require in audit records are full-text recording of privileged commands or the individual identities of group account users.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000135</ident><fixtext fixref="F-81049r3_fix">Configure the application to write the organization-defined information to a database table.

Set the auditing for the database table capturing the organization-defined information so that it is written to the database audit.

Define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement:
DB2&gt; CREATE AUDIT POLICY &lt;table audit policy name&gt; 
           CATEGORIES CONTEXT STATUS BOTH, EXECUTE STATUS BOTH 
           ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement. Only the categories explicitly named in the statement will be affected. In this case, the changes take effect immediately.

If CREATE was used above, apply the policy created to the database: 
DB2&gt; AUDIT TABLE &lt;org info table&gt; using &lt;audit policy name&gt;</fixtext><fix id="F-81049r3_fix" /><check system="C-74375r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Check with the ISSO if any more of the organization-defined information needs to be captured as part of DBMS auditing.

If there is additional information that needs to be captured and is currently not being written to audit logs, this is a finding.</check-content></check></Rule></Group><Group id="V-74451"><title>SRG-APP-000109-DB-000049</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89125r1_rule" severity="medium" weight="10.0"><version>DB2X-00-001900</version><title>Unless it has been determined that availability is paramount, DB2 must, upon audit failure, cease all auditable activity.</title><description>&lt;VulnDiscussion&gt;It is critical that when the DBMS is at risk of failing to process audit logs as required, it take action to mitigate the failure. Audit processing failures include: software/hardware errors; failures in the audit capturing mechanisms; and audit storage capacity being reached or exceeded. Responses to audit failure depend upon the nature of the failure mode. 

When the need for system availability does not outweigh the need for a complete audit trail, the DBMS should cease production of audit records immediately, rolling back all in-flight transactions.  DB2 does this when  configured to track audit errors.

Systems where audit trail completeness is paramount will most likely be at a lower MAC level than MAC I; the final determination is the prerogative of the application owner, subject to Authorizing Official concurrence. In any case, sufficient auditing resources must be allocated to avoid a shutdown in all but the most extreme situations.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000140</ident><fixtext fixref="F-81051r1_fix">Drop and recreate the policy with ERROR TYPE as required by the ISSO or run the ALTER AUDIT POLICY command to set the ERROR TYPE as per ISSO requirement. 

Run the following command to drop and recreate the policy:
DB2&gt; DROP AUDIT POLICY &lt;audit2&gt;
DB2&gt; CREATE AUDIT POLICY &lt;audit2&gt; 
          CATEGORIES EXECUTE WITH DATA STATUS BOTH ERROR TYPE AUDIT

To alter the audit policy:
DB2&gt; ALTER AUDIT POLICY &lt;audit2&gt; 
          CATEGORIES EXECUTE WITH DATA STATUS BOTH ERROR TYPE AUDIT</fixtext><fix id="F-81051r1_fix" /><check system="C-74377r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Ask the ISSO whether the system should stay available or stop processing the auditable events.

If the system needs to stay available and the Error Type is set to 'A' for the policies then this is not applicable (NA).

Run the following SQL statement to find the Error type value for all audit policies:
DB2&gt; SELECT * FROM SYSCAT.AUDITPOLICIES

If the system needs to stop processing the auditable events and Error Type is not set to 'A' then this is a finding.</check-content></check></Rule></Group><Group id="V-74453"><title>SRG-APP-000118-DB-000059</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89127r1_rule" severity="medium" weight="10.0"><version>DB2X-00-002200</version><title>The audit information produced by DB2 must be protected from unauthorized read access.</title><description>&lt;VulnDiscussion&gt;If audit data were to become compromised, then competent forensic analysis and discovery of the true source of potentially malicious system activity is difficult, if not impossible, to achieve. In addition, access to audit records provides information an attacker could potentially use to his or her advantage.

To ensure the veracity of audit data, the information system and/or the application must protect audit information from any and all unauthorized access. This includes read, write, copy, etc.

This requirement can be achieved through multiple methods which will depend upon system architecture and design. Some commonly employed methods include ensuring log files enjoy the proper file system permissions utilizing file system protections and limiting log data location. 

Additionally, applications with user interfaces to audit records should not allow for the unfettered manipulation of or access to those records via the application. If the application provides access to the audit data, the application becomes accountable for ensuring that audit information is protected from unauthorized access.

Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000162</ident><fixtext fixref="F-81053r1_fix">Remove the write permission from non-instance owner users on the audit directory.

Remove the read permission from non-authorized users from audit directory.

Only the instance owner needs write access to directory and users authorized to archive the audit logs need to have read access to audit directory. 

Change the permissions on audit datapath and archivepath directories so that only the instance owner has write access on datapath and users with audit archive privileges have read access on datapath. Only users with SYSADM and SECADM privileges and can extract and archive the audit logs.</fixtext><fix id="F-81053r1_fix" /><check system="C-74379r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Run db2audit command to find the value of datapath where the audit logs are stored. 

     $db2audit describe

Only the instance owner needs write access to directory and users authorized to archive the audit logs need to have read access to audit directory. 

If any user other than the instance owner has write access to audit directory, this is a finding.

If any user other than the users authorized to read audit log files have read access to audit directory, this is a finding.</check-content></check></Rule></Group><Group id="V-74455"><title>SRG-APP-000119-DB-000060</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89129r1_rule" severity="medium" weight="10.0"><version>DB2X-00-002300</version><title>The audit information produced by DB2 must be protected from unauthorized modification.</title><description>&lt;VulnDiscussion&gt;If audit data were to become compromised, then competent forensic analysis and discovery of the true source of potentially malicious system activity is impossible to achieve. 

To ensure the veracity of audit data the information system and/or the application must protect audit information from unauthorized modification. 

This requirement can be achieved through multiple methods that will depend upon system architecture and design. Some commonly employed methods include ensuring log files enjoy the proper file system permissions and limiting log data locations. 

Applications providing a user interface to audit data will leverage user permissions and roles identifying the user accessing the data and the corresponding rights that the user enjoys in order to make access decisions regarding the modification of audit data.

Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity. 

Modification of database audit data could mask the theft of, or the unauthorized modification of, sensitive data stored in the database.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000163</ident><fixtext fixref="F-81055r1_fix">At the operating system level, remove the write permission from non-instance owner users on the audit directory.

At the operating system level, remove the  read permission from non-authorized users on the audit directory.</fixtext><fix id="F-81055r1_fix" /><check system="C-74381r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Run the db2audit command to find the value of the datapath where the audit logs are stored.

     $db2audit describe

Only the instance owner needs write access to directory and users authorized to archive the audit logs need to have read access to the audit directory.

If any user other than the instance owner has write access to the audit directory, this is a finding.

If any user other than the users authorized to read audit log files have read access to audit directory, this is a finding.</check-content></check></Rule></Group><Group id="V-74457"><title>SRG-APP-000120-DB-000061</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89131r1_rule" severity="medium" weight="10.0"><version>DB2X-00-002400</version><title>The audit information produced by DB2 must be protected from unauthorized deletion.</title><description>&lt;VulnDiscussion&gt;If audit data were to become compromised, then competent forensic analysis and discovery of the true source of potentially malicious system activity is impossible to achieve.

To ensure the veracity of audit data, the information system and/or the application must protect audit information from unauthorized deletion. This requirement can be achieved through multiple methods which will depend upon system architecture and design.

Some commonly employed methods include: ensuring log files enjoy the proper file system permissions utilizing file system protections; restricting access; and backing up log data to ensure log data is retained.

Applications providing a user interface to audit data will leverage user permissions and roles identifying the user accessing the data and the corresponding rights the user enjoys in order make access decisions regarding the deletion of audit data.

Audit information includes all information (e.g., audit records, audit settings, and audit reports) needed to successfully audit information system activity.

Deletion of database audit data could mask the theft of, or the unauthorized modification of, sensitive data stored in the database.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000164</ident><fixtext fixref="F-81057r1_fix">At the operating system level, remove the write permission from non-instance owner users on the audit directory.

At the operating system level, remove the  read permission from non-authorized users on the audit directory.</fixtext><fix id="F-81057r1_fix" /><check system="C-74383r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Run the db2audit command to find the value of the datapath where the audit logs are stored. 

     $db2audit describe

Only the instance owner needs write access to directory and users authorized to archive the audit logs need to have read access to the audit directory.

If any user other than the instance owner has write access to audit directory, this is a finding.

If any user other than the users authorized to read audit log files have read access to the audit directory, this is a finding.</check-content></check></Rule></Group><Group id="V-74459"><title>SRG-APP-000121-DB-000202</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89133r1_rule" severity="medium" weight="10.0"><version>DB2X-00-002500</version><title>DB2 must protect its audit features from unauthorized access.</title><description>&lt;VulnDiscussion&gt;Protecting audit data also includes identifying and protecting the tools used to view and manipulate log data. 

Depending upon the log format and application, system and application log tools may provide the only means to manipulate and manage application and system log data. It is, therefore, imperative that access to audit tools be controlled and protected from unauthorized access. 

Applications providing tools to interface with audit data will leverage user permissions and roles identifying the user accessing the tools and the corresponding rights the user enjoys in order make access decisions regarding the access to audit tools.

Audit tools include, but are not limited to, OS-provided audit tools, vendor-provided audit tools, and open source audit tools needed to successfully view and manipulate audit information system activity and records. 

If an attacker were to gain access to audit tools, he could analyze audit logs for system weaknesses or weaknesses in the auditing itself. An attacker could also manipulate logs to hide evidence of malicious activity.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001493</ident><fixtext fixref="F-81059r1_fix">Update the value SYSADM_GROUP to a group which has only members approved by ISSM using following command: 

     $db2 update dbm cfg using SYSADM_GROUP &lt;SYSADMIN GROUP&gt;

Remove unauthorized users from the SYSADM_GROUP using the operating system tools/commands. 

Revoke SECADM authority from non-authorized users using the SQL statement below:
DB2&gt; REVOKE SECADM ON DATABASE FROM USER &lt;user name&gt; 

Remove non-authorized members or revoke SECADM from the group or role using this SQL statement:
DB2&gt; REVOKE SECADM ON DATABASE FROM GROUP &lt;group name&gt; 
DB2&gt; REVOKE SECADM ON DATABASE FROM ROLE &lt;role name&gt; 

Revoke execute from non-authorized users if they have execute on SYSPROC.AUDIT_ARCHIVE, SYSPROC.AUDIT_LIST_LOGS, SYSPROC.AUDIT_DELIM_EXTRACT using the appropriate variation of the Revoke (routine privileges) statement.</fixtext><fix id="F-81059r1_fix" /><check system="C-74385r2_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Run the following command to find the value of the SYSADM_GROUP parameter:

     $db2 get dbm cfg 

Only authorized OS users should be part of this group. If non-authorized users are part of SYSADM_GROUP group, this is a finding.

On Windows systems, if the SYSADM_GROUP database manager configuration parameter is not specified, this is a finding.

Security administrator (who holds SECADM authority within a database) can define audit policies and control the audit requirements for an individual database. The security administrator can use the following audit routines to operate upon the database audit logs:

- The SYSPROC.AUDIT_ARCHIVE stored procedure archives audit logs.
- The SYSPROC.AUDIT_LIST_LOGS table function allows you to locate logs of interest.
- The SYSPROC.AUDIT_DELIM_EXTRACT stored procedure extracts data into delimited files for analysis.

The security administrator can also grant EXECUTE privilege on these routines to another user.

Run the following query to find out which users have SECADM authority in database: 
DB2&gt; SELECT CHAR(GRANTOR,35) AS GRANTOR, CHAR(GRANTEE,35) AS GRANTEE, GRANTEETYPE
           FROM SYSCAT.DBAUTH 
           WHERE SECURITYADMAUTH='Y'

If GRANTEETYPE is 'U' and the authorization ID is not an authorized user, this is a finding.

If the GRANTEETYPE is 'G', then all members of the external group identified by GRANTEE must be authorized users. Otherwise, this is a finding.

If the GRANTEETYPE is 'R', then all members of the database role identified by GRANTEE must be authorized users. Otherwise, this is a finding.

The members of a role can be found using this statement: 
DB2&gt; SELECT CHAR(GRANTOR,35) AS GRANTOR, CHAR(GRANTEE,35) AS GRANTEE, GRANTEETYPE 
           FROM SYSCAT.ROLEAUTH 
           WHERE ROLENAME= &lt;search role name&gt;

Run the following query to find out which users have execute privilege on SYSPROC.AUDIT_ARCHIVE, SYSPROC.AUDIT_LIST_LOGS, SYSPROC.AUDIT_DELIM_EXTRACT:
DB2&gt; SELECT * 
           FROM SYSCAT.ROUTINEAUTH 
           WHERE SPECIFICNAME LIKE 'AUDIT%' AND SCHEMA='SYSPROC'

If non-authorized users have EXECUTE privilege on any of the above three routines, this is a finding.</check-content></check></Rule></Group><Group id="V-74461"><title>SRG-APP-000122-DB-000203</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89135r1_rule" severity="medium" weight="10.0"><version>DB2X-00-002600</version><title>DB2 must protect its audit configuration from unauthorized modification.</title><description>&lt;VulnDiscussion&gt;Protecting audit data also includes identifying and protecting the tools used to view and manipulate log data. Therefore, protecting audit tools is necessary to prevent unauthorized operation on audit data.

Applications providing tools to interface with audit data will leverage user permissions and roles identifying the user accessing the tools and the corresponding rights the user enjoys in order make access decisions regarding the modification of audit tools.

Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001494</ident><fixtext fixref="F-81061r1_fix">Update the value of SYSADM_GROUP to a group which has only authorized members.

     $db2 update dbm cfg using SYSADM_GROUP &lt;SYSADMIN GROUP&gt;

Remove unauthorized users from the SYSADM_GROUP using the operating system tools/commands. 

Revoke SECADM authority from non-authorized users using the SQL statement below:
DB2&gt; REVOKE SECADM ON DATABASE FROM USER &lt;user name&gt; 

Remove non-authorized members or revokes SECADM from the group or role using this SQL statement:
DB2&gt; REVOKE SECADM ON DATABASE FROM GROUP &lt;group name&gt; 
DB2&gt; REVOKE SECADM ON DATABASE FROM ROLE &lt;role name&gt; 

Revoke execute from non-authorized users if they have execute on SYSPROC.AUDIT_ARCHIVE, SYSPROC.AUDIT_LIST_LOGS, SYSPROC.AUDIT_DELIM_EXTRACT using the appropriate variation of the Revoke (routine privileges) statement.</fixtext><fix id="F-81061r1_fix" /><check system="C-74387r2_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Run the following command to find the value of the SYSADM_GROUP parameter:

     $db2 get dbm cfg 

Only authorized OS users should be part of this group. If non-authorized users are part of SYSADM_GROUP group, this is a finding.

On Windows systems, if the SYSADM_GROUP database manager configuration parameter is not specified, this is a finding.

The security administrator (who holds SECADM authority within a database) can define audit policies and control the audit requirements for an individual database. The security administrator can use the following audit routines to operate upon the database audit logs:

- The SYSPROC.AUDIT_ARCHIVE stored procedure archives audit logs.
- The SYSPROC.AUDIT_LIST_LOGS table function allows you to locate logs of interest.
- The SYSPROC.AUDIT_DELIM_EXTRACT stored procedure extracts data into delimited files for analysis.

The security administrator can also grant EXECUTE privilege on these routines to another user.

Run the following query to find out which users have SECADM authority in the database: 
DB2&gt; SELECT CHAR(GRANTOR,35) AS GRANTOR, CHAR(GRANTEE,35) AS GRANTEE, GRANTEETYPE  
           FROM SYSCAT.DBAUTH 
           WHERE SECURITYADMAUTH='Y'

If GRANTEETYPE is 'U' and the authorization ID is not an authorized user, this is a finding.

If the GRANTEETYPE is 'G', then all members of the external group identified by GRANTEE must be authorized users; otherwise, this is a finding.

If the GRANTEETYPE is 'R', then all members of the database role identified by GRANTEE must be authorized users; otherwise, this is a finding.

The members of a role can be found using this statement: 
DB2&gt; SELECT CHAR(GRANTOR,35) AS GRANTOR, CHAR(GRANTEE,35) AS GRANTEE, GRANTEETYPE 
           FROM SYSCAT.ROLEAUTH 
           WHERE ROLENAME= &lt;search role name&gt;

Run the following query to find out which users have execute privilege on SYSPROC.AUDIT_ARCHIVE, SYSPROC.AUDIT_LIST_LOGS, SYSPROC.AUDIT_DELIM_EXTRACT:
DB2&gt; SELECT * 
           FROM SYSCAT.ROUTINEAUTH 
           WHERE SPECIFICNAME LIKE 'AUDIT%' AND SCHEMA='SYSPROC'

If non-authorized users have EXECUTE privilege on any of the above three routines, this is a finding.</check-content></check></Rule></Group><Group id="V-74463"><title>SRG-APP-000123-DB-000204</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89137r1_rule" severity="medium" weight="10.0"><version>DB2X-00-002700</version><title>DB2 must protect its audit features from unauthorized removal.</title><description>&lt;VulnDiscussion&gt;Protecting audit data also includes identifying and protecting the tools used to view and manipulate log data. Therefore, protecting audit tools is necessary to prevent unauthorized operation on audit data.

Applications providing tools to interface with audit data will leverage user permissions and roles identifying the user accessing the tools and the corresponding rights the user enjoys in order make access decisions regarding the deletion of audit tools.

Audit tools include, but are not limited to, vendor-provided and open source audit tools needed to successfully view and manipulate audit information system activity and records. Audit tools include custom queries and report generators.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001495</ident><fixtext fixref="F-81063r1_fix">Update the value of SYSADM_GROUP to a group which has only authorized members.

     $db2 update dbm cfg using SYSADM_GROUP &lt;SYSADMIN GROUP&gt;

Remove unauthorized users from the SYSADM_GROUP using the operating system tools/commands. 

Revoke SECADM authority from non-authorized users using the SQL statement below:
DB2&gt; REVOKE SECADM ON DATABASE FROM USER &lt;user name&gt; 

Remove non-authorized members or revokes SECADM from the group or role using this SQL statement:
DB2&gt; REVOKE SECADM ON DATABASE FROM GROUP &lt;group name&gt; 
DB2&gt; REVOKE SECADM ON DATABASE FROM ROLE &lt;role name&gt; 

Revoke execute from non-authorized users if they have execute on SYSPROC.AUDIT_ARCHIVE, SYSPROC.AUDIT_LIST_LOGS, SYSPROC.AUDIT_DELIM_EXTRACT using the appropriate variation of Revoke (routine privileges) statement.</fixtext><fix id="F-81063r1_fix" /><check system="C-74389r2_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Run the following command to find the value of the SYSADM_GROUP parameter:

     $db2 get dbm cfg 

Only authorized OS users should be part of this group. If non-authorized users are part of the SYSADM_GROUP group, this is a finding.

On Windows systems, if the SYSADM_GROUP database manager configuration parameter is not specified, this is a finding.

The security administrator (who holds SECADM authority within a database) can define audit policies and control the audit requirements for an individual database. The security administrator can use the following audit routines to operate upon the database audit logs:

- The SYSPROC.AUDIT_ARCHIVE stored procedure archives audit logs.
- The SYSPROC.AUDIT_LIST_LOGS table function allows you to locate logs of interest.
- The SYSPROC.AUDIT_DELIM_EXTRACT stored procedure extracts data into delimited files for analysis.

The security administrator can also grant EXECUTE privilege on these routines to another user.

Run the following query to find out which users have SECADM authority in database: 

DB2&gt; SELECT CHAR(GRANTOR,35) AS GRANTOR, CHAR(GRANTEE,35) AS GRANTEE, GRANTEETYPE  
           FROM SYSCAT.DBAUTH 
           WHERE SECURITYADMAUTH='Y'

If GRANTEETYPE is 'U' and the authorization ID is not an authorized user, this is a finding.

If the GRANTEETYPE is 'G', then all members of the external group identified by GRANTEE must be authorized users, otherwise, this is a finding.

If the GRANTEETYPE is 'R', then all members of the database role identified by GRANTEE must be authorized users, otherwise, this is a finding.

The members of a role can be found using this statement: 

DB2&gt; SELECT CHAR(GRANTOR,35) AS GRANTOR, CHAR(GRANTEE,35) AS GRANTEE, GRANTEETYPE 
           FROM SYSCAT.ROLEAUTH 
           WHERE ROLENAME= &lt;search role name&gt;

Run the following query to find out which users have execute privilege on SYSPROC.AUDIT_ARCHIVE, SYSPROC.AUDIT_LIST_LOGS, SYSPROC.AUDIT_DELIM_EXTRACT:
DB2&gt; SELECT * 
           FROM SYSCAT.ROUTINEAUTH 
           WHERE SPECIFICNAME LIKE 'AUDIT%' AND SCHEMA='SYSPROC'

If non-authorized users have EXECUTE privilege on any of above three routines, this is a finding.</check-content></check></Rule></Group><Group id="V-74465"><title>SRG-APP-000133-DB-000179</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89139r1_rule" severity="medium" weight="10.0"><version>DB2X-00-002800</version><title>DB2 must limit  privileges to change software modules, to include stored procedures, functions and triggers, and links to software external to DB2.</title><description>&lt;VulnDiscussion&gt;If the system were to allow any user to make changes to software libraries, then those changes might be implemented without undergoing the appropriate testing and approvals that are part of a robust change management process.

Accordingly, only qualified and authorized individuals shall be allowed to obtain access to information system components for purposes of initiating changes, including upgrades and modifications.

Unmanaged changes that occur to the database software libraries or configuration can lead to unauthorized or compromised installations.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001499</ident><fixtext fixref="F-81065r1_fix">Use the appropriate variation of REVOKE (schema privileges) statement to remove the privileges from unauthorized users/roles/groups:
 DB2&gt; REVOKE &lt;ALTERIN/CREATEIN/DROPIN&gt; ON SCHEMA &lt;schema-name&gt; FROM &lt;USER/GROUP/PUBLIC/ROLE&gt; 
 
For more on this topic, see the Help page on "REVOKE (schema privileges) statement":
http://www.ibm.com/support/knowledgecenter/en/SSEPGG_10.5.0/com.ibm.db2.luw.sql.ref.doc/doc/r0000988.html</fixtext><fix id="F-81065r1_fix" /><check system="C-74391r3_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Use the following query to find who has privileges to alter, drop, and create objects in the schemas:
DB2&gt; SELECT * FROM SYSCAT.SCHEMAAUTH
 
If non-authorized users have privileges to create, alter, or drop objects, this is a finding.</check-content></check></Rule></Group><Group id="V-74467"><title>SRG-APP-000133-DB-000179</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89141r1_rule" severity="medium" weight="10.0"><version>DB2X-00-002900</version><title>The OS must limit privileges to change the DB2 software resident within software libraries (including privileged programs).</title><description>&lt;VulnDiscussion&gt;If the system were to allow any user to make changes to software libraries, then those changes might be implemented without undergoing the appropriate testing and approvals that are part of a robust change management process.

Accordingly, only qualified and authorized individuals shall be allowed to obtain access to information system components for purposes of initiating changes, including upgrades and modifications.

Unmanaged changes that occur to the database software libraries or configuration can lead to unauthorized or compromised installations.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001499</ident><fixtext fixref="F-81067r1_fix">Remove the write permission from non-root, non-sysadmin users on the DB2 installation base directory and instance home directory.</fixtext><fix id="F-81067r1_fix" /><check system="C-74393r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Run the db2level command to find the installation directory of DB2 server software: 

     $db2level  

If any user other than the sysadmin and root users has write permission on these directories and subsequent subdirectories under this directory, this is a finding. 

On Linux and UNIX operating systems, the instance directory is located in the $INSTHOME/sqllib directory, where $INSTHOME is the home directory of the instance owner. 

On Windows operating systems, the instance directory is located under the /sqllib directory where the DB2 database product was installed. 

If any user other than the instance owner and the root user has write permission to instance home directory and subsequent subdirectories under it, this is a finding.</check-content></check></Rule></Group><Group id="V-74469"><title>SRG-APP-000133-DB-000198</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89143r1_rule" severity="medium" weight="10.0"><version>DB2X-00-003000</version><title>The DB2 software installation account must be restricted to authorized users.</title><description>&lt;VulnDiscussion&gt;When dealing with change control issues, it should be noted any changes to the hardware, software, and/or firmware components of the information system and/or application can have significant effects on the overall security of the system. 

If the system were to allow any user to make changes to software libraries, then those changes might be implemented without undergoing the appropriate testing and approvals that are part of a robust change management process.

Accordingly, only qualified and authorized individuals shall be allowed access to information system components for purposes of initiating changes, including upgrades and modifications.

DBA and other privileged administrative or application owner accounts are granted privileges that allow actions that can have a great impact on database security and operation. It is especially important to grant privileged access to only those persons who are qualified and authorized to use them.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001499</ident><fixtext fixref="F-81069r1_fix">Develop, document, and implement procedures to restrict and track use of the DBMS software installation account.</fixtext><fix id="F-81069r1_fix" /><check system="C-74395r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Review procedures for controlling, granting access to, and tracking use of the DBMS software installation account.

If access or use of this account is not restricted to the minimum number of personnel required or if unauthorized access to the account has been granted, this is a finding.</check-content></check></Rule></Group><Group id="V-74471"><title>SRG-APP-000133-DB-000199</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89145r1_rule" severity="medium" weight="10.0"><version>DB2X-00-003100</version><title>Database software, including DBMS configuration files, must be stored in dedicated directories, separate from the host OS and other applications.</title><description>&lt;VulnDiscussion&gt;When dealing with change control issues, it should be noted any changes to the hardware, software, and/or firmware components of the information system and/or application can potentially have significant effects on the overall security of the system.

Multiple applications can provide a cumulative negative effect. A vulnerability and subsequent exploit to one application can lead to an exploit of other applications sharing the same security context. For example, an exploit to a web server process that leads to unauthorized administrative access to host system directories can most likely lead to a compromise of all applications hosted by the same system. Database software not installed using dedicated directories both threatens and is threatened by other hosted applications. Access controls defined for one application may by default provide access to the other application's database objects or directories. Any method that provides any level of separation of security context assists in the protection between applications.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001499</ident><fixtext fixref="F-81071r1_fix">Remove the non-DB2 software from instance home directory and subdirectories.

Remove the non-DB2 software from DB2 installation directories and subdirectories.</fixtext><fix id="F-81071r1_fix" /><check system="C-74397r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>The base installation directory of the database server software and the instance home directory location is configurable at the time of installation.

Run the db2ls command to find the installation directory of DB2 server software.

The environment variable INSTHOME points to instance home directory.

If there are non-DB2-related files in the instance home directory and the subsequent subdirectories under it, this is a finding. 

If there are non-DB2-related files in the DB2 install directory and the subsequent subdirectories under it, this is a finding.</check-content></check></Rule></Group><Group id="V-74473"><title>SRG-APP-000133-DB-000200</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89147r1_rule" severity="medium" weight="10.0"><version>DB2X-00-003200</version><title>Database objects (including but not limited to tables, indexes, storage, stored procedures, functions, triggers, links to software external to DB2, etc.) must be owned by database/DBMS principals authorized for ownership.</title><description>&lt;VulnDiscussion&gt;Within the database, object ownership implies full privileges to the owned object, including the privilege to assign access to the owned objects to other subjects. Database functions and procedures can be coded using definer's rights. This allows anyone who utilizes the object to perform the actions if they were the owner. If not properly managed, this can lead to privileged actions being taken by unauthorized individuals.

Conversely, if critical tables or other objects rely on unauthorized owner accounts, these objects may be lost when an account is removed.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001499</ident><fixtext fixref="F-81073r1_fix">Use the list identified in check. Drop and create the objects as necessary with the correct ownership.
DB2&gt; DROP
DB2&gt; CREATE

Note: For additional information regarding the DROP statement, select the following link:
http://www-01.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.sql.ref.doc/doc/r0000945.html?lang=en</fixtext><fix id="F-81073r1_fix" /><check system="C-74399r3_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Get the list of authorized owners from ISSO or DBA.

Use the following catalog views/queries to find the ownership of the various database objects:

Select libname,owner from syscat.libraries
Select modulename,owner from syscat.modules
Select tabname,owner from syscat.nicknames
Select pkgname,owner from syscat.packages
Select routinename,owner from syscat.routines
Select seqname,owner from syscat.sequences
Select constname,owner from syscat.tabconst
Select tabname,owner from syscat.tables
Select tbspace,owner from syscat.tablespaces
Select trigname,owner from syscat.triggers

If any owner is not in the ISSO/DBA provided list, this is a finding.</check-content></check></Rule></Group><Group id="V-74475"><title>SRG-APP-000133-DB-000362</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89149r1_rule" severity="medium" weight="10.0"><version>DB2X-00-003300</version><title>The role(s)/group(s) used to modify database structure (including but not necessarily limited to tables, indexes, storage, etc.) and logic modules (stored procedures, functions, triggers, links to software external to DB2, etc.) must be restricted to authorized users.</title><description>&lt;VulnDiscussion&gt;If the DBMS were to allow any user to make changes to database structure or logic, then those changes might be implemented without undergoing the appropriate testing and approvals that are part of a robust change management process.

Accordingly, only qualified and authorized individuals shall be allowed to obtain access to information system components for purposes of initiating changes, including upgrades and modifications.

Unmanaged changes that occur to the database software libraries or configuration can lead to unauthorized or compromised installations.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001499</ident><fixtext fixref="F-81075r1_fix">Use the appropriate variation of the REVOKE command to revoke the privileges from non-qualified and non-authorized individuals:
DB2&gt; REVOKE

Notes: Information about each database is automatically maintained in a set of views called the system catalog which is created when the database is created. This system catalog describes tables, columns, indexes, programs, privileges, and other objects.

information on the system catalog is available in the IBM knowledge base:

http://www-01.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.admin.sec.doc/doc/c0005478.html?lang=en
 
http://www-01.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.admin.sec.doc/doc/c0005817.html</fixtext><fix id="F-81075r1_fix" /><check system="C-74401r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Get the list of qualified and authorized owners from ISSO or DBA. 

The following view list information about privileges held by the users, the identities of users granting privileges, and the object ownership:
DB2&gt; SELECT * FROM SYSIBMADM.PRIVILEGES

If any of the privileges is held by non-qualified and non-authorized individuals, this is a finding.</check-content></check></Rule></Group><Group id="V-74477"><title>SRG-APP-000141-DB-000090</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89151r1_rule" severity="medium" weight="10.0"><version>DB2X-00-003400</version><title>Default demonstration and sample databases, database objects, and applications must be removed.</title><description>&lt;VulnDiscussion&gt;Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

It is detrimental for software products to provide, or install by default, functionality exceeding requirements or mission objectives. Examples include, but are not limited to, installing advertising software, demonstrations, or browser plugins not related to requirements or providing a wide array of functionality, not required for every mission, that cannot be disabled.

DBMSs must adhere to the principles of least functionality by providing only essential capabilities.

Demonstration and sample database objects and applications present publicly known attack points for malicious users. These demonstration and sample objects are meant to provide simple examples of coding specific functions and are not developed to prevent vulnerabilities from being introduced to the DBMS and host system.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000381</ident><fixtext fixref="F-81077r1_fix">Run the following command to DROP the SAMPLE database:

     $db2 drop database sample</fixtext><fix id="F-81077r1_fix" /><check system="C-74403r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Use the list db directory to see if the SAMPLE database exists.

     $db2 list db directory

If the SAMPLE database exists, this is a finding.</check-content></check></Rule></Group><Group id="V-74479"><title>SRG-APP-000141-DB-000091</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89153r1_rule" severity="medium" weight="10.0"><version>DB2X-00-003500</version><title>Unused database components, DBMS software, and database objects must be removed.</title><description>&lt;VulnDiscussion&gt;Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions).

It is detrimental for software products to provide, or install by default, functionality exceeding requirements or mission objectives. 

DBMSs must adhere to the principles of least functionality by providing only essential capabilities.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000381</ident><fixtext fixref="F-81079r1_fix">On UNIX/Linux, run the following db2_deinstall command to remove the non-essential features:

     $db2_deinstall –F &lt;feature&gt;

Note: The db2_deinstall command is located at DB2DIR/install, where DB2DIR is the location where the current version of the DB2 database product is installed. (If uncertain of the value to provide for DB2DIR, find it using the db2level command.

On Windows, run the db2unins command to remove one or more db2 product, feature or languages. 
   
     &gt;&gt;-db2unins –p product     (to remove db2 product) 
         or 
     &gt;&gt;-db2unins –u response-file     (to remove db2 product, feature or languages.)

Note: 
Use the following URL to access the knowledgebase documentation on the db2_deinstall command: 
http://www.ibm.com/support/knowledgecenter/en/SSEPGG_10.5.0/com.ibm.db2.luw.admin.cmd.doc/doc/r0023670.html

Use the following URL to access the knowledgebase documentation on the db2unins command: 
http://www-01.ibm.com/support/knowledgecenter/SSEPGGman db2__10.5.0/com.ibm.db2.luw.admin.cmd.doc/doc/r0023371.html?lang=en</fixtext><fix id="F-81079r1_fix" /><check system="C-74405r3_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>On UNIX/LINUX, run the db2ls command to find all install paths of DB2 on the system:

     $db2ls

Run the db2ls command to find installed features of database on install paths:

     $db2ls -q -b &lt;db2 install path&gt;

If there are installed features which are not required by the mission objectives and are non-essential, this is a finding.

On Windows, go to Registry Editor in Windows.
Then select Computer &gt;&gt; HKEY_LOCAL_MACHINE &gt;&gt; SOFTWARE &gt;&gt; IBM &gt;&gt; DB2 &gt;&gt; COMPONENTS 
If there are installed features which are not required by the mission objectives and are non-essential, this is a finding.

Example: 
     db2ls -q -b /opt/ibm/db2/V10.5
Install Path : /opt/ibm/db2/V10.5

Feature Response File ID             Level   Fix Pack   Feature Description  
----------------------------------------------------------------------------------------------------
BASE_CLIENT                         10.5.0.7          7   Base client support 
JAVA_SUPPORT                        10.5.0.7          7   Java support 
SQL_PROCEDURES                      10.5.0.7          7   SQL procedures 
BASE_DB2_ENGINE                     10.5.0.7          7   Base server support 
CONNECT_SUPPORT                     10.5.0.7          7   Connect support 
DB2_DATA_SOURCE_SUPPORT             10.5.0.7          7   DB2 data source support 
SPATIAL_EXTENDER_SERVER_SUPPORT     10.5.0.7          7   Spatial Extender server support 
JDK                                 10.5.0.7          7   IBM Software Development Kit (SDK) for Java(TM) 
LDAP_EXPLOITATION                   10.5.0.7          7   DB2 LDAP support 
INSTANCE_SETUP_SUPPORT              10.5.0.7          7   DB2 Instance Setup wizard 
ACS                                 10.5.0.7          7   Integrated Flash Copy Support 
SPATIAL_EXTENDER_CLIENT_SUPPORT     10.5.0.7          7   Spatial Extender client 
COMMUNICATION_SUPPORT_TCPIP         10.5.0.7          7   Communication support - TCP/IP 
APPLICATION_DEVELOPMENT_TOOLS       10.5.0.7          7   Base application development tools 
DB2_UPDATE_SERVICE                  10.5.0.7          7   DB2 Update Service 
REPL_CLIENT                         10.5.0.7          7   Replication tools 
TEXT_SEARCH                         10.5.0.7          7   DB2 Text Search 
INFORMIX_DATA_SOURCE_SUPPORT        10.5.0.7          7   Informix data source support 
ORACLE_DATA_SOURCE_SUPPORT          10.5.0.7          7   Oracle data source support 
FIRST_STEPS                         10.5.0.7          7   First Steps 
GUARDIUM_INST_MNGR_CLIENT           10.5.0.7          7   Guardium Installation Manager Client</check-content></check></Rule></Group><Group id="V-74481"><title>SRG-APP-000141-DB-000092</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89155r1_rule" severity="medium" weight="10.0"><version>DB2X-00-003600</version><title>Unused database components which are integrated in DB2 and cannot be uninstalled must be disabled.</title><description>&lt;VulnDiscussion&gt;Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions). 

It is detrimental for software products to provide, or install by default, functionality exceeding requirements or mission objectives. 

DBMSs must adhere to the principles of least functionality by providing only essential capabilities.

Unused, unnecessary DBMS components increase the attack vector for the DBMS by introducing additional targets for attack. By minimizing the services and applications installed on the system, the number of potential vulnerabilities is reduced. Components of the system that are unused and cannot be uninstalled must be disabled. The techniques available for disabling components will vary by DBMS product, OS and the nature of the component and may include DBMS configuration settings, OS service settings, OS file access security, and DBMS user/group permissions.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000381</ident><fixtext fixref="F-81081r1_fix">Use the appropriate version of the REVOKE command to remove unauthorized access to the designated features.</fixtext><fix id="F-81081r1_fix" /><check system="C-74407r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Review the system security plan.  Determine what DB2 features are recognized as requiring specific access controls.  Determine which roles are authorized to use and which may not use the designated features.

Review the permissions granted in the database.  If any role is permitted to use any feature not designated as authorized, this is a finding.</check-content></check></Rule></Group><Group id="V-74483"><title>SRG-APP-000141-DB-000093</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89157r1_rule" severity="medium" weight="10.0"><version>DB2X-00-003700</version><title>Access to external executables must be disabled or restricted.</title><description>&lt;VulnDiscussion&gt;Information systems are capable of providing a wide variety of functions and services. Some of the functions and services, provided by default, may not be necessary to support essential organizational operations (e.g., key missions, functions). 

It is detrimental for applications to provide, or install by default, functionality exceeding requirements or mission objectives. 

Applications must adhere to the principles of least functionality by providing only essential capabilities.

DBMSs may spawn additional external processes to execute procedures that are defined in the DBMS but stored in external host files (external procedures). The spawned process used to execute the external procedure may operate within a different OS security context than the DBMS and provide unauthorized access to the host system.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000381</ident><fixtext fixref="F-81083r1_fix">Drop the external routines if these are non-essential for mission objective.
DB2&gt; DROP FUNCTION &lt;name&gt;

Revoke execute privileges from non-authorized users on external routines. 
DB2&gt; REVOKE EXECUTE ON FUNCTION &lt;FUNCTION1&gt; FROM &lt;USER1&gt;

Note: Select the following link for the knowledgebase information on the DROP statement: 
http://www.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.sql.ref.doc/doc/r0000945.html?cp=SSEPGG_10.5.0%2F2-12-7-129&amp;lang=en</fixtext><fix id="F-81083r1_fix" /><check system="C-74409r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Use the following SQL Query to find external routines: 
DB2&gt; SELECT ROUTINENAME 
           FROM SYSCAT.ROUTINES 
           WHERE ORIGIN='E' 

Use the following command to find out which user has privileges to run the external routines found with last query.
DB2&gt; SELECT GRANTEE 
           FROM SYSCAT.ROUTINEAUTH 

If non-essential routines exist outside the database, this is a finding.

If non-authorized users have privileges on external routines, this is a finding.</check-content></check></Rule></Group><Group id="V-74485"><title>SRG-APP-000142-DB-000094</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89159r2_rule" severity="medium" weight="10.0"><version>DB2X-00-003800</version><title>DB2 must be configured to prohibit or restrict the use of organization-defined functions, ports, protocols, and/or services, as defined in the PPSM CAL and vulnerability assessments.</title><description>&lt;VulnDiscussion&gt;In order to prevent unauthorized connection of devices, unauthorized transfer of information, or unauthorized tunneling (i.e., embedding of data types within data types), organizations must disable or restrict unused or unnecessary physical and logical ports/protocols/services on information systems.

Applications are capable of providing a wide variety of functions and services. Some of the functions and services provided by default may not be necessary to support essential organizational operations. Additionally, it is sometimes convenient to provide multiple services from a single component (e.g., email and web services); however, doing so increases risk over limiting the services provided by any one component. 

To support the requirements and principles of least functionality, the application must support the organizational requirements providing only essential capabilities and limiting the use of ports, protocols, and/or services to only those required, authorized, and approved to conduct official business or to address authorized quality of life issues.

Database Management Systems using ports, protocols, and services deemed unsafe are open to attack through those ports, protocols, and services. This can allow unauthorized access to the database and through the database to other components of the information system.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000382</ident><fixtext fixref="F-81085r2_fix">Run the following command to set the value of the DB2COMM parameter to the organization-approved communication protocol:

     $db2 set DB2COMM=TCPIP,SSL

Set the SSL version:

     $db2 update DBM CFG using SSL_VERSIONS TLSV12    

The database manager can be set to a service name or an organization-approved port number directly for the SVCENAME parameter.

Use the following command to change the database manager configuration: 

     $db2 update dbm cfg using svcename &lt;svcename&gt; 
       Or
     $db2 update dbm cfg using svcename &lt;port number&gt;

Notes: Configuring Secure Sockets Layer (SSL) support in a DB2 instance:
http://www.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.admin.sec.doc/doc/t0025241.html</fixtext><fix id="F-81085r2_fix" /><check system="C-74411r3_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Find out the communication protocol used by running the following command:

$db2set DB2COMM

If DB2 is not set to SSL, this is a finding.

Run the following command to find the service names/port numbers used by the database manager:

$db2 get dbm cfg  

Find the port numbers used by the TCP/IP and SSL services used by database manager (SVCNAME, SSL_SVCENAME) or match the service name in services file to find port numbers.

Default Location for services file

Windows Service File: %SystemRoot%\system32\drivers\etc\services
UNIX Services File: /etc/services

If ports used by the database manager are non-approved or deemed unsafe, this is a finding.
</check-content></check></Rule></Group><Group id="V-74487"><title>SRG-APP-000172-DB-000075</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89161r2_rule" severity="medium" weight="10.0"><version>DB2X-00-004100</version><title>If passwords are used for authentication, DB2 must transmit only encrypted representations of passwords.</title><description>&lt;VulnDiscussion&gt;The DoD standard for authentication is DoD-approved PKI certificates.

Authentication based on User ID and Password may be used only when it is not possible to employ a PKI certificate, and requires AO approval.

In such cases, passwords need to be protected at all times, and encryption is the standard method for protecting passwords during transmission.

DBMS passwords sent in clear text format across the network are vulnerable to discovery by unauthorized users. Disclosure of passwords may easily lead to unauthorized access to the database.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000197</ident><fixtext fixref="F-81087r2_fix">Run the following command to set the value of the authentication encryption to SERVER_ENCRYPT: 

$db2 update dbm cfg using authentication server_encrypt

Run the following db2set command to set the value of DB2AUTH to JCC_ENFORCE_SECMEC: 

$db2 set DB2AUTH=JCC_ENFORCE_SECMEC
Notes: It is recommended to set the ALTERNATE_AUTH_ENC database manager configuration parameter to AES_ONLY to require that AES encryption be used. </fixtext><fix id="F-81087r2_fix" /><check system="C-74413r2_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Run the following command to find the value of the authentication parameter: 

$db2 get dbm cfg 

If the AUTHENTICATION parameter is not set to SERVER_ENCRYPT, this is a finding.

Run the following command to find the value of the registry variable DB2AUTH: 

$db2set -all

If the value of DB2AUTH is not set to JCC_ENFORCE_SECMEC, or DB2AUTH is not set (i.e. a row is not returned for DB2AUTH from the above command), this is a finding.</check-content></check></Rule></Group><Group id="V-74489"><title>SRG-APP-000178-DB-000083</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89163r1_rule" severity="high" weight="10.0"><version>DB2X-00-004510</version><title>Applications using the database must obscure feedback of authentication information during the authentication process to protect the information from possible exploitation/use by unauthorized individuals.</title><description>&lt;VulnDiscussion&gt;To prevent the compromise of authentication information, such as passwords and PINs, during the authentication process, the feedback from the information system must not provide any information that would allow an unauthorized user to compromise the authentication mechanism.

Obfuscation of user-provided information when typed into the system is a method used in addressing this risk.

For example, displaying asterisks when a user types in a password or PIN, is an example of obscuring feedback of authentication information.

Database applications may allow for entry of the account name and password as a visible parameter of the application execution command. This practice must be prohibited and disabled to prevent shoulder surfing.

This calls for the review of applications, which will require collaboration with the application developers. It is recognized that in many cases the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue is addressed, and must document what has been discovered.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000206</ident><fixtext fixref="F-81089r1_fix">Configure or modify applications to prohibit display of passwords in clear text.</fixtext><fix id="F-81089r1_fix" /><check system="C-74415r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Determine whether any applications that access the database allow for entry of the account name and password, or PIN.

If any do, determine whether these applications obfuscate authentication data; if they do not, this is a finding.</check-content></check></Rule></Group><Group id="V-74491"><title>SRG-APP-000178-DB-000083</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89165r1_rule" severity="high" weight="10.0"><version>DB2X-00-004520</version><title>When using command-line tools such as db2, users must use a Connect method that does not expose the password.</title><description>&lt;VulnDiscussion&gt;To prevent the compromise of authentication information, such as passwords and PINs, during the authentication process, the feedback from the information system must not provide any information that would allow an unauthorized user to compromise the authentication mechanism.

Obfuscation of user-provided information when typed into the system is a method used in addressing this risk.

For example, displaying asterisks when a user types in a password or PIN, is an example of obscuring feedback of authentication information.

"db2" and other command-line tools are part of any DB2 for LUW installation. These tools can accept a plain-text password, but do offer alternative techniques. Since the typical user of these tools is a database administrator, the consequences of password compromise are particularly serious. Therefore, the use of plain-text passwords must be prohibited, as a matter of practice and procedure.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000206</ident><fixtext fixref="F-81091r1_fix">For the "db2" command, which cannot be configured not to accept a plain-text password, and any other essential tool with the same limitation:
1) Document the need for it, who uses it, and any relevant mitigations, and obtain AO approval.
2) Train all users of the tool in the importance of not using the plain-text password option and in how to keep the password hidden.</fixtext><fix id="F-81091r1_fix" /><check system="C-74417r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>For the "db2" command, which cannot be configured not to accept a plain-text password, and any other essential tool with the same limitation, verify that the system documentation explains the need for the tool, who uses it, and any relevant mitigations; and that AO approval has been obtained; if not, this is a finding.

Request evidence that all users of the tool are trained in the importance of not using the plain-text password option and in how to keep the password hidden; and that they adhere to this practice. If not, this is a finding.</check-content></check></Rule></Group><Group id="V-74493"><title>SRG-APP-000179-DB-000114</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89167r1_rule" severity="high" weight="10.0"><version>DB2X-00-004600</version><title>DB2 must use NIST FIPS 140-2 validated cryptographic modules for cryptographic operations.</title><description>&lt;VulnDiscussion&gt;Use of weak or not validated cryptographic algorithms undermines the purposes of utilizing encryption and digital signatures to protect data.  Weak algorithms can be easily broken and not validated cryptographic modules may not implement algorithms correctly. Unapproved cryptographic modules or algorithms should not be relied on for authentication, confidentiality or integrity. Weak cryptography could allow an attacker to gain access to and modify data stored in the database as well as the administration settings of the DBMS.

Applications, including DBMSs, utilizing cryptography are required to use approved NIST FIPS 140-2 validated cryptographic modules that meet the requirements of applicable federal laws, Executive Orders, directives, policies, regulations, standards, and guidance.  

The security functions validated as part of FIPS 140-2 for cryptographic modules are described in FIPS 140-2 Annex A.

The cryptographic functionality in IBM DB2 for LUW includes features that are fully FIPS 140-2 validated, and others that are not.  To be sure of using only FIPS 140-2 validated modules, specify SSL (TLS) for communication and IBM Database Native Encryption for data at rest.

The decision whether to employ cryptography is the responsibility of the information owner/steward, who exercises discretion within the framework of applicable rules, policies, and law.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000803</ident><fixtext fixref="F-81093r1_fix">Modify the cryptographic configuration to employ SSL/TLS for encryption of communications.

Modify the cryptographic configuration to employ IBM Database Native Encryption for encryption of data at rest.</fixtext><fix id="F-81093r1_fix" /><check system="C-74419r2_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>If it has been determined that encryption is not required, this is not a finding.

Review the cryptographic configuration.  

If SSL/TLS is not specified for encryption of communications, this is a finding. See below for more detailed instructions.

If IBM Database Native Encryption is not specified for encryption of data at rest, this is a finding. See below for more detailed instructions.

To Verify SSL is in use:
Check the DB2 registry variable DB2COMM to include SSL.

     $db2 set all

If DB2COMM does not include SSL, this is a finding. 

Find the value of SSL_VERSIONS by running:

     $db2 get dbm cfg

If SSL_VERSIONS is not set to TLSV12, this is a finding.

Find the value of SSL_CIPHERSPECS by running:

     $db2 get dbm cfg

If SSL_CIPHERSPECS is not set to a symmetric algorithm key length that is greater than or equal to 112, this is a finding. 

Find the value of SSL_SVC_LABEL by running: 

     $db2 get dbm cfg

If the parameter SSL_SVC_LABEL is not set to a certificate with RSA key length that is greater than or equal to 2048, this is a finding. 

If the certificate does not have a digital signature with minimum SHA2, this is a finding.

The above settings ensure that all connections over SSL in any CLP or Java application strictly adhere to NIST SP 800-131A.

To Verify DB2 native encryption is being used run the following SQL Query:
DB2&gt; SELECT SUBSTR(object_name,1,8) AS NAME, SUBSTR(object_type,1,8) TYPE, SUBSTR(algorithm,1,8) ALGORITHM 
           FROM TABLE(sysproc.admin_get_encryption_info())

If value of Algorithm is NULL for the database, this is a finding. 

If the database is not encrypted with native encryption or any third-party tool, this is a finding.</check-content></check></Rule></Group><Group id="V-74495"><title>SRG-APP-000211-DB-000122</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89169r1_rule" severity="medium" weight="10.0"><version>DB2X-00-004800</version><title>DB2 must separate user functionality (including user interface services) from database management functionality.</title><description>&lt;VulnDiscussion&gt;Information system management functionality includes functions necessary to administer databases, network components, workstations, or servers and typically requires privileged user access. 

The separation of user functionality from information system management functionality is either physical or logical and is accomplished by using different computers, different central processing units, different instances of the operating system, different network addresses, combinations of these methods, or other methods, as appropriate. 

An example of this type of separation is observed in web administrative interfaces that use separate authentication methods for users of any other information system resources. 

This may include isolating the administrative interface on a different domain and with additional access controls.

If administrative functionality or information regarding DBMS management is presented on an interface available for users, information on DBMS settings may be inadvertently made available to the user.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001082</ident><fixtext fixref="F-81095r1_fix">Remove general users from the privileged groups, SYSADM_GROUP, SYSCTRL_GROUP, SYSMAINT_GROUP, SYSMON_GROUP using OS utilities/interface.

On Windows systems, set the SYSADM_GROUP database manager configuration parameter to the appropriate value.</fixtext><fix id="F-81095r1_fix" /><check system="C-74421r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Run the following command to find the privileged groups and get the value of SYSADM_GROUP, SYSCTRL_GROUP, SYSMAINT_GROUP, SYSMON_GROUP:

     $db2 get dbm cfg 

If general users are part of any of above groups, this is a finding. 

On Windows systems, if the SYSADM_GROUP database manager configuration parameter is not specified, this is a finding.

Note: On UNIX to find the members of a group from the following two files or system admin utilities provided by LINUX/UNIX vendors. 

/etc/passwd
/etc/group
e.g. if value of SYSADM_GROUP is DB2IADM1 
From operating system files find out who is member of DB2IADM1

ON WINDOWS
You can use lusrmgr.msc or any other OS utility to manage user group memberships.</check-content></check></Rule></Group><Group id="V-74497"><title>SRG-APP-000224-DB-000384</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89171r1_rule" severity="medium" weight="10.0"><version>DB2X-00-005100</version><title>DB2 must maintain the authenticity of communications sessions by guarding against man-in-the-middle attacks that guess at Session ID values.</title><description>&lt;VulnDiscussion&gt;One class of man-in-the-middle, or session hijacking, attack involves the adversary guessing at valid session identifiers based on patterns in identifiers already known.

The preferred technique for thwarting guesses at Session IDs is the generation of unique session identifiers using a FIPS 140-2 approved random number generator.

However, it is recognized that available DBMS products do not all implement the preferred technique yet may have other protections against session hijacking. Therefore, other techniques are acceptable, provided they are demonstrated to be effective.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001188</ident><fixtext fixref="F-81097r1_fix">Use the following commands to set the protocol and ports as per PPSM guidance:

     $db2 update dbm cfg using svcename    [service_name | port_number]
     $db2 update dbm cfg using ssl_svcename [ssl_service_name | port_number]

Note: http://www.ibm.com/support/knowledgecenter/en/SSEPGG_10.5.0/com.ibm.db2.luw.admin.sec.doc/doc/t0025241.html</fixtext><fix id="F-81097r1_fix" /><check system="C-74423r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Ensure DB2 is using the SSL communication protocol:

Run the following command to find the value of the network service:

     $db2 get dbm cfg

TCP/IP Service name                     (SVCENAME) 
SSL service name                         (SSL_SVCENAME) 

If the port numbers are not specified, look for the port numbers in services file and find the port numbers defined for the TCP/IP service name and SSL service name (SVCENAME, SSL_SVCENAME) above.

Default Location for services file:
    Windows Service File:  %SystemRoot%\system32\drivers\etc\services
    UNIX Services File: /etc/services

If the network protocols and ports found in previous step are not in as per PPSM guidance, this is a finding.</check-content></check></Rule></Group><Group id="V-74499"><title>SRG-APP-000226-DB-000147</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89173r1_rule" severity="medium" weight="10.0"><version>DB2X-00-005300</version><title>In the event of a system failure, DB2 must preserve any information necessary to determine cause of failure and any information necessary to return to operations with least disruption to mission processes.</title><description>&lt;VulnDiscussion&gt;Failure to a known state can address safety or security in accordance with the mission/business needs of the organization.

Failure to a known secure state helps prevent a loss of confidentiality, integrity, or availability in the event of a failure of the information system or a component of the system. 

Preserving information system state information helps to facilitate system restart and return to the operational mode of the organization with less disruption of mission/business processes. 

Since it is usually not possible to test this capability in a production environment, systems should either be validated in a testing environment or prior to installation. This requirement is normally a function of the design of the IDPS component. Compliance can be verified by acceptance/validation processes or vendor attestation.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001665</ident><fixtext fixref="F-81099r1_fix">Modify the database backup plan to include whether the database needs to be in archive logging, the correct recovery model to be used, the backup schedule, and the plan for testing the database restoration.

Update db2 logging to archive logging for the database which requires roll forward recovery using the following db2 command:

     $db2 update db2 cfg for &lt;database name&gt; using LOGARCHMETH1 &lt;value&gt;

Note: Set the value as per your online file system or backup vendor like TSM 

Verify and correct the scheduled backup jobs.

Correct any issues that have been causing backups to fail.

Test the restoration of the database at least once a year; correct any issues that cause it to fail. Maintain a record of these tests.

Note: 
http://www.ibm.com/support/knowledgecenter/SSEPGG_10.1.0/com.ibm.db2.luw.admin.config.doc/doc/r0011448.html
http://www.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.admin.cmd.doc/doc/r0001991.html</fixtext><fix id="F-81099r1_fix" /><check system="C-74425r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Review the system backup and recovery plan for db2 database to determine whether the database is in archive logging or circular logging, the recovery methods to be used, the backup schedule, backup media integration and the plan for testing database restoration. If any information is absent, this is a finding.

Run the following command to get the details on the logging method:

     $db2 get db cfg

If roll forward recovery is required and both logarchmeth1 and logarchmeth2 are set to value OFF then DB2 is not in archive logging, this is a finding.

Run the following command to verify backup history:

     $db2 list history backup all for &lt;dbname&gt;

Review the output of the above to see frequency and mode of backups, If the database is not being backed up per the organization’s system backup plan, this is a finding. 

Review evidence that database recovery is tested annually or more often per the backup and recovery document, and that the most recent test was successful. If not, this is a finding.</check-content></check></Rule></Group><Group id="V-74501"><title>SRG-APP-000231-DB-000154</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89175r2_rule" severity="medium" weight="10.0"><version>DB2X-00-005400</version><title>DB2 must protect the confidentiality and integrity of all information at rest.</title><description>&lt;VulnDiscussion&gt;This control is intended to address the confidentiality and integrity of information at rest in non-mobile devices and covers user information and system information. Information at rest refers to the state of information when it is located on a secondary storage device (e.g., disk drive, tape drive) within an organizational information system. Applications and application users generate information throughout the course of their application use. 

User data generated, as well as application-specific configuration data, needs to be protected. Organizations may choose to employ different mechanisms to achieve confidentiality and integrity protections, as appropriate. 

If the confidentiality and integrity of application data is not protected, the data will be open to compromise and unauthorized modification.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001199</ident><fixtext fixref="F-81101r1_fix">To create the database using DB2 native encryption run the following command:

     $db2 create db &lt;database name&gt; encrypt

Note: Select the following link for details on how to set up DB2 native encryption:
http://www-01.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.admin.sec.doc/doc/t0061766.html?lang=en 

If a third-party tool is used for database encryption (IBM highly recommends using IBM Guardium) use the third-party tool's specific check and fix.</fixtext><fix id="F-81101r1_fix" /><check system="C-74427r2_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>If the application owner and Authorizing Official have determined that encryption of data at rest is NOT required, this is not a finding.

To protect the confidentiality and integrity of information at rest, the database must be encrypted. DB2 native encryption can encrypt the data at rest; or third-party tools, like IBM Guardium, can provide encryption for data at rest.
 
To find if a database is encrypted with DB2 native encryption, run the following SQL Query:
DB2&gt; SELECT SUBSTR(OBJECT_NAME,1,8) AS NAME, SUBSTR(ALGORITHM,1,8) ALGORITHM 
           FROM TABLE(SYSPROC.ADMIN_GET_ENCRYPTION_INFO()) 
           WHERE OBJECT_TYPE='DATABASE'

If the value of Algorithm is NULL for the database, this is a finding. 

If the database is not encrypted with native encryption or any third-party tool, this is a finding.</check-content></check></Rule></Group><Group id="V-74503"><title>SRG-APP-000233-DB-000124</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89177r1_rule" severity="medium" weight="10.0"><version>DB2X-00-005500</version><title>DB2 must isolate security functions from non-security functions.</title><description>&lt;VulnDiscussion&gt;An isolation boundary provides access control and protects the integrity of the hardware, software, and firmware that perform security functions. 

Security functions are the hardware, software, and/or firmware of the information system responsible for enforcing the system security policy and supporting the isolation of code and data on which the protection is based.

Developers and implementers can increase the assurance in security functions by employing well-defined security policy models; structured, disciplined, and rigorous hardware and software development techniques; and sound system/security engineering principles. 

Database Management Systems typically separate security functionality from non-security functionality via separate databases or schemas. Database objects or code implementing security functionality should not be commingled with objects or code implementing application logic. When security and non-security functionality are commingled, users who have access to non-security functionality may be able to access security functionality.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001084</ident><fixtext fixref="F-81103r1_fix">Where possible, locate security-related database objects and code in a separate database, schema, or other separate security domain from database objects and code implementing application logic.

In all cases, use GRANT, REVOKE, ALTER ROLE, DROP ROLE, statements to add and remove permissions on security-related objects to provide effective isolation.</fixtext><fix id="F-81103r1_fix" /><check system="C-74429r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Determine application-specific security objects (lists of permissions, additional authentication information, stored procedures, application specific auditing, etc.) which are being housed inside DB2 database in addition to the built-in security objects.

Review permissions, both direct and indirect, on the security objects, both built-in and application-specific.  The following functions and views provided can help with this:
DB2&gt; SELECT LIBNAME, OWNER, LIBSCHEMA FROM SYSCAT.LIBRARIES 
DB2&gt; SELECT MODULENAME, OWNER, MODULESCHEMA FROM SYSCAT.MODULES 
DB2&gt; SELECT PKGNAME, OWNER, PKGSCHEMA FROM SYSCAT.PACKAGES 
DB2&gt; SELECT ROUTINENAME, OWNER, ROUTINESCHEMA FROM SYSCAT.ROUTINES 
DB2&gt; SELECT TRIGNAME, OWNER, TRIGSCHEMA FROM SYSCAT.TRIGGERS
DB2&gt; SELECT * FROM SYSIBMADM.PRIVILEGES

If the database(s), schema(s) and permissions on security objects are not organized to provide effective isolation of security functions from nonsecurity functions, this is a finding.</check-content></check></Rule></Group><Group id="V-74505"><title>SRG-APP-000243-DB-000128</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89179r1_rule" severity="medium" weight="10.0"><version>DB2X-00-005600</version><title>Database contents must be protected from unauthorized and unintended information transfer by enforcement of a data-transfer policy.</title><description>&lt;VulnDiscussion&gt;Applications, including DBMSs, must prevent unauthorized and unintended information transfer via shared system resources. 

Data used for the development and testing of applications often involves copying data from production. It is important that specific procedures exist for this process, to include the conditions under which such transfer may take place, where the copies may reside, and the rules for ensuring sensitive data are not exposed.

Copies of sensitive data must not be misplaced or left in a temporary location without the proper controls.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001090</ident><fixtext fixref="F-81105r1_fix">Create and document a process for moving data from production to development/test systems and follow the process.

Modify any code used for moving data from production to development/test systems to ensure copies of production data are not left in unsecured locations.</fixtext><fix id="F-81105r1_fix" /><check system="C-74431r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Verify there are proper procedures in place for the transfer of development/test data from production. Review any scripts or code that exists for the movement of production data to development/test and verify copies of production data are not left in unprotected locations.

If there is no documented procedure for data movement from production to development/test, this is a finding.

If data movement code that copies from production to development/test does exist and leaves any copies of production data in unprotected locations, this is a finding.</check-content></check></Rule></Group><Group id="V-74507"><title>SRG-APP-000243-DB-000374</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89181r1_rule" severity="medium" weight="10.0"><version>DB2X-00-005800</version><title>Access to database files must be limited to relevant processes and to authorized, administrative users.</title><description>&lt;VulnDiscussion&gt;Applications, including DBMSs, must prevent unauthorized and unintended information transfer via shared system resources. Permitting only DBMS processes and authorized, administrative users to have access to the files where the database resides helps ensure that those files are not shared inappropriately and are not open to backdoor access and manipulation.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001090</ident><fixtext fixref="F-81107r1_fix">Configure the permissions granted by the operating system/file system on the database files, database transaction log files, database audit log files, and database backup files so that only relevant system accounts and authorized system administrators and database administrators with a need to know are permitted to read/view these files.</fixtext><fix id="F-81107r1_fix" /><check system="C-74433r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Review the permissions granted to users by the operating system/file system on the instance files, database files, database transaction log files, database audit log files, and database backup files.

If any user/role who is not an authorized system administrator with a need to know or database administrator with a need to know, or a system account for running DBMS processes, is permitted to read/view any of these files, this is a finding.

Note: When the instance and database directories are created by the DB2 database manager, the permissions are accurate and should not be changed.

Use the Following queries/commands to find the locations of instance directory, database directory, transaction logs directory, archive logs directory, audit logs directory and backup files location.
1. Instance Directory

On Linux and UNIX operating systems, the instance directory is located in the $INSTHOME/sqllib directory, where $INSTHOME is the home directory of the instance owner. 

For Windows run following command to show the parent directory of the instance directory:
  
     $db2set db2instprof 

e.g., for db2 instance "DB2"
C:\&gt;db2set db2instprof
C:\ProgramData\IBM\DB2\DB2COPY1\DB2

The instance path in this case will be
C:\ProgramData\IBM\DB2\DB2COPY1\DB2

2. Database Directory 
For LINUX/UNIX Run Command:
  
     $db2 list db directory

Go to instance home directory then under this path, there is one or more db2 node directories.
The naming convention is NODExxxx, where xxxx is numeric
Identifying the DB2 node number.
Under the node directory, there are 3 types of subdirectories
  a) Same as database name.
  b) Database directories.  The naming convention is SQLxxxxx, where xxxxx is numeric.
  c) SQLDBDIR, the system database directory.
 
For Windows:
Under this local database directory, the next level is based on the instance name.

For example db2 instance "DB2", the path will be C:\DB2

Under this path, there is one or more db2 node directories.
The naming convention is NODExxxx, where xxxx is numeric
Identifying the DB2 node number.
Under the node directory, there are 3 types of subdirectories
  a) Same as database name.
  b) Database directories.  The naming convention is SQLxxxxx, where xxxxx is numeric.
  c) SQLDBDIR, the system database directory.

3. Audit Log Directory
Run following command:

     $db2audit describe

Find value of Audit Data Path and Audit Archive Path

4. Transaction Log Directory and Archive Logs Directory
Run the command:
     $db2 get db cfg 

Find value of following parameters and determine the directory locations.
Changed path to log files                  (NEWLOGPATH) 
Path to log files                                       
Overflow log path                     (OVERFLOWLOGPATH)
Mirror log path                         (MIRRORLOGPATH) 
Failover log archive path                (FAILARCHPATH)
First log archive method                 (LOGARCHMETH1)
Second log archive method                (LOGARCHMETH2)

5. Storage Files 
Run following SQL queries to find the value of tablespace containers and storage paths:

DB2&gt; SELECT varchar(container_name,70) as container_name, varchar(tbsp_name,20) as tbsp_name
           FROM TABLE(MON_GET_CONTAINER('',-2))

           SELECT VARCHAR(STORAGE_GROUP_NAME, 30) AS STOGROUP, VARCHAR(DB_STORAGE_PATH, 40) AS STORAGE_PATH 
           FROM TABLE(ADMIN_GET_STORAGE_PATHS('',-1))

6.  Backup File Location
Run the following command and review the result for Location of Backups

     $db2 list history backup all for &lt;database name&gt;</check-content></check></Rule></Group><Group id="V-74509"><title>SRG-APP-000251-DB-000160</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89183r1_rule" severity="medium" weight="10.0"><version>DB2X-00-005900</version><title>DB2 must check the validity of all data inputs except those specifically identified by the organization.</title><description>&lt;VulnDiscussion&gt;Invalid user input occurs when a user inserts data or characters into an application's data entry fields and the application is unprepared to process that data. This results in unanticipated application behavior, potentially leading to an application or information system compromise. Invalid user input is one of the primary methods employed when attempting to compromise an application.

With respect to database management systems, one class of threat is known as SQL Injection, or more generally, code injection. It takes advantage of the dynamic execution capabilities of various programming languages, including dialects of SQL. Potentially, the attacker can gain unauthorized access to data, including security settings, and severely corrupt or destroy the database.

Even when no such hijacking takes place, invalid input that gets recorded in the database, whether accidental or malicious, reduces the reliability and usability of the system. Available protections include data types, referential constraints, uniqueness constraints, range checking, and application-specific logic. Application-specific logic can be implemented within the database in stored procedures and triggers, where appropriate.

This calls for the review of applications, which will require collaboration with the application developers. It is recognized that in many cases the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue is addressed, and must document what has been discovered.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001310</ident><fixtext fixref="F-81109r1_fix">Modify database code to properly validate data before it is put into the database or acted upon by the database.

Modify the database to contain column/field definitions for each column/field in the database.

Modify the database to contain constraints and validity checking on database columns and tables that require them for data integrity.</fixtext><fix id="F-81109r1_fix" /><check system="C-74435r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Review DBMS code (stored procedures, functions, and triggers), application code, settings, column and field definitions, and constraints to determine whether the database is protected against invalid input.

If code exists that allows invalid data to be acted upon or input into the database, this is a finding.

If column/field definitions do not exist in the database, this is a finding.

If columns/fields do not contain constraints and validity checking where required, this is a finding.

Where a column/field is noted in the system documentation as necessarily free-form, even though its name and context suggest that it should be strongly typed and constrained, the absence of these protections is not a finding.

Where a column/field is clearly identified by name, caption or context as Notes, Comments, Description, Text, etc., the absence of these protections is not a finding.</check-content></check></Rule></Group><Group id="V-74511"><title>SRG-APP-000251-DB-000391</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89185r1_rule" severity="medium" weight="10.0"><version>DB2X-00-006000</version><title>DB2 and associated applications must reserve the use of dynamic code execution for situations that require it.</title><description>&lt;VulnDiscussion&gt;With respect to database management systems, one class of threat is known as SQL Injection, or more generally, code injection. It takes advantage of the dynamic execution capabilities of various programming languages, including dialects of SQL. In such cases, the attacker deduces the manner in which SQL statements are being processed, either from inside knowledge or by observing system behavior in response to invalid inputs. When the attacker identifies scenarios where SQL queries are being assembled by application code (which may be within the database or separate from it) and executed dynamically, the attacker is then able to craft input strings that subvert the intent of the query. Potentially, the attacker can gain unauthorized access to data, including security settings, and severely corrupt or destroy the database.

The principal protection against code injection is not to use dynamic execution except where it provides necessary functionality that cannot be utilized otherwise. Use strongly typed data items rather than general-purpose strings as input parameters to task-specific, pre-compiled stored procedures and functions (and triggers).

This calls for the review of applications, which will require collaboration with the application developers. It is recognized that in many cases the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue is addressed, and must document what has been discovered.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001310</ident><fixtext fixref="F-81111r1_fix">Where dynamic code execution is employed in circumstances where the objective could practically be satisfied by static execution with strongly typed parameters, modify the code to do so.</fixtext><fix id="F-81111r1_fix" /><check system="C-74437r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Review DBMS source code (stored procedures, functions, triggers) and application source code, to identify cases of dynamic code execution.

If dynamic code execution is employed in circumstances where the objective could practically be satisfied by static execution with strongly typed parameters, this is a finding.</check-content></check></Rule></Group><Group id="V-74513"><title>SRG-APP-000251-DB-000392</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89187r1_rule" severity="medium" weight="10.0"><version>DB2X-00-006100</version><title>DB2 and associated applications, when making use of dynamic code execution, must scan input data for invalid values that may indicate a code injection attack.</title><description>&lt;VulnDiscussion&gt;With respect to database management systems, one class of threat is known as SQL Injection, or more generally, code injection. It takes advantage of the dynamic execution capabilities of various programming languages, including dialects of SQL. In such cases, the attacker deduces the manner in which SQL statements are being processed, either from inside knowledge or by observing system behavior in response to invalid inputs. When the attacker identifies scenarios where SQL queries are being assembled by application code (which may be within the database or separate from it) and executed dynamically, the attacker is then able to craft input strings that subvert the intent of the query. Potentially, the attacker can gain unauthorized access to data, including security settings, and severely corrupt or destroy the database.

The principal protection against code injection is not to use dynamic execution except where it provides necessary functionality that cannot be utilized otherwise. Use strongly typed data items rather than general-purpose strings as input parameters to task-specific, pre-compiled stored procedures and functions (and triggers).

When dynamic execution is necessary, ways to mitigate the risk include the following, which should be implemented both in the on-screen application and at the database level, in the stored procedures:
-- Allow strings as input only when necessary. 
-- Rely on data typing to validate numbers, dates, etc. Do not accept invalid values. If substituting other values for them, think carefully about whether this could be subverted.
-- Limit the size of input strings to what is truly necessary.
-- If single quotes/apostrophes, double quotes, semicolons, equals signs, angle brackets, or square brackets will never be valid as input, reject them.
-- If comment markers will never be valid as input, reject them. In SQL, these are -- or /* */ 
-- If HTML and XML tags, entities, comments, etc., will never be valid, reject them.
-- If wildcards are present, reject them unless truly necessary. In SQL these are the underscore and the percentage sign, and the word ESCAPE is also a clue that wildcards are in use.
-- If SQL key words, such as SELECT, INSERT, UPDATE, DELETE, CREATE, ALTER, DROP, ESCAPE, UNION, GRANT, REVOKE, DENY, MODIFY will never be valid, reject them. Use case-insensitive comparisons when searching for these. Bear in mind that some of these words, particularly Grant (as a person's name), could also be valid input. 
-- If there are range limits on the values that may be entered, enforce those limits.
-- Institute procedures for inspection of programs for correct use of dynamic coding, by a party other than the developer.
-- Conduct rigorous testing of program modules that use dynamic coding, searching for ways to subvert the intended use.
-- Record the inspection and testing in the system documentation.
-- Bear in mind that all this applies not only to screen input, but also to the values in an incoming message to a web service or to a stored procedure called by a software component that has not itself been hardened in these ways. Not only can the caller be subject to such vulnerabilities; it may itself be the attacker.

This calls for the review of applications, which will require collaboration with the application developers. It is recognized that in many cases the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue is addressed, and must document what has been discovered.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001310</ident><fixtext fixref="F-81113r1_fix">Where dynamic code execution is employed in circumstances where the objective could practically be satisfied by static execution with strongly typed parameters, modify the code to do so.</fixtext><fix id="F-81113r1_fix" /><check system="C-74439r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Review DBMS source code (stored procedures, functions, triggers) and application source code, to identify cases of dynamic code execution.

If dynamic code execution is employed in circumstances where the objective could practically be satisfied by static execution with strongly typed parameters, this is a finding.</check-content></check></Rule></Group><Group id="V-74515"><title>SRG-APP-000266-DB-000162</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89189r1_rule" severity="medium" weight="10.0"><version>DB2X-00-006200</version><title>DB2 must provide non-privileged users with error messages that provide information necessary for corrective actions without revealing information that could be exploited by adversaries.</title><description>&lt;VulnDiscussion&gt;Any DBMS or associated application providing too much information in error messages on the screen or printout risks compromising the data and security of the system. The structure and content of error messages need to be carefully considered by the organization and development team.

Databases can inadvertently provide a wealth of information to an attacker through improperly handled error messages. In addition to sensitive business or personal information, database errors can provide host names, IP addresses, user names, and other system information not required for troubleshooting but very useful to someone targeting the system.

Carefully consider the structure/content of error messages. The extent to which information systems are able to identify and handle error conditions is guided by organizational policy and operational requirements. Information that could be exploited by adversaries includes, for example, logon attempts with passwords entered by mistake as the username, mission/business information that can be derived from (if not stated explicitly by) information recorded, and personal information, such as account numbers, social security numbers, and credit card numbers.

This calls for the review of applications, which will require collaboration with the application developers. It is recognized that in many cases the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue is addressed, and must document what has been discovered.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001312</ident><fixtext fixref="F-81115r1_fix">Configure DB2 settings, custom database code, and associated application code not to divulge sensitive information or information useful for system identification in error messages.</fixtext><fix id="F-81115r1_fix" /><check system="C-74441r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Check DB2 settings and custom database code to verify that error messages do not contain information beyond what is needed for troubleshooting the issue. 

If database errors contain PII data, sensitive business data, or information useful for identifying the host system or database structure, this is a finding.</check-content></check></Rule></Group><Group id="V-74517"><title>SRG-APP-000267-DB-000163</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89191r1_rule" severity="medium" weight="10.0"><version>DB2X-00-006300</version><title>DB2 must reveal detailed error messages only to the ISSO, ISSM, SA and DBA.</title><description>&lt;VulnDiscussion&gt;If the DBMS provides too much information in error logs and administrative messages to the screen, this could lead to compromise. The structure and content of error messages need to be carefully considered by the organization and development team. The extent to which the information system is able to identify and handle error conditions is guided by organizational policy and operational requirements. 

Some default DBMS error messages can contain information that could aid an attacker in, among others things, identifying the database type, host address, or state of the database. Custom errors may contain sensitive customer information. 

It is important that detailed error messages be visible only to those who are authorized to view them; that general users receive only generalized acknowledgment that errors have occurred; and that these generalized messages appear only when relevant to the user's task. For example, a message along the lines of, "An error has occurred. Unable to save your changes. If this problem persists, contact your help desk" would be relevant. A message such as "Warning: your transaction generated a large number of page splits" would likely not be relevant. 

Administrative users authorized to review detailed error messages typically are the ISSO, ISSM, SA and DBA. Other individuals or roles may be specified according to organization-specific needs, with DBA approval.

This calls for the review of applications, which will require collaboration with the application developers. It is recognized that in many cases the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue is addressed, and must document what has been discovered.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001314</ident><fixtext fixref="F-81117r1_fix">Configure DB2 settings, custom database code, and associated application code not to display detailed error messages to those not authorized to view them.</fixtext><fix id="F-81117r1_fix" /><check system="C-74443r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Check DB2 settings and custom database code to determine if detailed error messages are ever displayed to unauthorized individuals.

If detailed error messages are displayed to individuals not authorized to view them, this is a finding.</check-content></check></Rule></Group><Group id="V-74519"><title>SRG-APP-000295-DB-000305</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89193r1_rule" severity="medium" weight="10.0"><version>DB2X-00-006400</version><title>DB2 must automatically terminate a user session after organization-defined conditions or trigger events requiring session disconnect.</title><description>&lt;VulnDiscussion&gt;This addresses the termination of user-initiated logical sessions in contrast to the termination of network connections that are associated with communications sessions (i.e., network disconnect). A logical session (for local, network, and remote access) is initiated whenever a user (or process acting on behalf of a user) accesses an organizational information system. Such user sessions can be terminated (and thus terminate user access) without terminating network sessions. 

Session termination ends all processes associated with a user's logical session except those batch processes/jobs that are specifically created by the user (i.e., session owner) to continue after the session is terminated. 

Conditions or trigger events requiring automatic session termination can include, for example, organization-defined periods of user inactivity, targeted responses to certain types of incidents, and time-of-day restrictions on information system use.

This capability is typically reserved for specific cases where the system owner, data owner, or organization requires additional assurance.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-002361</ident><fixtext fixref="F-81119r1_fix">Run the CREATE THRESHOLD statement to create the thresholds per organization policies. 

The following command is an example for creating a threshold to terminate any sessions which have been inactive for more than 5 hours: 
DB2&gt;  CREATE THRESHOLD MONIDLETIME FOR DATABASE ACTIVITIES ENFORCEMENT DATABASE 
     WHEN CONNECTIONIDLETIME &gt; 300 MINUTE STOP EXECUTION 

Note: Select the following link for the knowledgebase information on create threshold: 

http://www.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.sql.ref.doc/doc/r0050563.html?lang=en</fixtext><fix id="F-81119r1_fix" /><check system="C-74445r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Run the following query to check the existing thresholds defined in database: 
DB2&gt; SELECT thresholdname, thresholdpredicate, maxvalue, execution 
           FROM syscat.thresholds

If there are no thresholds defined in the required categories this is a finding. 

Review the defined thresholds, if the thresholds are not defined per the organization policies, this is a finding. 

Note: Select the following link for the knowledgebase on syscat.thresholds: 

http://www.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.sql.ref.doc/doc/r0050565.html?cp=SSEPGG_10.5.0%2F2-12-8-111</check-content></check></Rule></Group><Group id="V-74561"><title>SRG-APP-000311-DB-000308</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89235r1_rule" severity="medium" weight="10.0"><version>DB2X-00-006600</version><title>When supporting applications that require security labeling of data, DB2 must associate organization-defined types of security labels having organization-defined security label values with information in storage.</title><description>&lt;VulnDiscussion&gt;Without the association of security labels to information, there is no basis for the DBMS to make security-related access-control decisions.

Security labels are abstractions representing the basic properties or characteristics of an entity (e.g., subjects and objects) with respect to safeguarding information. 

These labels are typically associated with internal data structures (e.g., tables, rows) within the database and are used to enable the implementation of access control and flow control policies, reflect special dissemination, handling or distribution instructions, or support other aspects of the information security policy. 

One example includes marking data as classified or FOUO. These security labels may be assigned manually or during data processing, but, either way, it is imperative these assignments are maintained while the data is in storage. If the security labels are lost when the data is stored, there is the risk of a data compromise.

The mechanism used to support security labeling may be a feature of the DBMS product, a third-party product, or custom application code.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-002262</ident><fixtext fixref="F-81161r1_fix">Use Create security Label statement to create the security labels: 

See the following example to create the components, policy and then security labels:

Create the components for Security labels:
DB2&gt; CREATE SECURITY LABEL COMPONENT LEVEL ARRAY ['Top Secret', 'Secret', 'Confidential', 'Unclassified'];
DB2&gt; CREATE SECURITY LABEL COMPONENT COMPARTMENTS SET {'Collection', 'Research', 'Analysis'};

Create the Policy:
DB2&gt; CREATE SECURITY POLICY DATA_ACCESS COMPONENTS LEVEL, COMPARTMENTS WITH DB2LBACRULES;

Create Security Label:
DB2&gt; CREATE SECURITY LABEL DATA_ACCESS.EMPLOYEESECLABEL COMPONENT LEVEL 'Top Secret', COMPONENT COMPARTMENTS 'Research', 'Analysis'

After creating the security labels, use one of the following statements to attach the labels to the table:
DB2&gt;  CREATE TABLE
  Or
DB2&gt; ALTER TABLE

For advice and examples, see the tutorial at:
https://www.ibm.com/developerworks/data/tutorials/dm0605wong/
https://www.ibm.com/developerworks/data/tutorials/dm0605wong/section2.html

Note: Select the following knowledgebase link for information regarding LBAC Details: 
http://www.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.admin.sec.doc/doc/c0021114.html

Select the following knowledgebase link for information regarding Create Security Label: 
http://www.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.sql.ref.doc/doc/r0020026.html?cp=SSEPGG_10.5.0%2F2-12-7-94</fixtext><fix id="F-81161r1_fix" /><check system="C-74447r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>If security labeling is not required, this is not a finding.

Query the system catalog to find out the existing security labels:
DB2&gt; SELECT * FROM SYSCAT.SECURITYLABELS

If the required labels are not created in database this is a finding.

Query the following catalog views find details of existing security labels:
DB2&gt; SELECT * FROM SYSCAT.SECURITYLABELACCESS
DB2&gt; SELECT * FROM SYSCAT.SECURITYLABELCOMPONENTELEMENTS
DB2&gt; SELECT * FROM SYSCAT.SECURITYLABELCOMPONENTS

If the security labels are not defined as per organization security policies, this is a finding.</check-content></check></Rule></Group><Group id="V-74563"><title>SRG-APP-000313-DB-000309</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89237r1_rule" severity="medium" weight="10.0"><version>DB2X-00-006700</version><title>When supporting applications that require security labeling of data, DB2 must associate organization-defined types of security labels having organization-defined security label values with information in process.</title><description>&lt;VulnDiscussion&gt;Without the association of security labels to information, there is no basis for the DBMS to make security-related access-control decisions.

Security labels are abstractions representing the basic properties or characteristics of an entity (e.g., subjects and objects) with respect to safeguarding information. 

These labels are typically associated with internal data structures (e.g., tables, rows) within the database and are used to enable the implementation of access control and flow control policies, reflect special dissemination, handling or distribution instructions, or support other aspects of the information security policy. 

One example includes marking data as classified or FOUO. These security labels may be assigned manually or during data processing, but, either way, it is imperative these assignments are maintained while the data is in storage. If the security labels are lost when the data is stored, there is the risk of a data compromise.

The mechanism used to support security labeling may be a feature of the DBMS product, a third-party product, or custom application code.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-002263</ident><fixtext fixref="F-81163r1_fix">Use Create security Label statement to create the security labels: 

See the following example to create the components, policy and then security labels:

Create the components for Security labels:
DB2&gt; CREATE SECURITY LABEL COMPONENT LEVEL ARRAY ['Top Secret', 'Secret', 'Classified', 'Unclassified'];
DB2&gt; CREATE SECURITY LABEL COMPONENT COMPARTMENTS SET {'Collection', 'Research', 'Analysis'};

Create the Policy:
DB2&gt; CREATE SECURITY POLICY DATA_ACCESS COMPONENTS LEVEL, COMPARTMENTS WITH DB2LBACRULES;

Create Security Label:
DB2&gt; CREATE SECURITY LABEL DATA_ACCESS.EMPLOYEESECLABEL COMPONENT LEVEL 'Top Secret', COMPONENT COMPARTMENTS 'Research', 'Analysis'

After creating the security labels, use one of the following statements to attach the labels to the table:
DB2&gt;  CREATE TABLE
  Or
DB2&gt; ALTER TABLE

For advice and examples, see the tutorial at:
https://www.ibm.com/developerworks/data/tutorials/dm0605wong/
https://www.ibm.com/developerworks/data/tutorials/dm0605wong/section2.html

Note: Select the following knowledgebase link for information regarding LBAC Details: 
http://www.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.admin.sec.doc/doc/c0021114.html

Select the following knowledgebase link for information regarding Create Security Label: 
http://www.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.sql.ref.doc/doc/r0020026.html?cp=SSEPGG_10.5.0%2F2-12-7-94</fixtext><fix id="F-81163r1_fix" /><check system="C-74449r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>If security labeling is not required, this is not a finding.

Query the system catalog to find out the existing security labels:
DB2&gt; SELECT * FROM SYSCAT.SECURITYLABELS

If the required labels are not created in database this is a finding.

Query the following catalog views find details of existing security labels:
DB2&gt; SELECT * FROM SYSCAT.SECURITYLABELACCESS
DB2&gt; SELECT * FROM SYSCAT.SECURITYLABELCOMPONENTELEMENTS
DB2&gt; SELECT * FROM SYSCAT.SECURITYLABELCOMPONENTS

If the security labels are not defined as per organization security policies, this is a finding.</check-content></check></Rule></Group><Group id="V-74565"><title>SRG-APP-000340-DB-000304</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89239r1_rule" severity="high" weight="10.0"><version>DB2X-00-007000</version><title>DB2 must prevent non-privileged users from executing privileged functions, to include disabling, circumventing, or altering implemented security safeguards/countermeasures.</title><description>&lt;VulnDiscussion&gt;Preventing non-privileged users from executing privileged functions mitigates the risk that unauthorized individuals or processes may gain unnecessary access to information or privileges. 

System documentation should include a definition of the functionality considered privileged.

Depending on circumstances, privileged functions can include, for example, establishing accounts, performing system integrity checks, or administering cryptographic key management activities. Non-privileged users are individuals that do not possess appropriate authorizations. Circumventing intrusion detection and prevention mechanisms or malicious code protection mechanisms are examples of privileged functions that require protection from non-privileged users.

A privileged function in the DBMS/database context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. In an SQL environment, it encompasses, but is not necessarily limited to: 

CREATE
ALTER
DROP
GRANT
REVOKE
DENY

There may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples include:

TRUNCATE TABLE;
DELETE, or
DELETE affecting more than n rows, for some n, or
DELETE without a WHERE clause;

UPDATE or
UPDATE affecting more than n rows, for some n, or
UPDATE without a WHERE clause;

any SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.

Depending on the capabilities of the DBMS and the design of the database and associated applications, the prevention of unauthorized use of privileged functions may be achieved by means of DBMS security features, database triggers, other mechanisms, or a combination of these.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-002235</ident><fixtext fixref="F-81165r1_fix">Use appropriate OS utility to remove the non-authorized users form privileged groups.

Use REVOKE command to revoke database level or object privileges from non-authorized users. 

Note: The following views and table functions list information about privileges held by users, identities of users granting privileges, and object ownership:
SYSCAT.COLAUTH: Lists the column privileges
SYSCAT.DBAUTH: Lists the database privileges
SYSCAT.INDEXAUTH: Lists the index privileges
SYSCAT.MODULEAUTH: Lists the module privileges
SYSCAT.PACKAGEAUTH: Lists the package privileges
SYSCAT.PASSTHRUAUTH: Lists the server privilege
SYSCAT.ROLEAUTH: Lists the role privileges
SYSCAT.ROUTINEAUTH: Lists the routine (functions, methods, and stored procedures) privileges
SYSCAT.SCHEMAAUTH: Lists the schema privileges
SYSCAT.SEQUENCEAUTH: Lists the sequence privileges
SYSCAT.SURROGATEAUTHIDS: Lists the authorization IDs for which another authorization ID can act as a surrogate.
SYSCAT.TABAUTH: Lists the table and view privileges
SYSCAT.TBSPACEAUTH: Lists the table space privileges
SYSCAT.VARIABLEAUTH: Lists the variable privileges
SYSCAT.WORKLOADAUTH: Lists the workload privileges
SYSCAT.XSROBJECTAUTH: Lists the XSR object privileges</fixtext><fix id="F-81165r1_fix" /><check system="C-74451r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Review the system documentation to obtain the definition of the DB2 functionality considered privileged in the context of the system in question.

Run the following command to find the privileged groups to get the value of SYSADM_GROUP, SYSCTRL_GROUP, SYSMAINT_GROUP, SYSMON_GROUP:
     
     $db2 get dbm cfg 

If non-privileged users are members of any of these groups, this is a finding. 

Run the following SQL command to find the database authorities: 
DB2&gt; SELECT * FROM SYSCAT.DBAUTH

If non-privileged users have any database authority, this is a finding. 

Query the following system catalog views to find out the authorities on all database objects:

SYSCAT.COLAUTH: Lists the column privileges
SYSCAT.DBAUTH: Lists the database privileges
SYSCAT.INDEXAUTH: Lists the index privileges
SYSCAT.MODULEAUTH: Lists the module privileges
SYSCAT.PACKAGEAUTH: Lists the package privileges
SYSCAT.PASSTHRUAUTH: Lists the server privilege
SYSCAT.ROLEAUTH: Lists the role privileges
SYSCAT.ROUTINEAUTH: Lists the routine (functions, methods, and stored procedures) privileges
SYSCAT.SCHEMAAUTH: Lists the schema privileges
SYSCAT.SEQUENCEAUTH: Lists the sequence privileges
SYSCAT.SURROGATEAUTHIDS: Lists the authorization IDs for which another authorization ID can act as a surrogate. 
SYSCAT.TABAUTH: Lists the table and view privileges
SYSCAT.TBSPACEAUTH: Lists the table space privileges
SYSCAT.VARIABLEAUTH: Lists the variable privileges
SYSCAT.WORKLOADAUTH: Lists the workload privileges
SYSCAT.XSROBJECTAUTH: Lists the XSR object privileges

If non-privileged users have any authority, this is a finding.</check-content></check></Rule></Group><Group id="V-74567"><title>SRG-APP-000356-DB-000314</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89241r1_rule" severity="medium" weight="10.0"><version>DB2X-00-007300</version><title>DB2 must utilize centralized management of the content captured in audit records generated by all components of DB2.</title><description>&lt;VulnDiscussion&gt;Without the ability to centrally manage the content captured in the audit records, identification, troubleshooting, and correlation of suspicious behavior would be difficult and could lead to a delayed or incomplete analysis of an ongoing attack.

The content captured in audit records must be managed from a central location (necessitating automation). Centralized management of audit records and logs provides for efficiency in maintenance and management of records, as well as the backup and archiving of those records. 

The DBMS may write audit records to database tables, to files in the file system, to other kinds of local repository, or directly to a centralized log management system. Whatever the method used, it must be compatible with off-loading the records to the centralized system.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001844</ident><fixtext fixref="F-81167r1_fix">Run the following command to set the audit data directory and archive data directory to the location which is compatible with the organization's centralized system:

     $db2audit configure datapath &lt;AUDIT DATA DIRECTORY &gt; archivepath &lt;AUDIT ARCHIVE DIRECTORY&gt;

Note: See the following knowledgebase page for information regarding extracting Audit logs to syslog for any file system other than Windows: 
http://www.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.admin.cmd.doc/doc/r0002072.html

DB2 does not directly support syslog on windows.  Devise an alternate method of log capture.</fixtext><fix id="F-81167r1_fix" /><check system="C-74453r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Run the following command to find the location of the audit data and archive data directories: 

     $db2audit describe 

If this filesystem location is not compatible with the centralized  audit management system, this is a finding.

If DB2 is not used in conjunction with a centralized audit management system, this is a finding.</check-content></check></Rule></Group><Group id="V-74569"><title>SRG-APP-000357-DB-000316</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89243r1_rule" severity="medium" weight="10.0"><version>DB2X-00-007500</version><title>DB2 must allocate audit record storage capacity in accordance with organization-defined audit record storage requirements.</title><description>&lt;VulnDiscussion&gt;In order to ensure sufficient storage capacity for the audit logs, the DBMS must be able to allocate audit record storage capacity. Although another requirement (SRG-APP-000515-DB-000318) mandates that audit data be off-loaded to a centralized log management system, it remains necessary to provide space on the database server to serve as a buffer against outages and capacity limits of the off-loading mechanism.

The task of allocating audit record storage capacity is usually performed during initial installation of the DBMS and is closely associated with the DBA and system administrator roles. The DBA or system administrator will usually coordinate the allocation of physical drive space with the application owner/installer and the application will prompt the installer to provide the capacity information, the physical location of the disk, or both.

In determining the capacity requirements, consider such factors as: total number of users; expected number of concurrent users during busy periods; number and type of events being monitored; types and amounts of data being captured; the frequency/speed with which audit records are off-loaded to the central log management system; and any limitations that exist on the DBMS's ability to reuse the space formerly occupied by off-loaded records.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001849</ident><fixtext fixref="F-81169r1_fix">Allocate space to the file system where the audit data directory resides.</fixtext><fix id="F-81169r1_fix" /><check system="C-74455r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Run the following command to find the location of the audit data directory: 

     $db2audit describe 

Note the location of audit data directory.

Check the operating system log records find out if there has been any out of space event for that location.

If there has been any out of space event for audit data directory, this is a finding.

Take samples of peak database activity and measure the space utilized in the audit data directory location during that time.

If the audit data directory is not sized to handle the workload between audit archiving intervals this is a finding.</check-content></check></Rule></Group><Group id="V-74571"><title>SRG-APP-000359-DB-000319</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89245r1_rule" severity="medium" weight="10.0"><version>DB2X-00-007600</version><title>DB2 must provide a warning to appropriate support staff when allocated audit record storage volume reaches 75% of maximum audit record storage capacity.</title><description>&lt;VulnDiscussion&gt;Organizations are required to use a central log management system, so, under normal conditions, the audit space allocated to the DBMS on its own server will not be an issue. However, space will still be required on the DBMS server for audit records in transit, and, under abnormal conditions, this could fill up. Since a requirement exists to halt processing upon audit failure, a service outage would result.

If support personnel are not notified immediately upon storage volume utilization reaching 75%, they are unable to plan for storage capacity expansion. 

The appropriate support staff include, at a minimum, the ISSO and the DBA/SA.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001855</ident><fixtext fixref="F-81171r1_fix">Use the Operating system tools or external utilities to monitor the Audit Data Path and set alerts for 75% space utilization.</fixtext><fix id="F-81171r1_fix" /><check system="C-74457r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Use the following command to find the directory for the Audit Data Path: 

     $db2audit describe 

If there is no monitoring of the Audit Data Path location at the Operating System level using OS utilities or system management utilities to send an alert at 75% space utilization, this is a finding.</check-content></check></Rule></Group><Group id="V-74573"><title>SRG-APP-000360-DB-000320</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89247r1_rule" severity="medium" weight="10.0"><version>DB2X-00-007700</version><title>DB2 must provide an immediate real-time alert to appropriate support staff of all audit failure events requiring real-time alerts.</title><description>&lt;VulnDiscussion&gt;It is critical for the appropriate personnel to be aware if a system is at risk of failing to process audit logs as required. Without a real-time alert, security personnel may be unaware of an impending failure of the audit capability, and system operation may be adversely affected. 

The appropriate support staff include, at a minimum, the ISSO and the DBA/SA.

Alerts provide organizations with urgent messages. Real-time alerts provide these messages immediately (i.e., the time from event detection to alert occurs in seconds or less).&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001858</ident><fixtext fixref="F-81173r1_fix">Run the following command to alter the audit policies and to set the ERRORTYPE to audit: 
DB2&gt;ALTER AUDIT POLICY &lt;DB audit policy name&gt; CATEGORIES AUDIT STATUS BOTH  ERROR TYPE AUDIT

Monitor the diagnostic log file for audit failure error using the following command: 

     $db2diag  -g msg:="Write to audit log failed"</fixtext><fix id="F-81173r1_fix" /><check system="C-74459r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>If the audit policies are created with ERRORTYPE=Audit and if there is a failure in writing the audit event log for the policy, audit failure is logged in the diagnostic.log file and user action is not completed. 

Run the following statement to find the error type for each policy:
DB2&gt; SELECT AUDITPOLICYNAME, ERRORTYPE AS ERRORTYPE 
FROM SYSCAT.AUDITPOLICIES

If ERRORTYPE value is not set to 'A', this is a finding. 

Run the following command to monitor the database diagnostic log file for audit failure errors:

     $db2diag -g msg:="Write to audit log failed"

If the diagnostic log file is not being monitored for audit failure errors, this is a finding.</check-content></check></Rule></Group><Group id="V-74575"><title>SRG-APP-000515-DB-000318</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89249r1_rule" severity="medium" weight="10.0"><version>DB2X-00-012600</version><title>DB2 must off-load audit data to a separate log management facility; this must be continuous and in near real time for systems with a network connection to the storage facility and weekly or more often for stand-alone systems.</title><description>&lt;VulnDiscussion&gt;Information stored in one location is vulnerable to accidental or incidental deletion or alteration.

Off-loading is a common process in information systems with limited audit storage capacity. 

The DBMS may write audit records to database tables, to files in the file system, to other kinds of local repository, or directly to a centralized log management system. Whatever the method used, it must be compatible with off-loading the records to the centralized system.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001851</ident><fixtext fixref="F-81175r1_fix">Configure the separate log management facility to absorb audit logs data from comma delimited files produced by extracting the audit data from archived audit logs.</fixtext><fix id="F-81175r1_fix" /><check system="C-74461r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Run the following command to find the value of “Audit Data Path” and “Audit Archive Path” 

     $db2audit describe 

DB2 can asynchronously extract the audit records in comma delimited format from “Audit Archive Path”.

If a separate log management facility approved by the organization exists and is configured to absorb the comma delimited audit log files, this is not a finding. 

If a separate log management facility is not configured to absorb the extracted log data, this is a finding.</check-content></check></Rule></Group><Group id="V-74577"><title>SRG-APP-000508-DB-000358</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89251r1_rule" severity="medium" weight="10.0"><version>DB2X-00-012200</version><title>DB2 must generate audit records for all direct access to the database(s).</title><description>&lt;VulnDiscussion&gt;In this context, direct access is any query, command, or call to the DBMS that comes from any source other than the application(s) that it supports. Examples would be the command line or a database management utility program. The intent is to capture all activity from administrative and non-standard sources.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81177r1_fix">Run the following command to define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement: 
DB2&gt; CREATE AUDIT POLICY &lt;DB audit policy name&gt; 
           CATEGORIES VALIDATE STATUS BOTH, CONTEXT STATUS BOTH 
           ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement. Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, run the following command to apply the policy created above to the database: 
DB2&gt; AUDIT DATABASE USING POLICY &lt;DB audit policy name&gt;</fixtext><fix id="F-81177r1_fix" /><check system="C-74463r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Run the following SQL statement to ensure that an audit policy is defined upon the database: 
DB2&gt; SELECT AUDITPOLICYNAME, AUDITPOLICYID 
           FROM SYSCAT.AUDITUSE  
           WHERE OBJECTTYPE IN (' ')

If no rows are returned, this is a finding. 

Using the AUDITPOLICYID from above query find the details of audit policy: 
DB2&gt; SELECT AUDITPOLICYNAME, CONTEXTSTATUS, VALIDATESTATUS, ERRORTYPE AS ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES 
           WHERE AUDITPOLICYID = &lt;audit policy ID&gt;

If the values for CONTEXTSTATUS and VALIDATESTATUS are not 'B' (Both) or ERRORTYPE is not 'A' (Audit), this is a finding.</check-content></check></Rule></Group><Group id="V-74579"><title>SRG-APP-000507-DB-000357</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89253r1_rule" severity="medium" weight="10.0"><version>DB2X-00-012100</version><title>DB2 must generate audit records when unsuccessful accesses to objects occur.</title><description>&lt;VulnDiscussion&gt;Without tracking all or selected types of access to all or selected objects (tables, views, procedures, functions, etc.), it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. 

In an SQL environment, types of access include, but are not necessarily limited to:

SELECT
INSERT
UPDATE
DELETE
EXECUTE

To aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81179r1_fix">Run the following command to define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement: 
DB2&gt; CREATE AUDIT POLICY &lt;execdb&gt; 
           CATEGORIES CONTEXT STATUS BOTH, EXECUTE STATUS BOTH
           ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement. Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, run one of the following commands to apply the correct policy to either the database as a whole or to the specific application tables: 
DB2&gt; AUDIT DATABASE USING POLICY EXECDB
  Or
DB2&gt; AUDIT TABLE &lt;table name&gt; USING POLICY EXECDB</fixtext><fix id="F-81179r1_fix" /><check system="C-74465r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Run the following SQL statement to ensure that an audit policy is defined upon the all required application tables, routines and/or the database: 
DB2&gt; SELECT AUDITPOLICYNAME, OBJECTSCHEMA, OBJECTNAME, OBJECTTYPE 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE IN ('T',' ')

If no rows are returned, this is a finding. 

If a row with OBJECTTYPE of ' ' (Database; value is a blank) exists in the output, it is a database level policy. 

If a row with OBJECTTYPE of 'T' exists in the output, it is a table level policy. 

For each audit policy returned in the statement above, run the following SQL statement to confirm that the CONTEXT and EXECUTE categories are part of that policy: 
DB2&gt; SELECT AUDITPOLICYNAME, CONTEXTSTATUS, EXECUTESTATUS, ERRORTYPE AS ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES

If the database audit policy has the values for the CONTEXTSTATUS and EXECUTESTATUS columns set to 'S' (Success) or 'B' (Both) and the value in the ERRORTYPE column set to 'A' (Audit), this is not a finding. 

If the database policy does not exist or does not cover CONTEXTSTATUS or EXECUTESTATUS then check if the appropriate policies are defined for all the required application tables. 

If any required application table audit policies do not have the values for the CONTEXTSTATUS and EXECUTESTATUS columns set to 'S' (Success) or 'B' (Both) or the value in the ERRORTYPE column set to 'A' (Audit), then this is a finding.

Note: If the routines (stored procedures) execution need to be audited then execute policy has to be defined at database level. . In DB2 EXECUTE policy can be created at the Database level or table level. EXECUTE audit policy covers the routine also if defined at database level.  Currently there is no provision to define auditing of individual/specified routines.</check-content></check></Rule></Group><Group id="V-74581"><title>SRG-APP-000507-DB-000356</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89255r1_rule" severity="medium" weight="10.0"><version>DB2X-00-012000</version><title>DB2 must generate audit records when successful accesses to objects occur.</title><description>&lt;VulnDiscussion&gt;Without tracking all or selected types of access to all or selected objects (tables, views, procedures, functions, etc.), it would be difficult to establish, correlate, and investigate the events relating to an incident, or identify those responsible for one. 

In an SQL environment, types of access include, but are not necessarily limited to:

SELECT
INSERT
UPDATE
DELETE
EXECUTE&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81181r1_fix">Run the following command to define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement: 
DB2&gt; CREATE AUDIT POLICY &lt;execdb&gt; 
           CATEGORIES CONTEXT STATUS BOTH, EXECUTE STATUS BOTH 
           ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement. Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, run one of the following commands to apply the correct policy to either the database as a whole or to the specific application tables: 
DB2&gt; AUDIT DATABASE USING POLICY EXECDB
  Or 
DB2&gt; AUDIT TABLE &lt;table name&gt; USING POLICY EXECDB</fixtext><fix id="F-81181r1_fix" /><check system="C-74467r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Run the following SQL statement to ensure that an audit policy is defined upon the all required application tables, routines and/or the database: 
DB2&gt; SELECT AUDITPOLICYNAME, OBJECTSCHEMA, OBJECTNAME, OBJECTTYPE 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE IN ('T',' ')

If no rows are returned, this is a finding. 

If a row with OBJECTTYPE of ' ' (Database; value is a blank) exists in the output, it is a database level policy. 

If a row with OBJECTTYPE of 'T' exists in the output, it is a table level policy. 

For each audit policy returned in the statement above, run the following SQL statement to confirm that the CONTEXT and EXECUTE categories are part of that policy: 
DB2&gt; SELECT AUDITPOLICYNAME, CONTEXTSTATUS, EXECUTESTATUS, ERRORTYPE AS ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES

If the database audit policy has the values for the CONTEXTSTATUS and EXECUTESTATUS columns set to 'S' (Success) or 'B' (Both) and the value in the ERRORTYPE column set to 'A' (Audit), this is not a finding.

If the database policy does not exist or does not cover CONTEXTSTATUS or EXECUTESTATUS then check if the appropriate policies are defined for all the required application tables. 

If any required application table audit policies do not have the values for the CONTEXTSTATUS and EXECUTESTATUS columns set to 'S' (Success) or 'B' (Both) or the value in the ERRORTYPE column set to 'A' (Audit), then this is a finding.

Note: If the routines (stored procedures) execution need to be audited then execute policy has to be defined at database level. In DB2 EXECUTE policy can be created at the Database level or table level. EXECUTE audit policy covers the routine also if defined at database level.  Currently there is no provision to define auditing of individual/specified routines.</check-content></check></Rule></Group><Group id="V-74583"><title>SRG-APP-000506-DB-000353</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89257r1_rule" severity="medium" weight="10.0"><version>DB2X-00-011900</version><title>DB2 must generate audit records when concurrent logons/connections by the same user from different workstations occur.</title><description>&lt;VulnDiscussion&gt;For completeness of forensic analysis, it is necessary to track who logs on to the DBMS.

Concurrent connections by the same user from multiple workstations may be valid use of the system; or such connections may be due to improper circumvention of the requirement to use the CAC for authentication; or they may indicate unauthorized account sharing; or they may be because an account has been compromised.

(If the fact of multiple, concurrent logons by a given user can be reliably reconstructed from the log entries for other events (logons/connections; voluntary and involuntary disconnections), then it is not mandatory to create additional log entries specifically for this.)&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81183r1_fix">Run the following command to define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement: 
DB2&gt; CREATE AUDIT POLICY &lt;DB audit policy name&gt; 
           CATEGORIES VALIDATE STATUS BOTH, CONTEXT STATUS BOTH 
           ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement. Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, Run the following command to apply the policy created above to the database: 
DB2&gt; AUDIT DATABASE USING POLICY &lt;DB audit policy name&gt; 

Note: Group by IPADDRESS and validate from audit log.</fixtext><fix id="F-81183r1_fix" /><check system="C-74469r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Run the following SQL statement to ensure that an audit policy is defined upon the database: 
DB2&gt; SELECT AUDITPOLICYNAME, AUDITPOLICYID 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE IN (' ')

If no rows are returned, this is a finding.

Using the AUDITPOLICYID from above query find the details of audit policy: 
DB2&gt; SELECT AUDITPOLICYNAME, CONTEXTSTATUS, VALIDATESTATUS, ERRORTYPE AS ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES 
           WHERE AUDITPOLICYID = &lt;audit policy ID&gt;

If the values for CONTEXTSTATUS and VALIDATESTATUS are not 'B' (Both) or ERRORTYPE is not 'A' (Audit), this is a finding.</check-content></check></Rule></Group><Group id="V-74585"><title>SRG-APP-000505-DB-000352</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89259r1_rule" severity="medium" weight="10.0"><version>DB2X-00-011800</version><title>DB2 must generate audit records showing starting and ending time for user access to the database(s).</title><description>&lt;VulnDiscussion&gt;For completeness of forensic analysis, it is necessary to know how long a user's (or other principal's) connection to the DBMS lasts. This can be achieved by recording disconnections, in addition to logons/connections, in the audit logs. 

Disconnection may be initiated by the user or forced by the system (as in a timeout) or result from a system or network failure. To the greatest extent possible, all disconnections must be logged.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81185r1_fix">Run the following command to define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement: 
DB2&gt; CREATE AUDIT POLICY &lt;DB audit policy name&gt;
           CATEGORIES CONTEXT STATUS BOTH 
           ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement. Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, run the following command to apply the policy created above to the database: 
DB2&gt; AUDIT DATABASE USING POLICY &lt;DB audit policy name&gt;</fixtext><fix id="F-81185r1_fix" /><check system="C-74471r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Run the following SQL statement to ensure that an audit policy is defined upon the database: 
DB2&gt; SELECT AUDITPOLICYNAME, AUDITPOLICYID 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE IN (' ')

If no rows are returned, this is a finding. 

Using the AUDITPOLICYID from above query find the details of audit policy. 
DB2&gt; SELECT AUDITPOLICYNAME, CONTEXTSTATUS, ERRORTYPE AS ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES 
           WHERE AUDITPOLICYID = &lt;audit policy ID&gt;

If the value for CONTEXTSTATUS is not 'B' (Both) or ERRORTYPE is not 'A' (Audit), this is a finding.</check-content></check></Rule></Group><Group id="V-74587"><title>SRG-APP-000504-DB-000355</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89261r1_rule" severity="medium" weight="10.0"><version>DB2X-00-011700</version><title>DB2 must generate audit records when unsuccessful attempts to execute privileged activities or other system-level access occur.</title><description>&lt;VulnDiscussion&gt;Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. 

System documentation should include a definition of the functionality considered privileged.

A privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. In an SQL environment, it encompasses, but is not necessarily limited to:

CREATE
ALTER
DROP
GRANT
REVOKE

Note that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.

To aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81187r1_fix">Define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement: 
DB2&gt; CREATE AUDIT POLICY &lt;DB audit policy name&gt; 
           CATEGORIES SECMAINT STATUS BOTH, OBJMAINT STATUS BOTH, AUDIT STATUS BOTH, SYSADMIN STATUS BOTH, CONTEXT STATUS BOTH 
           ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement.  Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, apply the policy created above to the database: 
DB2&gt; AUDIT DATABASE USING POLICY &lt;DB audit policy name&gt;</fixtext><fix id="F-81187r1_fix" /><check system="C-74473r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Run the following SQL statement to ensure that an audit policy is defined upon the database: 
DB2&gt; SELECT AUDITPOLICYNAME, AUDITPOLICYID 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE IN (' ') 

If no rows are returned, this is a finding. 

Using the AUDITPOLICYID from above query find the details of audit policy: 
DB2&gt; SELECT AUDITPOLICYNAME, SECMAINTSTATUS, SYSADMINSTATUS, OBJMAINTSTATUS, AUDITSTATUS, CONTEXTSTATUS, ERRORTYPE 
            FROM SYSCAT.AUDITPOLICIES 
            WHERE AUDITPOLICYID = &lt;audit policy ID&gt;

If the values for SECMAINTSTATUS, OBJMAINTSTATUS, SYSADMINSTATUS, AUDITSTATUS and CONTEXTSTATUS are not 'B' (Both) or 'F' (Failure), or ERRORTYPE is not 'A' (Audit), this is a finding.</check-content></check></Rule></Group><Group id="V-74589"><title>SRG-APP-000378-DB-000365</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89263r1_rule" severity="medium" weight="10.0"><version>DB2X-00-008000</version><title>DB2 must prohibit user installation of logic modules (stored procedures, functions, triggers, views, etc.) without explicit privileged status.</title><description>&lt;VulnDiscussion&gt;Allowing regular users to install software, without explicit privileges, creates the risk that untested or potentially malicious software will be installed on the system. Explicit privileges (escalated or administrative privileges) provide the regular user with explicit capabilities and control that exceed the rights of a regular user.

DBMS functionality and the nature and requirements of databases will vary; so while users are not permitted to install unapproved software, there may be instances where the organization allows the user to install approved software packages such as from an approved software repository. The requirements for production servers will be more restrictive than those used for development and research.

The DBMS must enforce software installation by users based upon what types of software installations are permitted (e.g., updates and security patches to existing software) and what types of installations are prohibited (e.g., software whose pedigree with regard to being potentially malicious is unknown or suspect) by the organization). 

In the case of a database management system, this requirement covers stored procedures, functions, triggers, views, etc.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001812</ident><fixtext fixref="F-81189r1_fix">Run the REVOKE command to revoke database authorities and schema privileges from user: 
DB2&gt; REVOKE CREATEIN ON SCHEMA&lt;schema_name&gt; FROM &lt;user&gt; 
DB2&gt; REVOKE &lt;db authority&gt; ON DATABASE FROM &lt;USER&gt;

Note: Select the following knowledgebase link for information regarding revoking database authorities: 
http://www.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.sql.ref.doc/doc/r0000981.html?cp=SSEPGG_10.5.0%2F2-12-7-181&amp;lang=en

Select the following knowledgebase link for information regarding revoking schema privileges: 
http://www.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.sql.ref.doc/doc/r0000988.html?cp=SSEPGG_10.5.0%2F2-12-7-189&amp;lang=en</fixtext><fix id="F-81189r1_fix" /><check system="C-74475r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>The user needs CREATEINAUTH privileges for the schema to create objects in an existing schema.

Run the following Query to find which user has privilege to create objects in schemas:
DB2&gt; SELECT GRANTEE, SCHEMANAME, CREATEINAUTH, ALTERINAUTH 
           FROM SYSCAT.SCHEMAAUTH

If a non-authorized user has privilege, this is a finding.

Run the following query to which user has privilege to create new schema and other objects:
DB2&gt; SELECT GRANTEE, CREATETABAUTH, EXTERNALROUTINEAUTH, DBADMAUTH, IMPLSCHEMAAUTH 
           FROM SYSCAT.DBAUTH

If a non-authorized user has privilege, this is a finding.</check-content></check></Rule></Group><Group id="V-74591"><title>SRG-APP-000380-DB-000360</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89265r1_rule" severity="medium" weight="10.0"><version>DB2X-00-008100</version><title>DB2 and the operating system must enforce access restrictions associated with changes to the configuration of DB2 or database(s).</title><description>&lt;VulnDiscussion&gt;Failure to provide logical access restrictions associated with changes to configuration may have significant effects on the overall security of the system. 

When dealing with access restrictions pertaining to change control, it should be noted that any changes to the hardware, software, and/or firmware components of the information system can potentially have significant effects on the overall security of the system. 

Accordingly, only qualified and authorized individuals should be allowed to obtain access to system components for the purposes of initiating changes, including upgrades and modifications.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001813</ident><fixtext fixref="F-81191r1_fix">Remove the write permission from non-root/non-sysadmin users on the DB2 installation base directory and instance home directory.</fixtext><fix id="F-81191r1_fix" /><check system="C-74477r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>The base installation directory of the database server software and instance home directory location is configurable at the time of installation.

Run the db2level command to find the installation directory of DB2 server software: 

     $db2level  

If any user other than the sysadmin and root users has write permission on these directories and subsequent subdirectories under this directory, this is a finding. 

On Linux and UNIX operating systems, the instance directory is located in the $INSTHOME/sqllib directory, where $INSTHOME is the home directory of the instance owner. 

On Windows operating systems, the instance directory is located under the /sqllib directory where the DB2 database product was installed. 

If any user other than the instance owner and the root user has write permission to instance home directory and subsequent subdirectories under it, this is a finding.</check-content></check></Rule></Group><Group id="V-74593"><title>SRG-APP-000381-DB-000361</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89267r1_rule" severity="medium" weight="10.0"><version>DB2X-00-008200</version><title>DB2 must produce audit records of its enforcement of access restrictions associated with changes to the configuration of DB2 or database(s).</title><description>&lt;VulnDiscussion&gt;Without auditing the enforcement of access restrictions against changes to configuration, it would be difficult to identify attempted attacks and an audit trail would not be available for forensic investigation for after-the-fact actions. 

Enforcement actions are the methods or mechanisms used to prevent unauthorized changes to configuration settings. Enforcement action methods may be as simple as denying access to a file based on the application of file permissions (access restriction). Audit items may consist of lists of actions blocked by access restrictions or changes identified after the fact.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001814</ident><fixtext fixref="F-81193r1_fix">Run the following command to set the auditing at the instance level: 

     $db2audit configure scope sysadmin status both error type audit

Run the following command to set the auditing at the database level: 
DB2&gt; CREATE AUDIT POLICY &lt;DB audit policy name&gt; CATEGORIES SYSADMIN STATUS BOTH, CONTEXT STATUS BOTH ERROR TYPE AUDIT

Run the following command if the auditing policy exists but does not include the sysadmin category: 
DB2&gt; ALTER AUDIT POLICY &lt;DB audit policy name&gt; SYSADMIN STATUS BOTH, CONTEXT STATUS BOTH ERROR TYPE AUDIT 

If CREATE was used above, apply the policy created above to the database: 
DB2&gt; AUDIT DATABASE USING POLICY &lt;DB audit policy name&gt;

Note: See the following page for knowledgebase information regarding the ALTER AUDIT POLICY: 
http://www.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.sql.ref.doc/doc/r0050608.html?lang=en</fixtext><fix id="F-81193r1_fix" /><check system="C-74479r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>To audit changes in configuration, the SYSADMIN category needs to be audited at both the instance level and the database level.

Run the following command to ensure that the SYSADMIN category is being audited at the instance level: 

     $db2audit describe

If Log system administrator events is not set to “Both”, this is a finding.

Run the following SQL statement to ensure that an audit policy exists at the database level: 
DB2&gt; SELECT AUDITPOLICYNAME, AUDITPOLICYID 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE = ' '

If no rows are returned, this is a finding.

For the audit policy returned in the statement above, run the following SQL statement to confirm that the SYSADMIN category is part of that policy and the ERROR TYPE='A': 
DB2&gt; SELECT AUDITPOLICYNAME, SYSADMINSTATUS, CONTEXTSTATUS, ERRORTYPE AS ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES 
           WHERE AUDITPOLICYID = &lt;audit policy ID&gt;

If the values for SYSADMINSTATUS and CONTEXTSTATUS are not 'B' (Both) or ERRORTYPE is not 'A' (Audit), this is a finding.</check-content></check></Rule></Group><Group id="V-74595"><title>SRG-APP-000383-DB-000364</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89269r1_rule" severity="medium" weight="10.0"><version>DB2X-00-008300</version><title>DB2 must disable network functions, ports, protocols, and services deemed by the organization to be nonsecure, in accord with the Ports, Protocols, and Services Management (PPSM) guidance.</title><description>&lt;VulnDiscussion&gt;Use of nonsecure network functions, ports, protocols, and services exposes the system to avoidable threats.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-001762</ident><fixtext fixref="F-81195r1_fix">Use the following commands to set the protocol and ports as per PPSM guidance:

     $db2 update dbm cfg using svcename [service_name | port_number]

     $db2 update dbm cfg using ssl_svcename [ssl_service_name | port_number]


Note: http://www.ibm.com/support/knowledgecenter/en/SSEPGG_10.5.0/com.ibm.db2.luw.admin.sec.doc/doc/t0025241.html</fixtext><fix id="F-81195r1_fix" /><check system="C-74481r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Run the following command to find the value of the network service:

     $db2 get dbm cfg

TCP/IP Service name                     (SVCENAME) 
SSL service name                         (SSL_SVCENAME) 

If the port numbers are not specified, look for the port numbers in services file and find the port numbers defined for the TCP/IP service name and SSL service name (SVCENAME, SSL_SVCENAME) above.

Default Location for services file:
   Windows Service File:  %SystemRoot%\system32\drivers\etc\services
   UNIX Services File: /etc/services

If the network protocols and ports found in previous step are not in as per PPSM guidance, this is a finding.</check-content></check></Rule></Group><Group id="V-74597"><title>SRG-APP-000416-DB-000380</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89271r2_rule" severity="high" weight="10.0"><version>DB2X-00-008600</version><title>DB2 must use NSA-approved cryptography to protect classified information in accordance with the data owners requirements.</title><description>&lt;VulnDiscussion&gt;Use of weak or untested encryption algorithms undermines the purposes of utilizing encryption to protect data. The application must implement cryptographic modules adhering to the higher standards approved by the federal government since this provides assurance they have been tested and validated.

It is the responsibility of the data owner to assess the cryptography requirements in light of applicable federal laws, Executive Orders, directives, policies, regulations, and standards.

NSA-approved cryptography for classified networks is hardware based. This requirement addresses the compatibility of a DBMS with the encryption devices.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-002450</ident><fixtext fixref="F-81197r2_fix">Setting instance configuration parameters so that the instance is strictly compliant with NIST SP 800-131A. 

Set the DB2 registry variable DB2COMM to SSL:

$db2set DB2COMM=SSL 

Set the DB2 database manager configuration parameter SSL_VERSIONS to TLSV12:

$db2 update dbm cfg using SSL_VERSIONS TLSV12 

Set the DB2 database manager configuration parameter SSL_CIPHERSPECS to a symmetric algorithm key length that is greater than or equal to 112:

$db2 update dbm cfg using SSL_CIPHERSPECS TLS_RSA_WITH_AES_256_GCM_SHA384 

Set the database manager configuration parameter SSL_SVC_LABEL to a certificate with RSA key length that is greater than or equal to 2048. That certificate must also have a digital signature with minimum SHA2. 

Create the certificate. Example:

$gsk8capicmd_64 -cert -create -db "mydbserver.kdb" -pw "password" -size 2048 -sigalg SHA256WithRSA -label "myselfsigned_SHA2_2K" -dn "CN=myhost.mycompany.com,O=myOrganization, OU=myOrganizationUnit,L=myLocation,ST=ON,C=CA"

$db2 update dbm cfg using SSL_SVR_LABEL myselfsigned_SHA_2K

Note: Here is an example of SSL set up on Linux:

1. Create a directory "ssl"
$mkdir ssl
2. Make sure gsk8capicmd_64 command in PATH $ export PATH=$PATH:/home/db2inst1/sqllib/gskit/bin
3. Make sure library is in path $ echo $LD_LIBRARY_PATH /home/db2inst1/sqllib/lib64:/home/db2inst1/sqllib/lib64/gskit:/home/db2inst1/sqllib/lib32
4. Go to ssl directory (/home/db2inst1/ssl)
5. Create Server key database
$db2inst1@potserver:~/ssl&gt; gsk8capicmd_64 -keydb -create -db "mydbserver.kdb" -pw "password" -stash
$db2inst1@potserver:~/ssl&gt; ls
$mydbserver.crl mydbserver.kdb mydbserver.rdb mydbserver.sth
6. To create a self-signed certificate with a label of myselfsigned, use the GSKCapiCmd command as shown in the following example:
$gsk8capicmd_64 -cert -create -db "mydbserver.kdb" -pw "password" -label "myselfsigned" -dn "CN=myhost.mycompany.com,O=myOrganization, OU=myOrganizationUnit,L=myLocation,ST=ON,C=CA"
7. Extract the certificate you just created to a file, so that you can distribute it to computers running clients that will be establishing SSL connections to your DB2 server. For example, the following GSKCapiCmd command extracts the certificate to a file called mydbserver.arm:
$gsk8capicmd_64 -cert -extract -db "mydbserver.kdb" -pw "password" -label "myselfsigned" -target "mydbserver.arm" -format ascii -fips
8. Set database manager configuration parameters:
$db2 update dbm cfg using SSL_SVR_KEYDB /home/db2inst1/ssl/mydbserver.kdb
$db2 update dbm cfg using SSL_SVR_STASH /home/db2inst1/ssl/mydbserver.sth
$db2 update dbm cfg using SSL_SVR_LABEL SSLLabel
$db2 update dbm cfg using SSL_SVCENAME 50602 
9. Add the value SSL to the DB2COMM registry variable. For example:
$db2set -i db2inst1 DB2COMM=SSL
or 
$db2set -i db2inst1 DB2COMM=SSL</fixtext><fix id="F-81197r2_fix" /><check system="C-74483r2_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>If the database is in the unclassified environment, this is not applicable (NA).

Verify the instance configuration parameters so that the instance is strictly compliant with NIST SP 800-131A. 

Check the DB2 registry variable DB2COMM is set to SSL:

$db2set all

If DB2COMM is not set to SSL, this is a finding. 

Find the value of SSL_VERSIONS by running: 

$db2 get dbm cfg

If SSL_VERSIONS is not set to TLSV12, this is a finding.

Find the value of SSL_CIPHERSPECS by running:

$db2 get dbm cfg

If SSL_CIPHERSPECS is not set to a symmetric algorithm key length that is greater than or equal to 112, this is a finding. 

Find the value of SSL_SVC_LABEL by running:

$db2 get dbm cfg

If the parameter SSL_SVC_LABEL is not set to a certificate with RSA key length that is greater than or equal to 2048, this is a finding. 

If the certificate does not have a digital signature with minimum SHA2, this is a finding.

The above settings ensure that all connections over SSL in any CLP or Java application strictly adhere to NIST SP 800-131A.</check-content></check></Rule></Group><Group id="V-74599"><title>SRG-APP-000427-DB-000385</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89273r1_rule" severity="medium" weight="10.0"><version>DB2X-00-008700</version><title>DB2 must only accept end entity certificates issued by DoD PKI or DoD-approved PKI Certification Authorities (CAs) for the establishment of all encrypted sessions.</title><description>&lt;VulnDiscussion&gt;Only DoD-approved external PKIs have been evaluated to ensure that they have security controls and identity vetting procedures in place which are sufficient for DoD systems to rely on the identity asserted in the certificate.  PKIs lacking sufficient security controls and identity vetting procedures risk being compromised and issuing certificates that enable adversaries to impersonate legitimate users. 

The authoritative list of DoD-approved PKIs is published at http://iase.disa.mil/pki-pke/interoperability.

This requirement focuses on communications protection for the DBMS session rather than for the network packet.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-002470</ident><fixtext fixref="F-81199r2_fix">Create a key database and set up the digital certificates.

The following command creates a key database called mydbserver.kdb and a stash file called mydbserver.sth: 

     $gsk8capicmd_64 -keydb -create -db "mydbserver.kdb" -pw "myServerPassw0rdpw0" -stash

When you create a key database, it is automatically populated with signer certificates from a few certificate authorities (CAs), such as Verisign.

Add a certificate for your server to your key database. 

To obtain a certificate, you can either use GSKCapiCmd to create a new certificate request and submit it to a CA to be signed, or you can create a self-signed certificate for testing purposes. 

Following is an example of command to create a self-signed certificate with a label of myselfsigned, use the GSKCapiCmd command as shown in the following command:

     $gsk8capicmd_64 -cert -create -db "mydbserver.kdb" -pw "myServerPassw0rdpw0" -label "myselfsigned" -dn "CN=myhost.mycompany.com,O=myOrganization, OU=myOrganizationUnit,L=myLocation,ST=ON,C=CA"

Notes:

-- Use the GSKCapiCmd tool to create the key database. It must be a Certificate Management System (CMS) type key database. 

The GSKCapiCmd is a non-Java-based command-line tool, and Java does not need to be installed on the system to use this tool. 

You invoke GSKCapiCmd using the GSKCAPICMD command, as described in the GSKCapiCmd User's Guide. 

The path for the command is sqllib/gskit/bin on Linux and UNIX platforms, and C:\Program Files\IBM\GSK8\bin on both 32-bit and 64-bit Windows platforms. 

On 64-bit platforms, the 32-bit GSKit executable files and libraries are also present; in this case, the path for the command is C:\ProgramFiles (x86)\IBM\GSK8\bin. - Ensure PATH (on the Windows platform) includes the proper GSKit library path, and LIBPATH, SHLIB_PATH, or LD_LIBRARY_PATH (on UNIX or Linux platforms) include the proper GSKit library path, such as sqllib/lib64/gskit.
The -stash option creates a stash file at the same path as the key database, with a file extension of .sth. At instance start-up, GSKit uses the stash file to obtain the password to the key database.
To extract the certificate you created to a file, so that you can distribute it to computers running clients that will be establishing SSL connections to your DB2 server.

Run the following GSKCapiCmd command extracts the certificate to a file called mydbserver.arm:

     $gsk8capicmd_64 -cert -extract -db "mydbserver.kdb" -pw "myServerPassw0rdpw0" -label "myselfsigned" -target "mydbserver.arm" -format ascii –fips</fixtext><fix id="F-81199r2_fix" /><check system="C-74485r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Run the following command to find certificate details: 

     $gsk8capicmd_64 -cert -details -db "&lt;mydbserver.kdb&gt;" -pw "&lt;PASSWORD&gt;" -label "&lt;myselfsigned&gt;"

The output is displayed in  a form similar to the following: 

-- label : myselfsigned key size : 1024 version : X509 V3 serial : 96c2db8fa769a09d

-- issue:CN=myhost.mycompany.com,O=myOrganization,OU=myOrganizationUnit,
L=myLocation,ST=ON,C=CA 

-- subject:CN=myhost.mycompany.com,O=myOrganization,OU=myOrganizationUnit,
L=myLocation,ST=ON,C=CA not before : Tuesday, 24 February 2009 17:11:50 PM not after : Thursday, 25 February 2010 17:11:50 PM

If the certificate is not issued by DoD PKI or DoD-approved PKI Certification Authorities (CAs), this is a finding.</check-content></check></Rule></Group><Group id="V-74601"><title>SRG-APP-000428-DB-000386</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89275r1_rule" severity="medium" weight="10.0"><version>DB2X-00-008800</version><title>DB2 must implement cryptographic mechanisms to prevent unauthorized modification of organization-defined information at rest (to include, at a minimum, PII and classified information) on organization-defined information system components.</title><description>&lt;VulnDiscussion&gt;DBMSs handling data requiring "data at rest" protections must employ cryptographic mechanisms to prevent unauthorized disclosure and modification of the information at rest. These cryptographic mechanisms may be native to the DBMS or implemented via additional software or operating system/file system settings, as appropriate to the situation.

Selection of a cryptographic mechanism is based on the need to protect the integrity of organizational information. The strength of the mechanism is commensurate with the security category and/or classification of the information. Organizations have the flexibility to either encrypt all information on storage devices (i.e., full disk encryption) or encrypt specific data structures (e.g., files, records, or fields). 

The decision whether to employ cryptography is the responsibility of the information owner/steward, who exercises discretion within the framework of applicable rules, policies, and law.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-002475</ident><fixtext fixref="F-81201r1_fix">To create the database using DB2 native encryption run the following command:

     $db2 create db &lt;database name&gt; encrypt

See the detailed instructions in the link in the note section below to create the encrypted database.

Note: Select the following link for details on how to set up DB2 native encryption:
http://www-01.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.admin.sec.doc/doc/t0061766.html?lang=en 

If a third-party tool is used for database encryption (IBM highly recommends using IBM Guardium) use the third-party tool's specific check and fix.</fixtext><fix id="F-81201r1_fix" /><check system="C-74487r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Review the system documentation to determine whether the organization has defined the information at rest that is to be protected from disclosure; which must include, at a minimum, PII and classified information.

If the documentation indicates no information requires such protections, this is not a finding.

DB2 native encryption can encrypt the data at rest; or third-party tools, like IBM Guardium, can provide encryption for data at rest.
 
To find if a database is encrypted with DB2 native encryption, run the following SQL Query:
DB2&gt; SELECT * FROM TABLE(SYSPROC.ADMIN_GET_ENCRYPTION_INFO())

If the value of Algorithm is NULL for the database, this is a finding. 

If the database is not encrypted with native encryption or any third-party tool, this is a finding.</check-content></check></Rule></Group><Group id="V-74603"><title>SRG-APP-000429-DB-000387</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89277r1_rule" severity="medium" weight="10.0"><version>DB2X-00-008900</version><title>DB2 must implement and/or support cryptographic mechanisms preventing the unauthorized disclosure of organization-defined information at rest on organization-defined information system components.</title><description>&lt;VulnDiscussion&gt;DBMSs handling data requiring "data at rest" protections must employ cryptographic mechanisms to prevent unauthorized disclosure and modification of the information at rest. These cryptographic mechanisms may be native to the DBMS or implemented via additional software or operating system/file system settings, as appropriate to the situation.

Selection of a cryptographic mechanism is based on the need to protect the integrity of organizational information. The strength of the mechanism is commensurate with the security category and/or classification of the information. Organizations have the flexibility to either encrypt all information on storage devices (i.e., full disk encryption) or encrypt specific data structures (e.g., files, records, or fields). 

The decision whether to employ cryptography is the responsibility of the information owner/steward, who exercises discretion within the framework of applicable rules, policies, and law.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-002476</ident><fixtext fixref="F-81203r2_fix">To create the database using DB2 native encryption run the following command:

  $db2 create db mydb encrypt

See the detailed instructions in link in the note section below to create the encrypted database.

Note: Select the following link for details on how to set up DB2 native encryption:
http://www-01.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.admin.sec.doc/doc/t0061766.html?lang=en 

If a third-party tool is used for database encryption (IBM highly recommends using IBM Guardium) use the third-party tool's specific check and fix.</fixtext><fix id="F-81203r2_fix" /><check system="C-74489r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Review the system documentation to determine whether the organization has defined the information at rest that is to be protected from disclosure; which must include, at a minimum, PII and classified information.

If the documentation indicates no information requires such protections, this is not a finding.

DB2 native encryption can encrypt the data at rest; or third-party tools, like IBM Guardium, can provide encryption for data at rest.
 
To find if a database is encrypted with DB2 native encryption, run the following SQL Query:
DB2&gt; SELECT * FROM TABLE(SYSPROC.ADMIN_GET_ENCRYPTION_INFO())

If the value of Algorithm is NULL for the database, this is a finding. 

If the database is not encrypted with native encryption or any third-party tool, this is a finding.</check-content></check></Rule></Group><Group id="V-74605"><title>SRG-APP-000441-DB-000378</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89279r2_rule" severity="medium" weight="10.0"><version>DB2X-00-009100</version><title>DB2 must maintain the confidentiality and integrity of information during preparation for transmission.</title><description>&lt;VulnDiscussion&gt;Information can be either unintentionally or maliciously disclosed or modified during preparation for transmission, including, for example, during aggregation, at protocol transformation points, and during packing/unpacking. These unauthorized disclosures or modifications compromise the confidentiality or integrity of the information.

Use of this requirement will be limited to situations where the data owner has a strict requirement for ensuring data integrity and confidentiality is maintained at every step of the data transfer and handling process. 

When transmitting data, the DBMS, associated applications, and infrastructure must leverage transmission protection mechanisms.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-002420</ident><fixtext fixref="F-81205r2_fix">Run the following DB2 command to set the value of ssl_versions to approved TLS or SSL version: 

$db2 update dbm cfg using SSL_VERSIONS &lt;SSL Version&gt;

Run the following command to set the value of db2comm parameter to SSL: 

$db2set db2comm=ssl

Restart the database manager.

Note: Details on key database creation and setting up SSL environment are in following links

Select the following knowledgebase link for more information regarding configuring SSL support:
http://www.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.admin.sec.doc/doc/t0025241.html?lang=en

Select the following knowledgebase link for more information regarding SSL_versions:
http://www.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.admin.config.doc/doc/r0053616.html?cp=SSEPGG_10.5.0%2F2-4-4-8-88&amp;lang=en

Select the following knowledgebase link for setting communication protocol:
http://www.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.qb.server.doc/doc/t0004714.html?cp=SSEPGG_10.5.0&amp;lang=en</fixtext><fix id="F-81205r2_fix" /><check system="C-74491r2_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>The DB2 database system supports the use of Transport Layer Security (TLS) to enable a client to authenticate a server and to provide private communication between the client and server by use of encryption. 

Run the following command to find out what versions of TLS are supported by the server:

$db2 get dbm cfg 

If the value of the ssl_versions parameter is not set to "TLSV1" or "TLSV12" this is a finding.

Check the value of the DB2COMM parameter using the following command:

$db2set –all 

If the value of DB2COMM is not set to "SSL", this is a finding. 

Note: When this topic mentions SSL, the same information applies to TLS, unless otherwise noted.</check-content></check></Rule></Group><Group id="V-74607"><title>SRG-APP-000442-DB-000379</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89281r2_rule" severity="medium" weight="10.0"><version>DB2X-00-009200</version><title>DB2 must maintain the confidentiality and integrity of information during reception.</title><description>&lt;VulnDiscussion&gt;: Information can be either unintentionally or maliciously disclosed or modified during reception, including, for example, during aggregation, at protocol transformation points, and during packing/unpacking. These unauthorized disclosures or modifications compromise the confidentiality or integrity of the information.

This requirement applies only to those applications that are either distributed or can allow access to data non-locally. Use of this requirement will be limited to situations where the data owner has a strict requirement for ensuring data integrity and confidentiality is maintained at every step of the data transfer and handling process. 

When receiving data, the DBMS, associated applications, and infrastructure must leverage protection mechanisms.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-002422</ident><fixtext fixref="F-81207r2_fix">Run the following DB2 command to set the value of ssl_versions to approved TLS or SSL version: 

$db2 update dbm cfg using SSL_VERSIONS &lt;SSL Version&gt;

Run the following command to set the value of db2comm parameter to SSL: 

$db2set db2comm=ssl

Restart the database manager.

Note: Details on key database creation and setting up SSL environment are in the following links

Select the following knowledgebase link for more information regarding configuring SSL support:
http://www.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.admin.sec.doc/doc/t0025241.html?lang=en

Select the following knowledgebase link for more information regarding SSL_versions:
http://www.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.admin.config.doc/doc/r0053616.html?cp=SSEPGG_10.5.0%2F2-4-4-8-88&amp;lang=en

Select the following knowledgebase link for setting communication protocol:
http://www.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.qb.server.doc/doc/t0004714.html?cp=SSEPGG_10.5.0&amp;lang=en</fixtext><fix id="F-81207r2_fix" /><check system="C-74493r2_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>The DB2 database system supports the use of Transport Layer Security (TLS) to enable a client to authenticate a server and to provide private communication between the client and server by use of encryption. 

Run the following command to find out what versions of TLS are supported by the server:

$db2 get dbm cfg 

If the value of the ssl_versions parameter is not set to "TLSV1" or "TLSV12" this is a finding.

Check the value of the DB2COMM parameter using the following command:

$db2set –all 

If the value of DB2COMM is not set to "SSL", this is a finding. 

Note: When this topic mentions SSL, the same information applies to TLS, unless otherwise noted.</check-content></check></Rule></Group><Group id="V-74609"><title>SRG-APP-000447-DB-000393</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89283r1_rule" severity="medium" weight="10.0"><version>DB2X-00-009300</version><title>When invalid inputs are received, DB2 must behave in a predictable and documented manner that reflects organizational and system objectives.</title><description>&lt;VulnDiscussion&gt;A common vulnerability is unplanned behavior when invalid inputs are received. This requirement guards against adverse or unintended system behavior caused by invalid inputs, where information system responses to the invalid input may be disruptive or cause the system to fail into an unsafe state.

The behavior will be derived from the organizational and system requirements and includes, but is not limited to, notification of the appropriate personnel, creating an audit record, and rejecting invalid input.

This calls for the review of applications, which will require collaboration with the application developers. It is recognized that in many cases the database administrator (DBA) is organizationally separate from the application developers, and may have limited, if any, access to source code. Nevertheless, protections of this type are so important to the secure operation of databases that they must not be ignored. At a minimum, the DBA must attempt to obtain assurances from the development organization that this issue is addressed, and must document what has been discovered.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-002754</ident><fixtext fixref="F-81209r1_fix">Revise and deploy the source code for database program objects (stored procedures, functions, triggers) and application source code, to implement the documented behavior.</fixtext><fix id="F-81209r1_fix" /><check system="C-74495r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Review system documentation to determine how input errors are to be handled in general and if any special handling is defined for specific circumstances.

Review the source code for database program objects (stored procedures, functions, triggers) and application source code to identify how the system responds to invalid input.

If it does not implement the documented behavior, this is a finding.</check-content></check></Rule></Group><Group id="V-74611"><title>SRG-APP-000456-DB-000390</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89285r1_rule" severity="high" weight="10.0"><version>DB2X-00-009500</version><title>Security-relevant software updates to DB2 must be installed within the time period directed by an authoritative source (e.g. IAVM, CTOs, DTMs, and STIGs).</title><description>&lt;VulnDiscussion&gt;Security flaws with software applications, including database management systems, are discovered daily. Vendors are constantly updating and patching their products to address newly discovered security vulnerabilities. Organizations (including any contractor to the organization) are required to promptly install security-relevant software updates (e.g., patches, service packs, and hot fixes). Flaws discovered during security assessments, continuous monitoring, incident response activities, or information system error handling must also be addressed expeditiously. 

Organization-defined time periods for updating security-relevant software may vary based on a variety of factors including, for example, the security category of the information system or the criticality of the update (i.e., severity of the vulnerability related to the discovered flaw). 

This requirement will apply to software patch management solutions that are used to install patches across the enclave and also to applications themselves that are not part of that patch management solution. For example, many browsers today provide the capability to install their own patch software. Patch criticality, as well as system criticality, will vary. Therefore, the tactical situations regarding the patch management process will also vary. This means that the time period utilized must be a configurable parameter. Time frames for application of security-relevant software updates may be dependent upon the Information Assurance Vulnerability Management (IAVM) process.

The application will be configured to check for and install security-relevant software updates within an identified time period from the availability of the update. The specific time period will be defined by an authoritative source (e.g. IAVM, CTOs, DTMs, and STIGs).&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-002605</ident><fixtext fixref="F-81211r1_fix">Institute and adhere to policies and procedures to ensure that patches are consistently applied to DB2 within the time allowed.</fixtext><fix id="F-81211r1_fix" /><check system="C-74497r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Obtain evidence that software patches are consistently applied to DB2 within the time frame defined for each patch.

If such evidence cannot be obtained, or the evidence that is obtained indicates a pattern of noncompliance, this is a finding.</check-content></check></Rule></Group><Group id="V-74613"><title>SRG-APP-000492-DB-000332</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89287r1_rule" severity="medium" weight="10.0"><version>DB2X-00-009600</version><title>DB2 must generate audit records when security objects are accessed.</title><description>&lt;VulnDiscussion&gt;Changes to the security configuration must be tracked.

This requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via specialized security functionality.

In an SQL environment, types of access include, but are not necessarily limited to:

SELECT
INSERT
UPDATE
DELETE
EXECUTE&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81213r1_fix">Run the following command to define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement: 
DB2&gt; CREATE AUDIT POLICY &lt;DB audit policy name&gt; 
           CATEGORIES SECMAINT STATUS BOTH, VALIDATE STATUS BOTH, CHECKING STATUS BOTH, CONTEXT STATUS BOTH 
           ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement.  Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, run the following command to apply the policy created above to the database: 
DB2&gt; AUDIT DATABASE USING POLICY &lt;DB audit policy name&gt;</fixtext><fix id="F-81213r1_fix" /><check system="C-74499r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>To ensure the database generates audit records when security objects are accessed the following audit categories must be implemented at the database level: 

AUDIT
CHECKING
CONTEXT
SECMAINT
SYSADMIN
VALIDATE 

Run the following SQL statement to determine if an audit policy is defined upon the database: 
DB2&gt; SELECT AUDITPOLICYNAME, AUDITPOLICYID 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE IN (' ')

If no rows are returned, this is a finding. 

Using the AUDITPOLICYID returned from above query, run the following command to find the details of audit policy: 
DB2&gt; SELECT AUDITPOLICYNAME, AUDITSTATUS, CHECKINGSTATUS, CONTEXTSTATUS, SECMAINTSTATUS, SYSADMINSTATUS, VALIDATESTATUS, ERRORTYPE AS ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES 
           WHERE AUDITPOLICYID = &lt;audit policy ID&gt;

If the values for AUDITSTATUS, CHECKINGSTATUS, CONTEXTSTATUS, SECMAINTSTATUS, SYSMADMINSTATUS and VALIDATESTATUS are not 'B' (Both) or ERRORTYPE is not 'A' (Audit), this is a finding.</check-content></check></Rule></Group><Group id="V-74615"><title>SRG-APP-000492-DB-000333</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89289r1_rule" severity="medium" weight="10.0"><version>DB2X-00-009700</version><title>DB2 must generate audit records when unsuccessful attempts to access security objects occur.</title><description>&lt;VulnDiscussion&gt;Changes to the security configuration must be tracked.

This requirement applies to situations where security data is retrieved or modified via data manipulation operations, as opposed to via specialized security functionality.

In an SQL environment, types of access include, but are not necessarily limited to:

SELECT
INSERT
UPDATE
DELETE
EXECUTE

To aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81215r1_fix">Run the following command to define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement: 
DB2&gt; CREATE AUDIT POLICY &lt;DB audit policy name&gt;
           CATEGORIES SECMAINT STATUS BOTH, VALIDATE STATUS BOTH, CHECKING STATUS BOTH, CONTEXT STATUS BOTH 
           ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement.  Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, run the following command to apply the policy created above to the database: 
DB2&gt; AUDIT DATABASE USING POLICY &lt;DB audit policy name&gt;</fixtext><fix id="F-81215r1_fix" /><check system="C-74501r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>To ensure the database generates audit records when unsuccessful attempts are made to access security objects the following audit categories must be implemented at the database level: 

AUDIT
CHECKING
CONTEXT
SECMAINT
SYSADMIN
VALIDATE 

Run the following SQL statement to ensure that an audit policy is defined upon the database: 
DB2&gt; SELECT AUDITPOLICYNAME, AUDITPOLICYID 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE IN (' ')

If no rows are returned, this is a finding. 

Run the following SQL statement using the AUDITPOLICYID from above query find the details of audit policy: 
DB2&gt; SELECT AUDITPOLICYNAME, AUDITSTATUS, CHECKINGSTATUS, CONTEXTSTATUS, SECMAINTSTATUS, SYSADMINSTATUS, VALIDATESTATUS, ERRORTYPE AS ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES 
           WHERE AUDITPOLICYID = &lt;audit policy ID&gt;

If the values for AUDITSTATUS, CHECKINGSTATUS, CONTEXTSTATUS, SECMAINTSTATUS, SYSMADMINSTATUS and VALIDATESTATUS are not 'B' (Both) or ERRORTYPE is not 'A' (Audit), this is a finding.</check-content></check></Rule></Group><Group id="V-74617"><title>SRG-APP-000494-DB-000344</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89291r1_rule" severity="medium" weight="10.0"><version>DB2X-00-009800</version><title>DB2 must generate audit records when categorized information (e.g., classification levels/security levels) are accessed.</title><description>&lt;VulnDiscussion&gt;Use of categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.

For detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81217r1_fix">Run the following command to define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement: 
DB2&gt; CREATE AUDIT POLICY &lt;DB audit policy name&gt; 
           CATEGORIES SECMAINT STATUS BOTH, CONTEXT STATUS BOTH 
           ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement.  Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, run the following command to apply the policy created above to the database: 
DB2&gt; AUDIT DATABASE USING POLICY &lt;DB audit policy name&gt; 

Note: The SECMAINT tracks the security and EXECUTE tracks the info on the tables for which it is defined.</fixtext><fix id="F-81217r1_fix" /><check system="C-74503r4_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Review the system documentation to determine whether it is required to track categories of information, such as classification or sensitivity level. If it is not, this is not applicable (NA).

To verify the database generates audit records when categorized information (e.g., classification levels/security levels) is accessed the SECMAINT, CONTEXT category auditing must be implemented at the database level. 

Run the following SQL statement to ensure that an audit policy is defined upon the database:
 
DB2&gt; SELECT AUDITPOLICYNAME, AUDITPOLICYID 
     FROM SYSCAT.AUDITUSE 
     WHERE OBJECTTYPE IN (' ')

If no rows are returned, this is a finding. 

Run the following SQL statement using the AUDITPOLICYID from the above query to find the details of the audit policy:
 
DB2&gt; SELECT AUDITPOLICYNAME, CONTEXTSTATUS, SECMAINTSTATUS, ERRORTYPE AS ERRORTYPE 
     FROM SYSCAT.AUDITPOLICIES 
     WHERE AUDITPOLICYID = &lt;audit policy ID&gt;

If the values for SECMAINTSTATUS and CONTEXTSTATUS are not 'B' (Both) or ERRORTYPE is not 'A' (Audit), this is a finding.</check-content></check></Rule></Group><Group id="V-74619"><title>SRG-APP-000494-DB-000345</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89293r1_rule" severity="medium" weight="10.0"><version>DB2X-00-009900</version><title>DB2 must generate audit records when unsuccessful attempts to access categorized information (e.g., classification levels/security levels) occur.</title><description>&lt;VulnDiscussion&gt;Use of categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.

To aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.

For detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81219r1_fix">Run the following command to define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement: 
DB2&gt; CREATE AUDIT POLICY &lt;DB audit policy name&gt; 
           CATEGORIES SECMAINT STATUS BOTH, CONTEXT STATUS BOTH 
           ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement.  Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, run the following command to apply the policy created above to the database: 
DB2&gt; AUDIT DATABASE USING POLICY &lt;DB audit policy name&gt;</fixtext><fix id="F-81219r1_fix" /><check system="C-74505r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Review the system documentation to determine whether it is required to track categories of information, such as classification or sensitivity level. If it is not, this is not applicable (NA).

To verify the database generates audit records when categorized information (e.g., classification levels/security levels) is unsuccessfully accessed the SECMAINT, CONTEXT category auditing must be implemented at the database level. 

Run the following SQL statement to ensure that an audit policy is defined upon the database: 
DB2&gt; SELECT AUDITPOLICYNAME, AUDITPOLICYID 
           FROM SYSCAT.AUDITUSE 
          WHERE OBJECTTYPE IN (' ')

If no rows are returned, this is a finding. 

Run the following SQL statement using the AUDITPOLICYID returned from query above to find the details of the audit policy: 
DB2&gt; SELECT AUDITPOLICYNAME, CONTEXTSTATUS, SECMAINTSTATUS, ERRORTYPE AS ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES 
           WHERE AUDITPOLICYID = &lt;audit policy ID&gt;

If the values is not 'B' (Both) CONTEXTSTATUS, SECMAINTSTATUS, columns and the value in ERRORTYPE column set to 'A' (AUDIT) , this is a finding.</check-content></check></Rule></Group><Group id="V-74621"><title>SRG-APP-000495-DB-000326</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89295r1_rule" severity="medium" weight="10.0"><version>DB2X-00-010000</version><title>DB2 must generate audit records when privileges/permissions are added.</title><description>&lt;VulnDiscussion&gt;Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of individuals' and groups' privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.

In an SQL environment, adding permissions is typically done via the GRANT command.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81221r1_fix">Run the following command to define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement: 
DB2&gt; CREATE AUDIT POLICY &lt;DB audit policy name&gt; 
           CATEGORIES SECMAINT STATUS BOTH, CONTEXT STATUS BOTH 
           ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement.  Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, run the following command to apply the policy created above to the database: 
DB2&gt; AUDIT DATABASE USING POLICY &lt;DB audit policy name&gt;</fixtext><fix id="F-81221r1_fix" /><check system="C-74507r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>To verify the database generates audit records when privileges/permissions are added is accessed the SECMAINT, CONTEXT category auditing must be implemented at the database level. 

Run the following SQL statement to ensure that an audit policy is defined upon the database: 
DB2&gt; SELECT AUDITPOLICYNAME, AUDITPOLICYID 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE IN (' ')

If no rows are returned, this is a finding. 

Run the following SQL statement using the AUDITPOLICYID from query above to find the details of the audit policy: 
DB2&gt; SELECT AUDITPOLICYNAME, CONTEXTSTATUS, SECMAINTSTATUS, ERRORTYPE AS ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES 
           WHERE AUDITPOLICYID = &lt;audit policy ID&gt;

If the values for CONTEXTSTATUS and SECMAINTSTATUS are not 'B' (Both) or ERRORTYPE is not 'A' (Audit), this is a finding.</check-content></check></Rule></Group><Group id="V-74623"><title>SRG-APP-000495-DB-000327</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89297r1_rule" severity="medium" weight="10.0"><version>DB2X-00-010100</version><title>DB2 must generate audit records when unsuccessful attempts to add privileges/permissions occur.</title><description>&lt;VulnDiscussion&gt;Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict individuals' and groups' privileges could go undetected. 

In an SQL environment, adding permissions is typically done via the GRANT command. 

To aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81223r1_fix">Run the following command to define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement: 
DB2&gt; CREATE AUDIT POLICY &lt;DB audit policy name&gt;  
           CATEGORIES SECMAINT STATUS BOTH, CONTEXT STATUS BOTH 
           ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement.  Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, run the following command to apply the policy created above to the database: 
DB2&gt; AUDIT DATABASE USING POLICY &lt;DB audit policy name&gt;</fixtext><fix id="F-81223r1_fix" /><check system="C-74509r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>To verify the database generates audit records when unsuccessful attempts are made to add privileges/permissions the SECMAINT, CONTEXT category auditing must be implemented at the database level. 

Run the following SQL statement to ensure that an audit policy is defined upon the database: 
DB2&gt; SELECT AUDITPOLICYNAME, AUDITPOLICYID 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE IN (' ')

If no rows are returned, this is a finding. 

Run the following SQL statement using the AUDITPOLICYID from the query above find the details of the audit policy: 
DB2&gt; SELECT AUDITPOLICYNAME, CONTEXTSTATUS, SECMAINTSTATUS, ERRORTYPE AS ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES 
           WHERE AUDITPOLICYID = &lt;audit policy ID&gt;

If the values for CONTEXTSTATUS and SECMAINTSTATUS are not 'B' (Both) or ERRORTYPE is not 'A' (Audit), this is a finding.</check-content></check></Rule></Group><Group id="V-74625"><title>SRG-APP-000495-DB-000328</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89299r1_rule" severity="medium" weight="10.0"><version>DB2X-00-010200</version><title>DB2 must generate audit records when privileges/permissions are modified.</title><description>&lt;VulnDiscussion&gt;Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of individuals' and groups' privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.

In an SQL environment, modifying permissions is typically done via the GRANT and REVOKE.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81225r1_fix">If a correct audit policy does not exist, define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement: 
DB2&gt; CREATE AUDIT POLICY &lt;DB audit policy name&gt; 
           CATEGORIES SECMAINT STATUS BOTH, CONTEXT STATUS BOTH 
           ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement. Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, run the following command to apply the policy created above to the database: 
DB2&gt; AUDIT DATABASE USING POLICY &lt;DB audit policy name&gt;</fixtext><fix id="F-81225r1_fix" /><check system="C-74511r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>To verify the database generates audit records when the database privileges/permissions are modified the SECMAINT, CONTEXT category auditing must be implemented at the database level. 

Run the following SQL statement to ensure that an audit policy is defined upon the database: 
DB2&gt; SELECT AUDITPOLICYNAME, AUDITPOLICYID 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE IN (' ')

If no rows are returned, this is a finding. 

Run the following SQL statement using the AUDITPOLICYID from the query above to find the details of the audit policy: 
DB2&gt; SELECT AUDITPOLICYNAME, CONTEXTSTATUS, SECMAINTSTATUS, ERRORTYPE AS ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES 
           WHERE AUDITPOLICYID = &lt;audit policy ID&gt;

If the values for CONTEXTSTATUS and SECMAINTSTATUS are not 'B' (Both) or ERRORTYPE is not 'A' (Audit), this is a finding.</check-content></check></Rule></Group><Group id="V-74627"><title>SRG-APP-000495-DB-000329</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89301r1_rule" severity="medium" weight="10.0"><version>DB2X-00-010300</version><title>DB2 must generate audit records when unsuccessful attempts to modify privileges/permissions occur.</title><description>&lt;VulnDiscussion&gt;Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict individuals' and groups' privileges could go undetected. 

In an SQL environment, modifying permissions is typically done via the GRANT and REVOKE. 

To aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81227r1_fix">Run the following command to define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement: 
DB2&gt; CREATE AUDIT POLICY &lt;DB audit policy name&gt; 
           CATEGORIES SECMAINT STATUS BOTH, CONTEXT STATUS BOTH 
           ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement. Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, run the following command to apply the policy created above to the database: 
DB2&gt; AUDIT DATABASE USING POLICY &lt;DB audit policy name&gt;</fixtext><fix id="F-81227r1_fix" /><check system="C-74513r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>To verify the database generates audit records when an unsuccessful attempt is made to modify the database privileges/permissions and that the SECMAINT, CONTEXT category auditing must be implemented at the database level. 

Run the following SQL statement to ensure that an audit policy is defined upon the database: 
DB2&gt; SELECT AUDITPOLICYNAME, AUDITPOLICYID 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE IN (' ')

If no rows are returned, this is a finding. 

Run the following SQL statement using the AUDITPOLICYID from the query above to find the details of the audit policy: 
DB2&gt; SELECT AUDITPOLICYNAME, CONTEXTSTATUS, SECMAINTSTATUS, ERRORTYPE AS ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES 
           WHERE AUDITPOLICYID = &lt;audit policy ID&gt;

If the values for CONTEXTSTATUS and SECMAINTSTATUS are not 'B' (Both) or ERRORTYPE is not 'A' (Audit), this is a finding.</check-content></check></Rule></Group><Group id="V-74629"><title>SRG-APP-000496-DB-000334</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89303r1_rule" severity="medium" weight="10.0"><version>DB2X-00-010400</version><title>DB2 must generate audit records when security objects are modified.</title><description>&lt;VulnDiscussion&gt;Changes in the database objects (tables, views, procedures, functions) that record and control permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized changes to the security subsystem could go undetected. The database could be severely compromised or rendered inoperative.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81229r1_fix">Run the following command to define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement:
DB2&gt; CREATE AUDIT POLICY &lt;execdb&gt; CATEGORIES OBJMAINT STATUS SUCCESS, SECMAINT STATUS SUCCESS ERROR TYPE AUDIT
             or
           CREATE AUDIT POLICY &lt;execdb&gt; CATEGORIES OBJMAINT STATUS SUCCESS, SECMAINT STATUS BOTH ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement. Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, run the following command to apply the correct policy to local security tables or database level:
DB2&gt; AUDIT TABLE &lt;table name&gt; USING POLICY EXECDB</fixtext><fix id="F-81229r1_fix" /><check system="C-74515r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>If there are no locally defined security objects this is not applicable (NA).

If there are locally defined security objects get a list of those objects from ISSO/DBA.

If there are only tables in the list then a minimum audit set of OBJMAINT and SECMAINT categories on the locally defined security tables or database is required.

If there are objects like packages and procedures in the list of locally defined security objects then a minimum audit set of OBJMAINT and SECMAINT categories on the database is required.

Run the following SQL statement to ensure that an audit policy is defined in the database:
DB2&gt; SELECT AUDITPOLICYNAME, OBJECTSCHEMA, OBJECTNAME, OBJECTTYPE 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE IN ('T',' ')

If no rows are returned, this is a finding. 

If a row with OBJECTTYPE of ' ' (Database; value is a blank) exists in the output, it is a database level policy. 

If a row with OBJECTTYPE of 'T' exists in the output, it is a table level policy. 

For each audit policy returned in the statement above, run the following SQL statement to confirm that the OBJMAINT and SECMAINT categories are part of that policy: 
DB2&gt; SELECT AUDITPOLICYNAME, SECMAINTSTATUS, OBJMAINTSTATUS, ERRORTYPE AS ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES

If the database audit policy has the values for the SECMAINTSTATUS and OBJMAINTSTATUS columns set to 'S' (Success) or 'B' (Both) and the value in the ERRORTYPE column set to 'A' (Audit), this is not a finding. 

If there are objects in addition to tables in the list of locally defined security objects and if the database policy does not exist or does not cover SECMAINTSTATUS or OBJMAINTSTATUS, this is a finding. 

If there are only tables in the list and if the database policy does not exist or does not cover SECMAINTSTATUS or OBJMAINTSTATUS then check if the appropriate policies are defined for all the required locally defined security tables. 

If all the required locally defined security tables' audit policies do not have the values for the SECMAINTSTATUS and OBJMAINTSTATUS columns set to 'S' (Success) or 'B' (Both) or if the value in the ERRORTYPE column is not set to 'A' (Audit), this is a finding.</check-content></check></Rule></Group><Group id="V-74631"><title>SRG-APP-000496-DB-000335</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89305r1_rule" severity="medium" weight="10.0"><version>DB2X-00-010500</version><title>DB2 must generate audit records when unsuccessful attempts to modify security objects occur.</title><description>&lt;VulnDiscussion&gt;Changes in the database objects (tables, views, procedures, functions) that record and control permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized changes to the security subsystem could go undetected. The database could be severely compromised or rendered inoperative.

To aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81231r1_fix">Run the following command to define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement:
DB2&gt; CREATE AUDIT POLICY &lt;execdb&gt; CATEGORIES OBJMAINT STATUS SUCCESS, SECMAINT STATUS BOTH ERROR TYPE AUDIT
             or
           CREATE AUDIT POLICY &lt;execdb&gt; CATEGORIES OBJMAINT STATUS SUCCESS, SECMAINT STATUS FAILURE ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement. Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, run the following command to apply the correct policy to local security tables or database level:
DB2&gt; AUDIT TABLE &lt;table name&gt; USING POLICY EXECDB</fixtext><fix id="F-81231r1_fix" /><check system="C-74517r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>If there are no locally defined security objects this is not applicable (NA).

If there are locally defined security objects get a list of those objects from ISSO/DBA.

If there are only tables in the list then a minimum audit set of OBJMAINT and SECMAINT categories on the locally defined security tables or database is required.

If there are objects like packages and procedures in the list of locally defined security objects then a minimum audit set of OBJMAINT and SECMAINT categories on the database is required.

Run the following SQL statement to ensure that an audit policy is defined upon the database:
DB2&gt; SELECT AUDITPOLICYNAME, OBJECTSCHEMA, OBJECTNAME, OBJECTTYPE 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE IN ('T',' ')

If no rows are returned, this is a finding. 

If a row with OBJECTTYPE of ' ' (Database; value is a blank) exists in the output, it is a database level policy. 

If a row with OBJECTTYPE of 'T' exists in the output, it is a table level policy. 

For each audit policy returned in the statement above, run the following SQL statement to confirm that the OBJMAINT and SECMAINT categories are part of that policy: 
DB2&gt; SELECT AUDITPOLICYNAME, SECMAINTSTATUS, OBJMAINTSTATUS, ERRORTYPE AS ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES

If the database audit policy has the values for the SECMAINTSTATUS and OBJMAINTSTATUS columns set to 'F' (Failure) or 'B' (Both) and the value in the ERRORTYPE column set to 'A' (Audit), this is not a finding. 

If there are objects in additions to tables in the list of locally defined security objects and if the database policy does not exist or does not cover SECMAINTSTATUS or OBJMAINTSTATUS, this is a finding. 

If there are only tables in the list and if the database policy does not exist or does not cover SECMAINTSTATUS or OBJMAINTSTATUS then check if the appropriate policies are defined for all the required locally defined security tables. 

If any of the required locally defined security tables' audit policies do not have the values for the SECMAINTSTATUS  and OBJMAINTSTATUS columns set to  'F' (Failure) or 'B' (Both) or the value in the ERRORTYPE column set to 'A' (Audit), then this is a finding.</check-content></check></Rule></Group><Group id="V-74633"><title>SRG-APP-000498-DB-000346</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89307r1_rule" severity="medium" weight="10.0"><version>DB2X-00-010600</version><title>DB2 must generate audit records when categorized information (e.g., classification levels/security levels) is modified.</title><description>&lt;VulnDiscussion&gt;Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.

For detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81233r1_fix">Run the following command to define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement: 
DB2&gt; CREATE AUDIT POLICY &lt;DB audit policy name&gt; 
           CATEGORIES SECMAINT STATUS BOTH, CONTEXT STATUS BOTH 
           ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement. Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, run the following command to apply the policy created above to the database: 
DB2&gt; AUDIT DATABASE USING POLICY &lt;DB audit policy name&gt;</fixtext><fix id="F-81233r1_fix" /><check system="C-74519r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Review the system documentation to determine whether it is required to track categories of information, such as classification or sensitivity level. If it is not, this is not applicable (NA).

To meet these requirements at the SECMAINT, CONTEXT category auditing needs to be implemented at database level. 

Run the following SQL statement to ensure that an audit policy is defined upon the database: 
DB2&gt; SELECT AUDITPOLICYNAME, AUDITPOLICYID 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE IN (' ')

If no rows are returned, this is a finding. 

Using the AUDITPOLICYID from above query find the details of audit policy: 
DB2&gt; SELECT AUDITPOLICYNAME, CONTEXTSTATUS, SECMAINTSTATUS, ERRORTYPE AS ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES 
           WHERE AUDITPOLICYID = &lt;audit policy ID&gt;

If the values for CONTEXTSTATUS and SECMAINTSTATUS are not 'B' (Both) or ERRORTYPE is not 'A' (Audit), this is a finding.</check-content></check></Rule></Group><Group id="V-74635"><title>SRG-APP-000498-DB-000347</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89309r1_rule" severity="medium" weight="10.0"><version>DB2X-00-010700</version><title>DB2 must generate audit records when unsuccessful attempts to modify categorized information (e.g., classification levels/security levels) occur.</title><description>&lt;VulnDiscussion&gt;Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.

To aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.

For detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81235r1_fix">Run the following command to define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement: 
DB2&gt; CREATE AUDIT POLICY &lt;DB audit policy name&gt; 
            CATEGORIES SECMAINT STATUS BOTH, CONTEXT STATUS BOTH 
            ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement. Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, run the following command to apply the policy created above to the database: 
DB2&gt; AUDIT DATABASE USING POLICY &lt;DB audit policy name&gt;</fixtext><fix id="F-81235r1_fix" /><check system="C-74521r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Review the system documentation to determine whether it is required to track categories of information, such as classification or sensitivity level. If it is not, this is not applicable (NA).

To meet these requirements at the SECMAINT, CONTEXT category auditing needs to be implemented at database level. 

Run the following SQL statement to ensure that an audit policy is defined upon the database: 
DB2&gt; SELECT AUDITPOLICYNAME, AUDITPOLICYID 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE IN (' ')

If no rows are returned, this is a finding. 

Using the AUDITPOLICYID from above query find the details of audit policy: 
DB2&gt; SELECT AUDITPOLICYNAME, CONTEXTSTATUS, SECMAINTSTATUS, ERRORTYPE AS ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES 
           WHERE AUDITPOLICYID = &lt;audit policy ID&gt;

If the values for CONTEXTSTATUS and SECMAINTSTATUS are not 'B' (Both) or ERRORTYPE is not 'A' (Audit), this is a finding.</check-content></check></Rule></Group><Group id="V-74637"><title>SRG-APP-000499-DB-000330</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89311r1_rule" severity="medium" weight="10.0"><version>DB2X-00-010800</version><title>DB2 must generate audit records when privileges/permissions are deleted.</title><description>&lt;VulnDiscussion&gt;Changes in the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized elevation or restriction of individuals' and groups' privileges could go undetected. Elevated privileges give users access to information and functionality that they should not have; restricted privileges wrongly deny access to authorized users.

In an SQL environment, deleting permissions is typically done via the REVOKE  command.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81237r1_fix">Run the following command to define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement: 
DB2&gt; CREATE AUDIT POLICY &lt;DB audit policy name&gt; 
           CATEGORIES SECMAINT STATUS BOTH, CONTEXT STATUS BOTH 
           ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement. Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, in the following command to apply the policy created above to the database: 
DB2&gt; AUDIT DATABASE USING POLICY &lt;DB audit policy name&gt;</fixtext><fix id="F-81237r1_fix" /><check system="C-74523r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>To meet these requirements at the SECMAINT, CONTEXT category auditing needs to be implemented at database level. 

Run the following SQL statement to ensure that an audit policy is defined upon the database: 
DB2&gt; SELECT AUDITPOLICYNAME, AUDITPOLICYID 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE IN (' ')

If no rows are returned, this is a finding. 

Using the AUDITPOLICYID from above query find the details of audit policy: 
DB2&gt; SELECT AUDITPOLICYNAME, CONTEXTSTATUS, SECMAINTSTATUS, ERRORTYPE AS ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES 
           WHERE AUDITPOLICYID = &lt;audit policy ID&gt;

If the values for CONTEXTSTATUS and SECMAINTSTATUS are not 'B' (Both) or ERRORTYPE is not 'A' (Audit), this is a finding.</check-content></check></Rule></Group><Group id="V-74639"><title>SRG-APP-000499-DB-000331</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89313r1_rule" severity="medium" weight="10.0"><version>DB2X-00-010900</version><title>DB2 must generate audit records when unsuccessful attempts to delete privileges/permissions occur.</title><description>&lt;VulnDiscussion&gt;Failed attempts to change the permissions, privileges, and roles granted to users and roles must be tracked. Without an audit trail, unauthorized attempts to elevate or restrict individuals' and groups' privileges could go undetected. 

In an SQL environment, deleting permissions is typically done via the REVOKE command. 

To aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81239r1_fix">Run the following command to define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement: 
DB2&gt; CREATE AUDIT POLICY &lt;DB audit policy name&gt; 
           CATEGORIES SECMAINT STATUS BOTH, CONTEXT STATUS BOTH 
           ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement. Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, run the following command to apply the policy created above to the database: 
DB2&gt; AUDIT DATABASE USING POLICY &lt;DB audit policy name&gt;</fixtext><fix id="F-81239r1_fix" /><check system="C-74525r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>To meet these requirements at the SECMAINT, CONTEXT category auditing needs to be implemented at database level. 

Run the following SQL statement to ensure that an audit policy is defined upon the database: 
DB2&gt; SELECT AUDITPOLICYNAME, AUDITPOLICYID 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE IN (' ')

If no rows are returned, this is a finding. 

Using the AUDITPOLICYID from above query find the details of audit policy: 
DB2&gt; SELECT AUDITPOLICYNAME, CONTEXTSTATUS, SECMAINTSTATUS, ERRORTYPE AS ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES 
           WHERE AUDITPOLICYID = &lt;audit policy ID&gt;

If the values for CONTEXTSTATUS and SECMAINTSTATUS are not 'B' (Both) or ERRORTYPE is not 'A' (Audit), this is a finding.</check-content></check></Rule></Group><Group id="V-74641"><title>SRG-APP-000501-DB-000336</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89315r1_rule" severity="medium" weight="10.0"><version>DB2X-00-011000</version><title>DB2 must generate audit records when security objects are deleted.</title><description>&lt;VulnDiscussion&gt;The removal of security objects from the database/DBMS would seriously degrade a system's information assurance posture. If such an event occurs, it must be logged.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81241r1_fix">Run the following command to define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement: 
DB2&gt; CREATE AUDIT POLICY &lt;DB audit policy name&gt; 
           CATEGORIES SECMAINT STATUS BOTH, OBJMAINTSTATUS STATUS BOTH, CONTEXT STATUS BOTH 
           ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement. Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, run the following command to apply the policy created above to the database: 
DB2&gt; AUDIT DATABASE USING POLICY &lt;DB audit policy name&gt; 

Note: The SECMAINT command grants a role and the OBJMAINT command sets the grant on a user defined function.</fixtext><fix id="F-81241r1_fix" /><check system="C-74527r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>To meet these requirements at the SECMAINT, OBJMAINT, and CONTEXT categories, auditing need to be implemented at the database level. 

Run the following SQL statement to ensure that an audit policy is defined upon the database: 
DB2&gt; SELECT AUDITPOLICYNAME, AUDITPOLICYID 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE IN (' ')

If no rows are returned, this is a finding. 

Using the AUDITPOLICYID from above query find the details of audit policy: 
DB2&gt; SELECT AUDITPOLICYNAME, CONTEXTSTATUS, SECMAINTSTATUS, OBJMAINTSTATUS, ERRORTYPE AS ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES 
           WHERE AUDITPOLICYID = &lt;audit policy ID&gt;

If the values for CONTEXTSTATUS, OBJMAINTSTATUS and SECMAINTSTATUS are not 'B' (Both) or ERRORTYPE is not 'A' (Audit), this is a finding.</check-content></check></Rule></Group><Group id="V-74643"><title>SRG-APP-000504-DB-000354</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89317r1_rule" severity="medium" weight="10.0"><version>DB2X-00-011600</version><title>DB2 must generate audit records for all privileged activities or other system-level access.</title><description>&lt;VulnDiscussion&gt;Without tracking privileged activity, it would be difficult to establish, correlate, and investigate the events relating to an incident or identify those responsible for one. 

System documentation should include a definition of the functionality considered privileged.

A privileged function in this context is any operation that modifies the structure of the database, its built-in logic, or its security settings. This would include all Data Definition Language (DDL) statements and all security-related statements. In an SQL environment, it encompasses, but is not necessarily limited to:

CREATE
ALTER
DROP
GRANT
REVOKE

There may also be Data Manipulation Language (DML) statements that, subject to context, should be regarded as privileged. Possible examples in SQL include:

TRUNCATE TABLE;
DELETE, or
DELETE affecting more than n rows, for some n, or
DELETE without a WHERE clause;

UPDATE or
UPDATE affecting more than n rows, for some n, or
UPDATE without a WHERE clause;

any SELECT, INSERT, UPDATE, or DELETE to an application-defined security table executed by other than a security principal.

Depending on the capabilities of the DBMS and the design of the database and associated applications, audit logging may be achieved by means of DBMS auditing features, database triggers, other mechanisms, or a combination of these.

Note that it is particularly important to audit, and tightly control, any action that weakens the implementation of this requirement itself, since the objective is to have a complete audit trail of all administrative activity.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81243r1_fix">Define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement: 

DB2&gt; CREATE AUDIT POLICY &lt;DB audit policy name&gt; 
           CATEGORIES SECMAINT STATUS BOTH, OBJMAINT STATUS BOTH, AUDIT STATUS BOTH, SYSADMIN STATUS BOTH, CONTEXT STATUS BOTH 
           ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement. Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, apply the policy created to the database: 
DB2&gt; AUDIT DATABASE USING POLICY &lt;DB audit policy name&gt;</fixtext><fix id="F-81243r1_fix" /><check system="C-74529r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Run the following SQL statement to ensure that an audit policy is defined upon the database: 
DB2&gt; SELECT AUDITPOLICYNAME, AUDITPOLICYID 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE IN (' ') 

If no rows are returned, this is a finding. 

Using the AUDITPOLICYID from above query find the details of the audit policy: 
DB2&gt; SELECT AUDITPOLICYNAME, SECMAINTSTATUS, SYSADMINSTATUS, OBJMAINTSTATUS, AUDITSTATUS, CONTEXTSTATUS, ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES 
           WHERE AUDITPOLICYID = &lt;audit policy ID&gt;

If the values for SECMAINTSTATUS, OBJMAINTSTATUS, SYSADMINSTATUS, AUDITSTATUS and CONTEXTSTATUS are not 'B' (Both) or ERRORTYPE is not 'A' (Audit), this is a finding.</check-content></check></Rule></Group><Group id="V-74645"><title>SRG-APP-000503-DB-000351</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89319r1_rule" severity="medium" weight="10.0"><version>DB2X-00-011500</version><title>DB2 must generate audit records when unsuccessful logons or connection attempts occur.</title><description>&lt;VulnDiscussion&gt;For completeness of forensic analysis, it is necessary to track failed attempts to log on to the DBMS. While positive identification may not be possible in a case of failed authentication, as much information as possible about the incident must be captured.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81245r1_fix">Run the following command to define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement: 
DB2&gt; CREATE AUDIT POLICY &lt;DB audit policy name&gt; 
           CATEGORIES VALIDATE STATUS BOTH, CONTEXT STATUS BOTH 
           ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement. Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, run the following command to apply the policy created above to the database: 
DB2&gt; AUDIT DATABASE USING POLICY &lt;DB audit policy name&gt;</fixtext><fix id="F-81245r1_fix" /><check system="C-74531r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>To meet these requirements at the VALIDATE, CONTEXT category auditing needs to be implemented at database level. 

Run the following SQL statement to ensure that an audit policy is defined upon the database: 
DB2&gt; SELECT AUDITPOLICYNAME, AUDITPOLICYID 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE IN (' ')

If no rows are returned, this is a finding. 

Using the AUDITPOLICYID from above query find the details of audit policy: 
DB2&gt; SELECT AUDITPOLICYNAME, CONTEXTSTATUS, VALIDATESTATUS, ERRORTYPE AS ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES 
           WHERE AUDITPOLICYID = &lt;audit policy ID&gt;

If the values for CONTEXTSTATUS and VALIDATESTATUS are not 'B' (Both) or ERRORTYPE is not 'A' (Audit), this is a finding.</check-content></check></Rule></Group><Group id="V-74647"><title>SRG-APP-000503-DB-000350</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89321r1_rule" severity="medium" weight="10.0"><version>DB2X-00-011400</version><title>DB2 must generate audit records when successful logons or connections occur.</title><description>&lt;VulnDiscussion&gt;For completeness of forensic analysis, it is necessary to track who/what (a user or other principal) logs on to the DBMS.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81247r1_fix">Run the following command to define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement: 
DB2&gt; CREATE AUDIT POLICY &lt;audit policy name&gt; 
           CATEGORIES VALIDATE STATUS BOTH, CONTEXT STATUS BOTH 
           ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement. Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, run the following command to apply the policy created above to the database: 
DB2&gt; AUDIT DATABASE USING POLICY &lt;audit policy name&gt;</fixtext><fix id="F-81247r1_fix" /><check system="C-74533r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>To meet these requirements at the VALIDATE, CONTEXT category auditing needs to be implemented at database level. 

Run the following SQL statement to ensure that an audit policy is defined upon the database: 
DB2&gt; SELECT AUDITPOLICYNAME, AUDITPOLICYID 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE IN (' ')

If no rows are returned, this is a finding. 

Using the AUDITPOLICYID from above query find the details of audit policy: 
DB2&gt; SELECT AUDITPOLICYNAME, CONTEXTSTATUS, VALIDATESTATUS, ERRORTYPE AS ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES 
           WHERE AUDITPOLICYID = &lt;audit policy ID&gt;

If the values for CONTEXTSTATUS and VALIDATESTATUS are not 'B' (Both) or ERRORTYPE is not 'A' (Audit), this is a finding.</check-content></check></Rule></Group><Group id="V-74649"><title>SRG-APP-000501-DB-000337</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89323r1_rule" severity="medium" weight="10.0"><version>DB2X-00-011100</version><title>DB2 must generate audit records when unsuccessful attempts to delete security objects occur.</title><description>&lt;VulnDiscussion&gt;The removal of security objects from the database/DBMS would seriously degrade a system's information assurance posture. If such an action is attempted, it must be logged.

To aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81249r1_fix">Run the following command to define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement: 
DB2&gt; CREATE AUDIT POLICY &lt;DB audit policy name&gt; 
           CATEGORIES SECMAINT STATUS BOTH, OBJMAINTSTATUS STATUS BOTH, CONTEXT STATUS BOTH 
           ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement. Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, run the following command to apply the policy created above to the database: 
DB2&gt; AUDIT DATABASE USING POLICY &lt;DB audit policy name&gt;</fixtext><fix id="F-81249r1_fix" /><check system="C-74535r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>To meet these requirements at the SECMAINT, OBJMAINT, and CONTEXT categories, auditing need to be implemented at the database level. 

Run the following SQL statement to ensure that an audit policy is defined upon the database: 
DB2&gt; SELECT AUDITPOLICYNAME, AUDITPOLICYID 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE IN (' ')

If no rows are returned, this is a finding. 

Using the AUDITPOLICYID from above query find the details of audit policy: 
DB2&gt; SELECT AUDITPOLICYNAME, CONTEXTSTATUS, SECMAINTSTATUS, OBJMAINTSTATUS, ERRORTYPE AS ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES 
           WHERE AUDITPOLICYID = &lt;audit policy ID&gt;

If the values for CONTEXTSTATUS, OBJMAINTSTATUS and SECMAINTSTATUS are not 'B' (Both) or ERRORTYPE is not 'A' (Audit), this is a finding.</check-content></check></Rule></Group><Group id="V-74651"><title>SRG-APP-000502-DB-000348</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89325r1_rule" severity="medium" weight="10.0"><version>DB2X-00-011200</version><title>DB2 must generate audit records when categorized information (e.g., classification levels/security levels) is deleted.</title><description>&lt;VulnDiscussion&gt;Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.

For detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81251r1_fix">Define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement: 
DB2&gt; CREATE AUDIT POLICY &lt;DB audit policy name&gt; 
           CATEGORIES EXECUTE STATUS BOTH, CONTEXT STATUS BOTH 
           ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement.  Only the categories explicitly named in the statement will be affected.  In this case, the changes take effect immediately.

If CREATE was used above, run the following command to apply the policy created above to the database: 
DB2&gt; AUDIT DATABASE USING POLICY &lt;DB audit policy name&gt;

Define an audit policy to audit deletes (DMLs) on required tables. 
DB2&gt; CREATE AUDIT POLICY &lt;table audit policy name&gt; 
           CATEGORIES EXECUTE STATUS BOTH, CONTEXT STATUS BOTH 
           ERROR TYPE AUDIT

To modify an existing audit policy, replace "CREATE" with "ALTER" in the preceding statement.  Only the categories explicitly named in the statement will be affected. In this case, the changes take effect immediately.

If CREATE was used above, run the following command to apply the policy created above to each required table:
DB2&gt; AUDIT TABLE &lt;table name&gt; USING POLICY &lt;table audit policy name&gt;</fixtext><fix id="F-81251r1_fix" /><check system="C-74537r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Get a list of tables from ISSO/DBA where the categorized information is stored. 

If there are no tables with categorized information, this is not applicable (NA).

Run the following SQL statement to ensure that an audit policy is defined upon all the required tables and/or the database:
DB2&gt; SELECT AUDITPOLICYNAME, OBJECTSCHEMA, OBJECTNAME, OBJECTTYPE 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE IN ('T',' ')

If no rows are returned, this is a finding. 

If a row with OBJECTTYPE of ' ' (Database; value is a blank) exists in the output, it is a database level policy. 

If a row with OBJECTTYPE of 'T' exists in the output, it is a table level policy. 

For each audit policy returned in the statement above, run the following SQL statement to confirm that the CONTEXT and EXECUTE categories are part of that policy: 
DB2&gt; SELECT AUDITPOLICYNAME, CONTEXTSTATUS, EXECUTESTATUS, ERRORTYPE AS ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES
           WHERE AUDITPOLICYID = &lt;audit policy ID&gt;

If the database audit policy has the values for the CONTEXTSTATUS and EXECUTESTATUS columns set to 'S' (Success) or 'B' (Both) and the value in the ERRORTYPE column set to 'A' (Audit), this is not a finding. 

If the database policy does not exist or does not cover CONTEXTSTATUS and EXECUTESTATUS then check if the appropriate policies are defined for all the required tables. 

If any required application table audit policies do not have the values for the CONTEXTSTATUS and EXECUTESTATUS columns set to 'S' (Success) or 'B' (Both) or the value in the ERRORTYPE column set to 'A' (Audit), then this is a finding.</check-content></check></Rule></Group><Group id="V-74653"><title>SRG-APP-000502-DB-000349</title><description>&lt;GroupDescription&gt;&lt;/GroupDescription&gt;</description><Rule id="SV-89327r1_rule" severity="medium" weight="10.0"><version>DB2X-00-011300</version><title>DB2 must generate audit records when unsuccessful attempts to delete categorized information (e.g., classification levels/security levels) occur.</title><description>&lt;VulnDiscussion&gt;Changes in categorized information must be tracked. Without an audit trail, unauthorized access to protected data could go undetected.

To aid in diagnosis, it is necessary to keep track of failed attempts in addition to the successful ones.

For detailed information on categorizing information, refer to FIPS Publication 199, Standards for Security Categorization of Federal Information and Information Systems, and FIPS Publication 200, Minimum Security Requirements for Federal Information and Information Systems.&lt;/VulnDiscussion&gt;&lt;FalsePositives&gt;&lt;/FalsePositives&gt;&lt;FalseNegatives&gt;&lt;/FalseNegatives&gt;&lt;Documentable&gt;false&lt;/Documentable&gt;&lt;Mitigations&gt;&lt;/Mitigations&gt;&lt;SeverityOverrideGuidance&gt;&lt;/SeverityOverrideGuidance&gt;&lt;PotentialImpacts&gt;&lt;/PotentialImpacts&gt;&lt;ThirdPartyTools&gt;&lt;/ThirdPartyTools&gt;&lt;MitigationControl&gt;&lt;/MitigationControl&gt;&lt;Responsibility&gt;&lt;/Responsibility&gt;&lt;IAControls&gt;&lt;/IAControls&gt;</description><reference><dc:title>DPMS Target IBM DB2 LUW 10.5 for Linux</dc:title><dc:publisher>DISA</dc:publisher><dc:type>DPMS Target</dc:type><dc:subject>IBM DB2 LUW 10.5 for Linux</dc:subject><dc:identifier>3161</dc:identifier></reference><ident system="http://iase.disa.mil/cci">CCI-000172</ident><fixtext fixref="F-81253r1_fix">Run the following command to define an audit policy with the needed subset using the CREATE AUDIT POLICY SQL statement: 
DB2&gt; CREATE AUDIT POLICY &lt;DB audit policy name&gt; 
           CATEGORIES SECMAINT STATUS BOTH, CONTEXT STATUS BOTH 
           ERROR TYPE AUDIT

Run the following command to apply the policy created above to the database: 
DB2&gt; AUDIT DATABASE USING POLICY &lt;DB audit policy name&gt;</fixtext><fix id="F-81253r1_fix" /><check system="C-74539r1_chk"><check-content-ref name="M" href="DPMS_XCCDF_Benchmark_IBM_DB2_V10-5_LUW_STIG.xml" /><check-content>Get a list of tables from ISSO/DBA where the categorized information is stored. 

If there are no tables with categorized information, this is not applicable (NA).

Run the following SQL statement to ensure that an audit policy is defined upon all the required tables and/or the database:
DB2&gt; SELECT AUDITPOLICYNAME, OBJECTSCHEMA, OBJECTNAME, OBJECTTYPE 
           FROM SYSCAT.AUDITUSE 
           WHERE OBJECTTYPE IN ('T',' ')

If no rows are returned, this is a finding. 

If a row with OBJECTTYPE of ' ' (Database; value is a blank) exists in the output, it is a database level policy. 

If a row with OBJECTTYPE of 'T' exists in the output, it is a table level policy. 

For each audit policy returned in the statement above, run the following SQL statement to confirm that the CONTEXT and EXECUTE categories are part of that policy: 
DB2&gt; SELECT AUDITPOLICYNAME, CONTEXTSTATUS, EXECUTESTATUS, ERRORTYPE AS ERRORTYPE 
           FROM SYSCAT.AUDITPOLICIES
           WHERE AUDITPOLICYID = &lt;audit policy ID&gt;

If the database audit policy has the values for the CONTEXTSTATUS and EXECUTESTATUS columns set to 'F' (Failure) or 'B' (Both) and the value in the ERRORTYPE column set to 'A' (Audit), this is not a finding. 

If the database policy does not exist or does not cover CONTEXTSTATUS and EXECUTESTATUS then check if the appropriate policies are defined for all the required tables. 

If any required application table audit policies do not have the values for the CONTEXTSTATUS and EXECUTESTATUS columns set to 'F' (Failure) or 'B' (Both) or the value in the ERRORTYPE column set to 'A' (Audit), then this is a finding.</check-content></check></Rule></Group></Benchmark>